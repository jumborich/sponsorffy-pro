{"version":3,"sources":["components/routes/ReRoute.js","components/routes/AuthContext.js","components/routes/Private.js","utils/Loader.js","components/routes/Public.js","redux/auth/AuthActionType.js","redux/auth/AuthAction.js","redux/user/UserActionType.js","redux/user/UserAction.js","utils/CheckEmail.js","utils/Errors.js","config/BaseUrl.js","components/auth/Login.js","config/EndPoints.js","components/auth/ForgotPassword.js","utils/CheckPassword.js","components/auth/Signup.js","utils/imageParams.js","components/media/sponsorfy_ty.js","components/pricing/pricing_package.js","components/pricing/pricing.js","components/Modal/backdrop.js","components/Modal/confirmation_modal.js","utils/_useAxios.js","redux/navBar/NavActionTypes.js","redux/navBar/NavActions.js","utils/handleMediaUpload.js","components/settings/account.js","components/settings/password_change.js","utils/countDownTimer.js","components/leaderboard/renderCountDown.js","components/navigation/navLink.js","utils/verify.js","components/navigation/navbar.js","components/auth/Logout.js","components/Modal/drawer/drawer_item.js","components/Modal/drawer/drawer.js","components/Modal/drawer/index.js","components/settings/settings.js","components/feed/videoJs.js","components/feed/getMedia.js","utils/Format.js","redux/utils/postActionTypes.js","redux/utils/postActions.js","utils/FeedAction.js","components/Modal/testModal.js","components/Modal/errorModal.js","components/Modal/shareModal.js","components/feed/toast.js","components/profile/LargeView.js","components/profile/ProfileTab.js","redux/profile/ActionType.js","redux/profile/action.js","components/profile/profile.js","components/test/TestLeft.js","redux/test/ActionTypes.js","redux/test/Actions.js","components/test/FooterNav.js","components/test/stateActions.js","components/test/Timer.jsx","components/test/TestRight.js","components/test/TestNav.js","components/test/reading/TaskOne.js","components/test/reading/TaskTwo.js","components/test/testQuery.js","components/test/TestContextProvider.js","components/test/children/utils/stateTemplate.js","components/test/children/utils/sectionHeader.js","components/test/children/question_blocks/multiple_choice/singleAnswer.js","components/test/children/question_blocks/summary_completion/summaryCompletion.js","components/test/children/question_blocks/note_completion/noteCompletion.js","components/test/children/question_blocks/heading_matching/headingMatching.js","components/test/children/question_blocks/paragraph_matching/paragraphMatching.js","components/test/children/question_blocks/sentence_matching/sentenceMatching.js","components/test/children/question_blocks/true_false/trueFalse.js","components/test/reading/Reading.js","components/test/children/utils/selectionTable.js","components/test/children/question_blocks/writing/writingBox.js","components/test/writing/TaskOne.js","components/test/writing/TaskTwo.js","components/test/writing/Writing.js","components/test/children/question_blocks/table_completion/tableCompletion.js","components/test/listening/TaskOne.js","components/test/children/question_blocks/sentence_completion/sentenceCompletion.js","components/test/listening/TaskTwo.js","components/test/listening/Listening.js","components/test/speaking/speakingContext.js","components/test/children/utils/recordingIndicator.js","components/test/children/question_blocks/voiceChat/audioSummary.js","components/test/speaking/TaskOne.js","components/test/children/utils/singleChatBox.js","components/test/children/question_blocks/voiceChat/singleChat.js","components/test/speaking/TaskTwo.js","components/test/speaking/Speaking.js","components/test/RenderTestType.js","components/test/Test.js","components/test/markTest.js","redux/leaderBoard/LBActionTypes.js","redux/leaderBoard/LBActions.js","components/leaderboard/fetch/fetchBoard.js","components/leaderboard/contexts/leaderboardContext.js","components/leaderboard/scoreboard.js","components/leaderboard/leaderboard_item.js","components/leaderboard/renderLeaders.js","components/leaderboard/renderBoard.js","components/leaderboard/categoryNav.js","components/leaderboard/leaderboard_small.js","components/shared/hover_content.js","components/shared/panel.js","components/navigation/navbar_flex.js","components/leaderboard/leaderboard_large.js","components/Modal/uploadModal/upload_modal.js","components/Modal/uploadModal/index.js","components/home/home.js","components/error/404.js","components/feed/feedLargeView.js","components/feed/FeedItem.js","components/feed/feed.js","components/entertainment/entertainment.js","components/handwork/handwork.js","components/sports/sports.js","components/academia/academia.js","redux/utils/postQuery.js","components/feed/index.js","components/routes/TestRoute.js","App.js","redux/user/reducer.js","redux/profile/reducer.js","redux/auth/AuthReducer.js","redux/entertainment/reducer.js","redux/handwork/reducer.js","redux/sports/reducer.js","redux/test/reducer.js","redux/navBar/reducer.js","redux/leaderBoard/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["ReRoute","to","navigate","useNavigate","useEffect","replace","Context","children","pathname","useLocation","isUserLoggedIn","useSelector","state","auth","testSession","user","auth_key","window","localStorage","getItem","isTakingTest","candidateId","AuthContext","Protector","Private","UploadSpinner","canSpin","className","size","color","renderLoader","style","height","display","margin","position","marginTop","marginBottom","left","Public","_id","LOG_IN","IS_LOGGED_IN","LOG_OUT","isLoggedIn","boolType","type","payload","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","FETCH_USER_LOGOUT","fetchUserSuccess","CheckEmail","email","test","error","message","BaseUrl","Login","dispatch","useDispatch","useState","setEmail","password","setPassword","isLoading","setIsLoading","errorMessagePassword","setErrorMessagePassword","errorMessageEmail","setErrorMessageEmail","showPassword","setShowPassword","authErrorMessage","setAuthErrorMessage","sendLoginRequest","axios","method","url","data","withCredentials","then","response","status","setItem","catch","err","htmlFor","onChange","e","target","value","name","id","onClick","preventDefault","_emailErrorMsg","checkEmail","length","_handleSubmit","Date","getFullYear","ForgotPassword","props","credentials","setCredentials","placeholder","CheckPassword","Signup","fullname","setFullname","username","setUsername","phone","setPhone","country","setCountry","next","setNext","errorMessageFullname","setErrorMessageFullname","errorMessageUsername","setErrorMessageUsername","errorMessagePhone","setErrorMessagePhone","errorMessageCountry","setErrorMessageCountry","sendSignupRequest","countryFrom","console","log","defaultValue","disabled","_passwordErrorMsg","checkPassword","prevPath","handleNext","BaseImg","src","alt","srcSet","sizes","defaultAvatar","avatarParam","width","avatarSrc","s","m","l","AVATAR","largeAvSrcSet","regAvSrcSet","isLargeAvatar","getSrc","feedW","FEEDIMG","profileW","profileSrcSet","ProfileGridImg","LargeViewImg","SponsorTv","photo","controls","autoPlay","muted","playsInline","poster","variants","over","scale","boxShadow","transition","ease","out","PricingPackage","amount","description","isBuying","setIsBuying","isHover","setIsHover","div","onMouseEnter","onMouseLeave","animate","buyToken","Pricing","BackDrop","isModal","handleModal","overflow","currentTarget","ConfirmationModal","confirmationCode","setConfirmationCode","baseURL","_useAxios","body","params","toUpperCase","SET_UPLOAD","SET_UPLOAD_RESPONSE","SET_CURRENT_COMPONENT","SET_TEST_MODAL","SET_UPLOAD_MODAL","SET_DRAWER_MODAL","SET_ERR_MESSAGE","setUpload","upload","setUploadResponse","setCurrentComponent","component","setModal","modalType","setErrMesage","uploadToServer","file","fieldName","req","formData","ORDER","media_id","post_id","FormData","append","res","video","success","FulfillABR","uploadResponse","navBar","image","thumb","handleMedia","startsWith","includes","document","createElement","URL","createObjectURL","ondurationchange","revokeObjectURL","duration","Math","floor","Account","isLoggedOut","setIsLoggedOut","setIsModal","avatarUrl","setAvatarUrl","avatarFile","setAvatarFile","uploadResp","setUploadResp","updateResp","setUpdateResp","formValues","setFormValues","setUserName","setFullName","phoneNumber","setPhoneNumber","countryTo","setCountryTo","setCountryFrom","removeWarning","timerId","setTimeout","clearTimeout","fileType","prevFormVals","accept","imgFile","files","imgUrl","prev","initVal","toLowerCase","newState","trackFormChanges","Object","keys","resp","PasswordChange","isPasswordModal","setIsPasswordModal","isReadOnly","readOnly","showPasswordModal","countDownTimer","countDownTo","callback","timeIntervalID","setInterval","now","getTime","days","hours","minutes","seconds","toString","padStart","clearInterval","RenderCountDown","leaderboard","boardItems","setDays","setHours","setMinutes","setSeconds","timeId","NavLink","inActiveClassName","activeClassName","rest","isActive","allClassNames","canContest","coins","errAction","canVote","isContestant","Navbar","isSettings","setIsSettings","fixedNav","setFixedNav","location","btnText","setBtnText","split","title","uploadedFile","Logout","alert","removeItem","DrawerItem","visible","x","opacity","hidden","Drawer","profileUrl","join","Index","isDrawerModal","Settings","baseOptions","preload","playbackRates","disablePictureInPicture","responsive","fill","html5","vhs","enableLowInitialPlaylist","fastQualityChange","overrideNative","VideoJS","options","videoRef","useRef","playerRef","current","options_","videojs","dispose","stopPropagation","ref","getMedia","ImgTag","item","fileUrl","vidOptions","sources","derivedUrls","MONTHS","Format","points","formatter","len","prefix","isOneK","decRequired","formattedDigts","substr","newPoints","newformat","hundK","oneM","tenM","hundM","toFixed","createdAt","createdAtMillis","timeDiffMillSecs","timeDiffMins","round","timeDiffHrs","secs","Number","getMonth","getDate","rank","ordString","ArrayRank","lastItem","formatRank","this","trunc","FETCH_POSTS","NEXT_CURSOR","POSTS_FINISHED","SAVE_POST_IDS","SHOW_ALERT","SAVE_SCROLL_POSITION","fetchPosts","posts","categoryName","isPostsFinished","showAlert","alertOBJ","saveScroll","scrollPosition","FeedAction","postIdSaver","parentName","postId","storePostId","push","postIdsArray","upvotesArray","currentUserId","hasAlreadyVoted","upvotesArrLen","i","voterId","postDetails","creator","TestModal","_useModal","header","subHeader","choice","choiceParams","isTestModal","closeModal","ErrorModal","upvote","choiceParam","querySelector","click","balance","ShareModal","shareUrl","setShareUrl","shareText","setShareText","shareIconSize","isRounded","setIsRounded","pinterestMedia","setPinterestMedia","entertainment","sharePost","isModalPaused","media","getElementById","paused","player","pause","play","FacebookShareButton","quote","hashtag","FacebookIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterShareButton","via","hashtags","TwitterIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","subject","EmailIcon","PinterestShareButton","PinterestIcon","Toast","alertType","timeOut","alertMessage","main","subMain","alertName","View","profileAction","tabType","closeView","format","feedState","profile","shared","modalItem","dispatchModal","getRate","time","rate","upvoteCount","upvoteRate","totalAnswered","timeToComplete","getScore","score","expired","category","feedAction","creatorId","subCategory","hasUpVoted","upvotes","__item_id__","timer","createUpvote","total_score","reading_score","writing_score","listening_score","speaking_score","testMode","version","renderTabView","ProfileTab","placeHolder","setPlaceHolder","post","dataFinished","setDataFinished","currentTab","nextCursor","currentData","getAllData","testGridItem","items","itemsCount","map","index","setLargeView","isFetching","Loader","LargeView","FETCH_USER_POST","IS_FETCHING_POST","SET_USER_POST_CURSOR","FETCH_USER_TEST","IS_FETCHING_TEST","SET_USER_TEST_CURSOR","SET_IS_MODAL","ProfileActions","feed","TYPE","tabTypeUpper","endPoint","cursor","dataCount","fetchProfileFeed","setNextCursor","prevState","show","Profile","useParams","isScroll","setIsScroll","isUser","setIsUser","profileTab","setProfileTab","verticalScrollListener","avatar","avatarVisibility","getBoundingClientRect","bottom","paramUserId","paramUserName","forEach","getMe","profileWrapper","innerWidth","addEventListener","removeEventListener","img","initial","total","tests","bonus","totalCount","GrideItem","qNumber","colCriteria","answer","hasOwnProperty","audioUrl","TestLeft","stateTemplate","SET_ACTIVATE_PAGE","SET_CURRENT_TYPE","SET_ANSWERS","SET_STATE_TEMPLATE","setActivePage","page","setCurrentType","currType","setAnswers","answers","isNewAnswer","setStateTemplate","FooterNav","currentType","onPageChange","backgroundColor","border","StateActions","testTypes","indexOf","prevType","nextType","task","taskType","querySelectorAll","tag","input","checked","nodeName","option","shouldSubmit","onTestSubmit","Timer","isChangeStyle","hrs","mins","setTime","tick","duration_Millis","TestRight","TestNav","day","setDay","month","setMonth","year","setYear","totalPoints","toLocaleDateString","date","TaskOne","questions","SectionComp","setDefaultValues","passage","sections","taskAnswers","setTaskAnswers","scrollTo","reading_ans","task_1","saveOnBlur","setState","question_number","prevTaskOne","pageOne","section","TaskTwo","scrollIntoView","prevTaskTwo","pageTwo","TestQuery","setQuestions","testId","userOwnTestId","JSON","stringify","answerItem","blob","question_num","TestContext","createContext","TestContextProvider","testQuery","stateActions","setTestModal","activePage","answerObj","answersToSave","parsing_rule","pattern","replacement","getNewTest","testMain","innerHTML","rule","match","Reading","Provider","onPrevious","borderLeft","borderColor","borderRight","onNext","testModalOpts","useStateTemplate","totalQuestions","Array","q","mark","SectionHeader","heading","sub_heading","subHeading","SingleAnswerMultipleChoice","question_blocks","question","answer_options","onBlur","SummaryCompletion","tabIndex","onKeyDown","NoteCompletion","table","table_items","HeadingMatching","ParagraphMatching","paragraphs","paragraph","SentenceMatching","TrueFalse","sub_heading_2","subHeading_2","useContext","renderPassage","SelectionTable","WritingBox","article","taskOne","setTaskOne","writing_ans","useTaskOne","filter","marginRight","TaskTWO","taskTwo","setTaskTwo","task_2","useTaskTwo","operator","number","trim","sentences","sentence","table_items_1","table_items_2","block","Writing","TableCompletion","cellSpacing","cellPadding","colSpan","textAlign","fontWeight","verticalAlign","item_1","item_2","listening_ans","audio","SentenceCompletion","Listening","speechContext","SpeechContextProvider","prev_Location","isRecordingId","setIsRecordingId","toggleRecordMode","setToggleRecordMode","recordingSecs","setRecordingSecs","recordingMins","setRecordingMins","mediaRecorder","setMediaRecorder","shouldRecord","timerIds","setIntervalID","addTimeoutId","removeTimeoutId","stopRecording","stop","recordAudio","navigator","mediaDevices","getUserMedia","mediaStream","MediaRecorder","recordIndicator","okayBtn","cancelBtn","start","timeCount","alternateAdd","classList","add","alternateRemove","remove","startRecording","chunks","ondataavailable","event","onstop","Blob","quality","onRecordOkay","RecordingIndicator","AudioSummary","shouldDisplay","renderSpeech","getWriteUpAnswers","getStateTemplate","audioDuration","isAudioQuestion","setIsAudioQuestion","speaking_ans","isAudioUrl","displayType","first_condition","quests_answered","questionNum","SingleChatBox","audios","getOption","getAudioUrl","borderRadius","SingleChat","undefined","audioId","Speaking","RenderTestType","renderType","Test","MarkTest","ProfileAction","timerIDs","setTimerIDs","textContent","setTextContent","isDoneMarking","setIsDoneMarking","markingDone","viewResult","prevIds","gradedTest","gettingGrades","SET_LEADERS","SET_PAGES","SET_BOARD_ItEMS","SET_LEADER_COUNT","setBoardItems","_useHelper","all","academia","handwork","sports","FetchBoard","boardType","scoreboardData","boardData","pages","leaders","leaderCount","currentCategory","totalData","retrieved","setLeaders","setLeaderCount","socket","io","BoardContext","BoardContextProvider","boardState","setCurrentCategory","shouldFetch","setShouldFetch","fetch","boardListener","BoardType","getScoreboard","getLeaderboard","toggleFetch","on","emit","off","Scoreboard","screenType","boardIcons","ranks","LeaderBoardItem","borderClassName","pillClassName","RenderLeaders","leader","getRank","pageCount","RenderBoard","CategoryPill","activeClass","setCurrentCat","BoardTitle","BoardDescription","CategoryNav","getClass","selectCategory","LeaderBoardMobile","delay","exit","HoverContent","isShow","setIsShow","onMouseOver","content","Panel","showHideMore","setShowHideMore","sharedSettings","sharedLogout","bonusPoints","Navbar_Flex","LeaderboardLarge","selectOptions","DisplayUploadError","FORM","setIsSubmitted","submitted","setSubmitted","postBody","setPostBody","formFieldErr","setFormFieldErr","setTitle","isFocus","setIsFocus","uploadPloast","onSubmit","toLocaleLowerCase","onFocus","HandleVidUpload","onVideoLoad","canvas","videoWidth","videoHeight","getContext","drawImage","toBlob","UploadModal","isUploadModal","setUrl","setType","Home","NotFound","FeedLargeView","setStatus","from","FeedItem","observeItem","observer","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","volume","root","rootMargin","threshold","handleObserver","observe","unobserve","memo","Feed","inFeed","feedItem","scrollRef","onScroll","scrollOffset","RenderFeedItem","getFeedItemHeight","feedLength","overscanCount","itemCount","itemSize","initialScrollOffset","prevProps","nextProps","Entertainment","PostQuery","postsFinished","setPostsFinished","showLoader","setShowLoader","parentState","feedCount","postQuery","getPosts","setFetching","HandWork","Sports","Academia","modalOptions","recentScore","capParentName","newPostsArr","ParentCategory","FeedIndex","TestAuth","App","path","element","initialState","loading","userReducer","action","initState","isfecthing","profileReducer","initAuthState","authReducer","initialEntState","onclick","entReducer","handworkReducer","sportsReducer","testReducer","navReducer","key","leaderboardReducer","rootReducer","combineReducers","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppRoot","store","statusText","render"],"mappings":"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","file":"static/js/main.7dd5f283.chunk.js","sourcesContent":["import {useEffect} from 'react';\nimport { useNavigate} from 'react-router-dom';\n\n// This redirects from path to the specified to-path\nconst ReRoute = ({to}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate(to, {replace:true})\n  },[to])\n  \n  return null;\n}\n\nexport default ReRoute;","/**Serves as a parent for all private routes */\nimport {useEffect} from 'react';\nimport { useNavigate, useLocation} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nconst Context = ({ children }) =>{\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const{isUserLoggedIn} = useSelector((state) => state.auth);\n  const{testSession} = useSelector((state) => state.user.user);\n  const auth_key = typeof window !==\"undefined\" && localStorage.getItem(\"auth_key\"); //checks if user is logged in for user page refreshes\n  const isTakingTest = testSession && testSession.candidateId;\n\n  useEffect(() => {\n    // Log user out to enable cookie deletion\n    if(!auth_key) return navigate(\"/\", { replace: true});\n\n    if(isTakingTest) return navigate('/test',{replace: true})\n    \n\n  },[pathname])\n\n  // Keep user on this route  if logged in.\n  const render=() =>{    \n    if(isUserLoggedIn){\n\n      return children(useEffect, navigate, isTakingTest, pathname)\n    }\n\n    return null\n  };\n\n return render()\n};\n\nexport default function AuthContext({ children, Protector }){\n  return(\n    <Context>\n      {\n        (useEffect, navigate, isTakingTest, pathname) =>(\n          <Protector isTakingTest={isTakingTest} pathname={pathname} useEffect={useEffect} navigate={navigate}>\n            {children}\n          </Protector>\n        )\n      }\n    </Context>\n  )\n};","import AuthContext from \"./AuthContext\";\n\nconst Protector= ({ children, isTakingTest, pathname, useEffect, navigate }) =>{\n\n  useEffect(() => {\n    if(isTakingTest) return navigate(\"/test\",{replace: true});\n\n  },[pathname])\n\n  // Keep user on this route  if not in test session.\n  const render=() =>{    \n    if(!isTakingTest) return children;\n\n    return null\n  };\n\n return(render())\n}\n\nconst Private = ({ children }) => <AuthContext Protector={Protector}>{children}</AuthContext>\nexport default Private","import MoonLoader from \"react-spinners/MoonLoader\";\nconst renderLoader =()=>{\n  return(\n    <div className=\"post-feed-spinner\" style={{height:'70px', display:'block',margin: '20px auto',position:'relative'}}>\n        <div style={{marginTop:'15px', marginBottom:'15px', position:'absolute', left:'50%'}}>\n            <MoonLoader size={30}/>\n        </div>\n    </div>\n  )\n}\n\nexport const UploadSpinner = ({ canSpin }) =>{\n  return(\n    canSpin?\n    <div className=\"uploadModal-spinner\">\n      <span>\n        <MoonLoader size={80} color=\"white\"/>\n      </span>\n    </div>\n    :null\n  )\n}\nexport default renderLoader;","import {useEffect} from 'react';\nimport { useSelector } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport renderLoader from \"../../utils/Loader\";\n\nconst Public = ({ children }) => {\n  const navigate = useNavigate();\n  const{user} = useSelector((state) => state.user);\n  const isTakingTest = user.testSession && user.testSession.candidateId;\n  const auth_key = typeof window !==\"undefined\" && localStorage.getItem(\"auth_key\"); //checks if user is logged in for user page refreshes\n\n  // Push user to Home once logged in\n  useEffect(() =>{\n    if(auth_key && user._id){\n      if(isTakingTest){\n        return navigate('/test',{replace: true})\n        \n      }\n      else{\n        return navigate(\"/home\", { replace: true })\n      }\n    }\n\n  });\n\n  const renderRoute=()=>{\n    if(!auth_key){\n      return  children \n    }\n\n    return renderLoader();\n  }\n\n return renderRoute()\n}\nexport default Public;","\nexport const SIGN_UP = 'SIGN_UP';\n\nexport const LOG_IN = 'LOG_IN';\n\nexport const IS_LOGGED_IN = 'IS_LOGGED_IN';\n\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const FORGOT_PASSWORD = 'FORGOT_PASSWORD';\n\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\n\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\n","import {SIGN_UP, LOG_IN, IS_LOGGED_IN, LOG_OUT, FORGOT_PASSWORD, RESET_PASSWORD, UPDATE_PASSWORD} from './AuthActionType';\n\n// Action Creators: Functions that return an object with a type property\n\nexport const logIn = (user) =>({\n    type:LOG_IN,\n    payload:user\n});\n\nexport const isLoggedIn = (boolType) => {\n    return {\n        type:IS_LOGGED_IN,\n        payload: boolType\n    }\n}\n\nexport const logOut = () => ({\n    type:LOG_OUT,\n    payload:false  //Will be used to \n})","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\n\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\n\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE'\n\nexport const FETCH_USER_LOGOUT = 'FETCH_USER_LOGOUT'\n","import { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE,FETCH_USER_LOGOUT }from './UserActionType'\n\n// Action Creators\nexport const fetchUserRequest = ()=>({\n  type: FETCH_USER_REQUEST ,\n  payload: true\n})\nexport const fetchUserSuccess = (user)=>({\n  type: FETCH_USER_SUCCESS ,\n  payload: user\n})\n\nexport const fetchUserFailure = (error)=>({\n  type: FETCH_USER_FAILURE ,\n  payload:error\n})\n\nexport const fetchUserLogOut = ()=>({\n  type: FETCH_USER_LOGOUT\n})","import { emailRegexError } from \"./Errors\";\n\nconst CheckEmail = (email) => {\n  var regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (!regexEmail.test(email)) {\n    return {\n      error: true,\n      message: emailRegexError,\n    };\n  } else {\n    return {\n      error: false,\n      message: \"\",\n    };\n  }\n};\n\nexport default CheckEmail;\n","export const passwordLengthError = \"password must be greater than 8 characters\";\nexport const passwordRegexError = \"password must have atleast one number and symbol\";\nexport const emailRegexError = \"invalid email\";","\n// const BaseUrl = 'http://127.0.0.1:3001/api/v1/';\nconst BaseUrl = 'http://localhost:3001/api/v1/';\n\nexport default BaseUrl;","import \"./../../styles/auth.css\";\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { isLoggedIn } from \"../../redux/auth/AuthAction\";\nimport { fetchUserSuccess } from \"../../redux/user/UserAction\";\nimport checkEmail from \"../../utils/CheckEmail\";\nimport { BsEyeSlash, BsEye } from \"react-icons/bs\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport axios from \"axios\";\nimport BaseUrl from \"../../config/BaseUrl\";\nimport { LOG_IN } from \"../../config/EndPoints\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessagePassword, setErrorMessagePassword] = useState(\"\");\n  const [errorMessageEmail, setErrorMessageEmail] = useState(\"\");\n\n  const [showPassword, setShowPassword] = useState(\"\");\n  const [authErrorMessage, setAuthErrorMessage] = useState(\"\"); //Sets error message on login failure.\n\n  const _handleSubmit = (e) => {\n    e.preventDefault();\n    let _emailErrorMsg = checkEmail(email).message;\n\n    if (authErrorMessage) setAuthErrorMessage(\"\");\n\n    if (_emailErrorMsg) {\n      setErrorMessageEmail(_emailErrorMsg);\n    } else {\n      setErrorMessageEmail(\"\");\n    }\n    if (!password.length) {\n      setErrorMessagePassword(\"password must not be empty.\");\n    } else {\n      setErrorMessagePassword(\"\");\n    }\n    if(!checkEmail(email).error && password.length){\n      setIsLoading(true);\n\n      // Send off axios POST request to the server\n      sendLoginRequest();\n    }\n  };\n\n  const sendLoginRequest = () => {\n    //1) Server side authentication\n    axios({\n      method: \"POST\",\n      url: `${BaseUrl}${LOG_IN}`,\n      data: { email, password},\n      withCredentials: true,\n    })\n    .then((response) =>{\n      if (response.data.status === \"success\"){\n\n        // 1a) Set user object\n        dispatch(fetchUserSuccess(response.data.user));\n\n        // 1b) Set auth_key identifier\n        localStorage.setItem(\"auth_key\", \"#Judithmbonu\"); //\n\n        // 2) Set login status\n        dispatch(isLoggedIn(true));\n        \n        // 3) Set loading to false\n        setIsLoading(false);\n\n        // 4) Log user in\n        navigate(\"/home\", { replace: true});\n      }\n    })\n    .catch((err) => {\n      // 5) Stop spinner\n      setIsLoading(false);\n\n      // 6) Set the error message\n      setAuthErrorMessage(err?.response?.data?.message);\n\n      // 7) Dispatch login status\n      dispatch(isLoggedIn(false));\n    });\n  };\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-container\">\n        <div className=\"auth-navbar\">\n          <p>sponsorffy</p>\n        </div>\n        <div className=\"auth-form-container\">\n          <div className=\"auth-form-top\">\n            <p>We will sponsor you to your choice country overseas!</p>\n          </div>\n          <div className=\"auth-form-content\">\n            <div className=\"form-inputfield\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                type=\"email\"\n                name=\"email\"\n              />\n              <small className=\"form-inputfield-error\">{errorMessageEmail}</small>\n            </div>\n\n            <div className=\"form-inputfield\">\n              <label htmlFor=\"password\">Password</label>\n              <div id=\"input-pas\">\n                <input\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  type={!showPassword ? \"password\" : \"text\"}\n                  name=\"password\"\n                />\n                <div\n                  className=\"show-password-a\"\n                  onClick={() => setShowPassword(showPassword ? false : true)}\n                >\n                  {!showPassword ? (\n                    <BsEyeSlash size={23} />\n                  ) : (\n                    <BsEye size={23} />\n                  )}\n                </div>\n              </div>\n              <small className=\"form-inputfield-error\">{errorMessagePassword}</small>\n\n              <small className=\"form-inputfield-error\">{authErrorMessage}</small>\n            </div>\n\n            <div className=\"loading-auth\">\n              {isLoading ? <MoonLoader size={30} color={\"#122d7b\"} /> : null}\n            </div>\n          \n            <button onClick={e=>_handleSubmit(e)} className=\"submit-btn login-btn\">\n              <p>Log in</p>\n            </button>\n                  \n            <p className=\"OR-delimiter\">OR</p>\n            \n            <NavLink to={{ pathname: '/signup'}}>\n              <button className=\"submit-btn login-btn creat-btn\">\n              <p>Sign up</p>\n              </button>\n            </NavLink>\n\n            <div className=\"auth-contents-ext\">\n          <div className=\"forgot-password-a\">\n              <NavLink to={{ pathname: '/fp'}}> Forgot Password?</NavLink>\n          </div>\n          </div>\n          </div>   \n        </div>\n        <footer>&#169; {new Date().getFullYear()} sponsorffy Inc.</footer>\n      </div>\n    </div>\n  );\n};\nexport default Login;","\n// User Resource \nexport const UPDATE_ME = 'users/updateMe'\nexport const GET_USER = 'users/me'\n\n// Auth Resource\nexport const LOG_IN = 'auth/login'\nexport const LOG_OUT = 'auth/logout' \nexport const SIGN_UP = 'auth/signup';\n\n\n// Post Resource\nexport const GET_ALL_POSTS = 'posts'\nexport const CREATE_POST = 'posts'\n\n\n// Test Resource    \n\n\n\n// Upvote Resource\n\n\n\n// Upvote On Post Resource\n// export const CREATE_UPVOTE_ON_POST = (postId) => `posts/${postId}/upvotes`\n\n\n// Buy Token Resource\n\nexport const BUY_TOKEN= 'tokens/buyTokens';","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../../styles/auth.css\";\nimport {BsArrowLeft} from 'react-icons/bs';\n// import MoonLoader from \"react-spinners/MoonLoader\";\nimport { FaUserLock } from \"react-icons/fa\";\n\nconst ForgotPassword = (props) => {\n  const navigate = useNavigate();\n\n  const [credentials, setCredentials] = useState(\"\");\n  const _handleSubmit = (e) => {\n    e.preventDefault();\n    //validate email and password\n  };\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-container\">\n        <div className=\"auth-navbar\">\n          <p>Sponsorffy</p>\n        </div>\n        <div className=\"auth-form-container\">\n          <div className=\"auth-form-top\">\n            <FaUserLock size={70} />\n\n            <p>Trouble Logging In?</p>\n            <span  className=\"auth-form-des\">\n              Enter your <span>email </span>or  <span> phone number</span> and we'll send you a link to get\n              back into your account.\n            </span>\n          </div>\n          <div className=\"auth-form-content\">\n            <input\n              onChange={(e) => setCredentials(e.target.value)}\n              value={credentials}\n              type=\"text\"\n              placeholder=\"email or phone number\"\n            />\n\n            <button \n            onClick={(e) => _handleSubmit(e) }\n            className=\"submit-btn\">\n             <p>  Send </p>\n            </button>\n\n            <span className=\"divider-form\">or</span>\n            <button \n            onClick={() => navigate('/signup')}\n            className=\"submit-btn\">\n            <p>   Create Account</p>\n            </button>\n\n            <div\n              onClick={() => navigate('/')}\n             className=\"auth-prev-btn\">\n            <BsArrowLeft/>\n              <p>Back to Login</p>\n            </div>\n\n          </div>\n        </div>\n        <footer>\n        &#169; {new Date().getFullYear()} sponsorffy Inc.\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import { passwordLengthError } from \"./Errors\";\n\nconst CheckPassword = (password) => {\n  var regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/;\n  if (!regex.test(password)) {\n    if (password.length < 8) {\n      return {\n        error: true,\n        message: passwordLengthError,\n      };\n    }\n    //  else {\n    //   return {\n    //     error: true,\n    //     message: passwordRegexError,\n    //   };\n    // }\n  } else {\n    return {\n      error: false,\n      message: \"\",\n    };\n  }\n};\n\nexport default CheckPassword;\n","import { useState } from \"react\";\nimport {NavLink,useNavigate} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport checkPassword from \"../../utils/CheckPassword\";\nimport checkEmail from \"../../utils/CheckEmail\";\nimport {BsArrowLeft} from 'react-icons/bs';\nimport axios from 'axios';\nimport BaseUrl from '../../config/BaseUrl';\nimport {SIGN_UP} from '../../config/EndPoints';\nimport {fetchUserSuccess} from '../../redux/user/UserAction';\nimport {isLoggedIn} from '../../redux/auth/AuthAction';\nimport {RiArrowRightSLine} from 'react-icons/ri';\nimport {BsEyeSlash, BsEye} from 'react-icons/bs';\n\nconst Signup = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fullname, setFullname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const[next, setNext] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessagePassword, setErrorMessagePassword] = useState(\"\");\n  const [errorMessageEmail, setErrorMessageEmail] = useState(\"\");\n  const [errorMessageFullname, setErrorMessageFullname] = useState(\"\");\n\n  const [errorMessageUsername, setErrorMessageUsername] = useState(\"\");\n  const [errorMessagePhone, setErrorMessagePhone] = useState(\"\");\n  const [errorMessageCountry, setErrorMessageCountry] = useState(\"\");\n\n  const[showPassword, setShowPassword] = useState(\"\");\n\n  const _handleSubmit = (e) => {\n    e.preventDefault();\n    \n    //validate email and password\n    let _passwordErrorMsg = checkPassword(password) && checkPassword(password).message;\n   \n    // checkPassword(password).error\n    setErrorMessagePassword(_passwordErrorMsg);\n    // setErrorMessageEmail(_emailErrorMsg);\n    if(!phone.length) {\n      setErrorMessagePhone('phone number must not be empty.');\n    } else {\n      setErrorMessagePhone('');\n    }\n    if(!country.length) {\n      setErrorMessageCountry('Select the country you live in.');\n    } else {\n      setErrorMessageCountry('');\n\n    }\n    if(phone.length && country.length && !_passwordErrorMsg){\n      setIsLoading(true);\n\n      try {\n\n        sendSignupRequest();\n\n      } catch (error) {\n        console.log('trycatchErr:=:',error);\n      };\n    }\n  };\n\n  const sendSignupRequest = () => {\n    axios({\n      method: \"POST\",\n      url: `${BaseUrl}${SIGN_UP}`,\n      data:{\n        email,\n        password,\n        fullname,\n        username,\n        phone,\n        countryFrom:country\n      },\n      withCredentials: true\n    }).then((response) =>{\n      if(response.data.status === 'success'){\n        dispatch(fetchUserSuccess(response.data.user));\n\n        localStorage.setItem(\"auth_key\", \"Judithmbonu\");\n\n        dispatch(isLoggedIn(true));\n\n        // 3) Set loading to false\n        setIsLoading(false);\n\n        // 4) Log user in \n        navigate(\"/home\");\n      }\n    }).catch((error) => {\n      console.log('error:==:',error);\n    })\n  }\n\n  const handleNext = () => {\n    // Error check for email, fullname and username\n    let _emailErrorMsg = checkEmail(email).message;\n    setErrorMessageEmail(_emailErrorMsg);\n\n    if(!fullname.length) {\n      setErrorMessageFullname('fullname must not be empty.');\n    } else {\n      setErrorMessageFullname('');\n    }\n    if(!username.length) {\n      setErrorMessageUsername('username must not be empty.');\n    } else {\n      setErrorMessageUsername('');\n    }\n\n    if(!checkEmail(email).error && username.length && fullname.length) {\n      setErrorMessageEmail('');\n      setNext(true)\n    }\n  }\n\n  return (\n    <div className=\"auth-wrapper\">\n    <div className=\"auth-container\">\n      <div className=\"auth-navbar\">\n        <p>sponsorffy</p>\n      </div>\n      {!next ? (\n        <div className=\"auth-form-container form-container-up\">\n        <div className=\"auth-form-top\">\n        <p className=\"form-step\">Signup  1 of 2</p>\n        </div>\n        <div className=\"auth-form-content\">\n          <div className=\"form-inputfield\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              type=\"text\"\n              name=\"email\"\n            />\n            <small className=\"form-inputfield-error\">{errorMessageEmail}</small>\n          </div>\n\n          <div className=\"form-inputfield\">\n            <label htmlFor=\"fullname\">Fullname</label>\n          \n              <input\n                name=\"fullname\"\n                onChange={(e) => setFullname(e.target.value)}\n                value={fullname}\n                type=\"text\"\n              />\n            <small className=\"form-inputfield-error\">{errorMessageFullname}</small>\n          </div>\n\n          <div className=\"form-inputfield\">\n            <label htmlFor=\"username\">Username</label>\n          \n              <input\n                name=\"username\"\n                onChange={(e) => setUsername(e.target.value)}\n                value={username}\n                type=\"text\"\n              />\n            <small className=\"form-inputfield-error\">{errorMessageUsername}</small>\n          </div>\n\n          <button \n          type=\"submit\"\n           onClick={() => handleNext()}\n           className=\"submit-btn next-btn\">\n          <p> Next</p>\n         <RiArrowRightSLine/>\n          </button>\n          <div className=\"auth-contents-ext\">\n       \n        <div className=\"create-acc-a\">\n              <p>Have an Account?<span>\n              <NavLink to={{ pathname: \"/\"}}>  Log in</NavLink>\n              </span> </p>    \n        </div>\n        </div>\n        </div>   \n      </div>\n\n      ):\n      (\n\n        <div className=\"auth-form-container form-container-up\">\n          <div className=\"auth-form-top\">\n          <div className=\"auth-signup-back\"\n           onClick={e=>{\n            e.preventDefault();\n            setNext(!next);\n          }}\n          >\n          <BsArrowLeft/>\n          </div>\n          <p className=\"form-step\">Signup  2 of 2</p>\n          </div>\n          <div className=\"auth-form-content\">\n            <div className=\"form-inputfield\">\n              <label htmlFor=\"phone\">Phone Nunber</label>\n              <input\n              onChange={(e) => setPhone(e.target.value)}\n              value={phone}\n              type=\"text\"\n              name=\"phone\"\n              />\n              <small className=\"form-inputfield-error\">{errorMessagePhone}</small>\n            </div>\n\n            <div className=\"form-inputfield\">\n              <label htmlFor=\"phone\">Country</label>\n              <select className=\"signup-select-a\" defaultValue={'DEFAULT'} data-focusable=\"true\" onChange={(e) => setCountry(e.target.value)}>\n\t\t \t\t\t\t\t\t<option   disabled value=\"DEFAULT\" disabled >Select the country you live in</option>\n              \t<option value=\"Åland Islands\">Åland Islands</option><option value=\"Albania\">Albania</option><option value=\"Algeria\">Algeria</option><option value=\"American Samoa\">American Samoa</option><option value=\"Andorra\">Andorra</option><option value=\"Angola\">Angola</option><option value=\"Afghanistan\">Afghanistan</option><option value=\"Anguilla\">Anguilla</option><option value=\"Antigua &amp; Barbuda\">Antigua &amp; Barbuda</option><option value=\"Argentina\">Argentina</option><option value=\"Armenia\">Armenia</option><option value=\"Aruba\">Aruba</option><option value=\"Australia\">Australia</option><option value=\"Austria\">Austria</option><option value=\"Azerbaijan\">Azerbaijan</option><option value=\"Bahamas\">Bahamas</option><option value=\"Bahrain\">Bahrain</option><option value=\"Bangladesh\">Bangladesh</option><option value=\"Barbados\">Barbados</option><option value=\"Belarus\">Belarus</option><option value=\"Belgium\">Belgium</option><option value=\"Belize\">Belize</option><option value=\"Benin\">Benin</option><option value=\"Bermuda\">Bermuda</option><option value=\"Bhutan\">Bhutan</option>\n                <option value=\"Bolivia\">Bolivia</option><option value=\"Bosnia &amp; Herzegovina\">Bosnia &amp; Herzegovina</option><option value=\"Botswana\">Botswana</option><option value=\"Bouvet Island\">Bouvet Island</option><option value=\"Brazil\">Brazil</option><option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option><option value=\"Brunei\">Brunei</option><option value=\"Bulgaria\">Bulgaria</option><option value=\"Burkina Faso\">Burkina Faso</option><option value=\"Burundi\">Burundi</option><option value=\"Cambodia\">Cambodia</option><option value=\"Cameroon\">Cameroon</option><option value=\"Canada\">Canada</option><option value=\"Cape Verde\">Cape Verde</option><option value=\"Caribbean Netherlands\">Caribbean Netherlands</option><option value=\"Cayman Islands\">Cayman Islands</option><option value=\"Central African Republic\">Central African Republic</option><option value=\"Chad\">Chad</option><option value=\"Chile\">Chile</option><option value=\"Christmas Island\">Christmas Island</option><option value=\"Cocos (Keeling) Islands\">Cocos (Keeling) Islands</option><option value=\"Colombia\">Colombia</option><option value=\"Comoros\">Comoros</option><option value=\"Congo - Brazzaville\">Congo - Brazzaville</option><option value=\"Congo - Kinshasa\">Congo - Kinshasa</option><option value=\"Cook Islands\">Cook Islands</option><option value=\"Costa Rica\">Costa Rica</option><option value=\"Côte d’Ivoire\">Côte d’Ivoire</option><option value=\"Croatia\">Croatia</option><option value=\"Cuba\">Cuba</option><option value=\"Curaçao\">Curaçao</option><option value=\"Cyprus\">Cyprus</option><option value=\"Czechia\">Czechia</option><option value=\"Denmark\">Denmark</option><option value=\"Djibouti\">Djibouti</option><option value=\"Dominica\">Dominica</option>\n                <option value=\"Dominican Republic\">Dominican Republic</option><option value=\"Ecuador\">Ecuador</option><option value=\"Egypt\">Egypt</option><option value=\"El Salvador\">El Salvador</option><option value=\"Equatorial Guinea\">Equatorial Guinea</option><option value=\"Eritrea\">Eritrea</option><option value=\"Estonia\">Estonia</option><option value=\"Ethiopia\">Ethiopia</option><option value=\"Falkland Islands\">Falkland Islands</option><option value=\"Faroe Islands\">Faroe Islands</option><option value=\"Fiji\">Fiji</option><option value=\"Finland\">Finland</option><option value=\"France\">France</option><option value=\"French Guiana\">French Guiana</option><option value=\"French Polynesia\">French Polynesia</option><option value=\"French Southern Territories\">French Southern Territories</option><option value=\"Gabon\">Gabon</option><option value=\"Gambia\">Gambia</option><option value=\"Georgia\">Georgia</option><option value=\"Germany\">Germany</option><option value=\"Ghana\">Ghana</option><option value=\"Gibraltar\">Gibraltar</option><option value=\"Greece\">Greece</option><option value=\"Greenland\">Greenland</option><option value=\"Grenada\">Grenada</option><option value=\"Guadeloupe\">Guadeloupe</option><option value=\"Guam\">Guam</option><option value=\"Guatemala\">Guatemala</option><option value=\"Guernsey\">Guernsey</option><option value=\"Guinea\">Guinea</option><option value=\"Guinea-Bissau\">Guinea-Bissau</option><option value=\"Guyana\">Guyana</option><option value=\"Haiti\">Haiti</option><option value=\"Honduras\">Honduras</option><option value=\"Hong Kong SAR China\">Hong Kong SAR China</option><option value=\"Hungary\">Hungary</option><option value=\"Iceland\">Iceland</option><option value=\"India\">India</option><option value=\"Indonesia\">Indonesia</option><option value=\"Iran\">Iran</option><option value=\"Iraq\">Iraq</option><option value=\"Ireland\">Ireland</option><option value=\"Isle of Man\">Isle of Man</option><option value=\"Israel\">Israel</option><option value=\"Italy\">Italy</option><option value=\"Jamaica\">Jamaica</option><option value=\"Japan\">Japan</option><option value=\"Jersey\">Jersey</option><option value=\"Jordan\">Jordan</option><option value=\"Kazakhstan\">Kazakhstan</option><option value=\"Kenya\">Kenya</option><option value=\"Kiribati\">Kiribati</option><option value=\"Kosovo\">Kosovo</option><option value=\"Kuwait\">Kuwait</option><option value=\"Kyrgyzstan\">Kyrgyzstan</option><option value=\"Laos\">Laos</option><option value=\"Latvia\">Latvia</option><option value=\"Lebanon\">Lebanon</option><option value=\"Lesotho\">Lesotho</option><option value=\"Liberia\">Liberia</option><option value=\"Libya\">Libya</option><option value=\"Liechtenstein\">Liechtenstein</option><option value=\"Lithuania\">Lithuania</option><option value=\"Luxembourg\">Luxembourg</option><option value=\"Macau SAR China\">Macau SAR China</option><option value=\"Macedonia\">Macedonia</option><option value=\"Madagascar\">Madagascar</option><option value=\"Malawi\">Malawi</option><option value=\"Malaysia\">Malaysia</option><option value=\"Maldives\">Maldives</option><option value=\"Mali\">Mali</option><option value=\"Malta\">Malta</option><option value=\"Marshall Islands\">Marshall Islands</option><option value=\"Martinique\">Martinique</option><option value=\"Mauritania\">Mauritania</option><option value=\"Mauritius\">Mauritius</option><option value=\"Mayotte\">Mayotte</option><option value=\"Mexico\">Mexico</option><option value=\"Micronesia\">Micronesia</option><option value=\"Moldova\">Moldova</option><option value=\"Monaco\">Monaco</option><option value=\"Mongolia\">Mongolia</option><option value=\"Montenegro\">Montenegro</option><option value=\"Montserrat\">Montserrat</option><option value=\"Morocco\">Morocco</option><option value=\"Mozambique\">Mozambique</option><option value=\"Namibia\">Namibia</option><option value=\"Nauru\">Nauru</option><option value=\"Nepal\">Nepal</option><option value=\"Netherlands\">Netherlands</option><option value=\"New Caledonia\">New Caledonia</option><option value=\"New Zealand\">New Zealand</option><option value=\"Nicaragua\">Nicaragua</option><option value=\"Niger\">Niger</option><option value=\"Nigeria\">Nigeria</option><option value=\"Niue\">Niue</option><option value=\"Norfolk Island\">Norfolk Island</option><option value=\"Northern Mariana Islands\">Northern Mariana Islands</option><option value=\"Norway\">Norway</option><option value=\"Oman\">Oman</option><option value=\"Pakistan\">Pakistan</option><option value=\"Palau\">Palau</option><option value=\"Palestinian Territories\">Palestinian Territories</option><option value=\"Panama\">Panama</option><option value=\"Papua New Guinea\">Papua New Guinea</option><option value=\"Paraguay\">Paraguay</option><option value=\"Peru\">Peru</option><option value=\"Philippines\">Philippines</option><option value=\"Pitcairn Islands\">Pitcairn Islands</option><option value=\"Poland\">Poland</option><option value=\"Portugal\">Portugal</option><option value=\"Puerto Rico\">Puerto Rico</option><option value=\"Qatar\">Qatar</option><option value=\"Réunion\">Réunion</option><option value=\"Romania\">Romania</option><option value=\"Russia\">Russia</option><option value=\"Rwanda\">Rwanda</option><option value=\"Samoa\">Samoa</option><option value=\"San Marino\">San Marino</option><option value=\"São Tomé &amp; Príncipe\">São Tomé &amp; Príncipe</option><option value=\"Saudi Arabia\">Saudi Arabia</option><option value=\"Senegal\">Senegal</option><option value=\"Serbia\">Serbia</option><option value=\"Seychelles\">Seychelles</option><option value=\"Sierra Leone\">Sierra Leone</option><option value=\"Singapore\">Singapore</option><option value=\"Sint Maarten\">Sint Maarten</option><option value=\"Slovakia\">Slovakia</option><option value=\"Slovenia\">Slovenia</option><option value=\"Solomon Islands\">Solomon Islands</option><option value=\"Somalia\">Somalia</option>\n                <option value=\"South Africa\">South Africa</option><option value=\"South Georgia &amp; South Sandwich Islands\">South Georgia &amp; South Sandwich Islands</option><option value=\"South Korea\">South Korea</option><option value=\"Spain\">Spain</option><option value=\"Sri Lanka\">Sri Lanka</option><option value=\"St. Barthélemy\">St. Barthélemy</option><option value=\"St. Helena\">St. Helena</option><option value=\"St. Kitts &amp; Nevis\">St. Kitts &amp; Nevis</option><option value=\"St. Lucia\">St. Lucia</option><option value=\"St. Martin\">St. Martin</option><option value=\"St. Pierre &amp; Miquelon\">St. Pierre &amp; Miquelon</option><option value=\"St. Vincent &amp; Grenadines\">St. Vincent &amp; Grenadines</option><option value=\"Suriname\">Suriname</option><option value=\"Swaziland\">Swaziland</option><option value=\"Sweden\">Sweden</option><option value=\"Switzerland\">Switzerland</option><option value=\"Taiwan\">Taiwan</option><option value=\"Tajikistan\">Tajikistan</option><option value=\"Tanzania\">Tanzania</option><option value=\"Thailand\">Thailand</option><option value=\"Timor-Leste\">Timor-Leste</option><option value=\"Togo\">Togo</option><option value=\"Tokelau\">Tokelau</option>\n                <option value=\"Tonga\">Tonga</option><option value=\"Trinidad &amp; Tobago\">Trinidad &amp; Tobago</option><option value=\"Tunisia\">Tunisia</option><option value=\"Turkey\">Turkey</option><option value=\"Turkmenistan\">Turkmenistan</option><option value=\"Turks &amp; Caicos Islands\">Turks &amp; Caicos Islands</option><option value=\"Tuvalu\">Tuvalu</option><option value=\"U.S. Virgin Islands\">U.S. Virgin Islands</option><option value=\"Uganda\">Uganda</option><option value=\"Ukraine\">Ukraine</option><option value=\"United Arab Emirates\">United Arab Emirates</option><option value=\"United Kingdom\">United Kingdom</option><option value=\"United States\">United States</option><option value=\"Uruguay\">Uruguay</option><option value=\"Uzbekistan\">Uzbekistan</option><option value=\"Vanuatu\">Vanuatu</option><option value=\"Vatican City\">Vatican City</option><option value=\"Venezuela\">Venezuela</option><option value=\"Vietnam\">Vietnam</option><option value=\"Wallis &amp; Futuna\">Wallis &amp; Futuna</option><option value=\"Yemen\">Yemen</option><option value=\"Zimbabwe\">Zimbabwe</option>\n              </select>\n              <small className=\"form-inputfield-error\">{errorMessageCountry}</small>\n            </div>\n            <div className=\"form-inputfield\">\n              <label htmlFor=\"email\">Password</label>\n              <div id=\"input-pas\">\n                <input\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  type={!showPassword ? \"password\" : \"text\"}\n                />\n                <div\n                  className=\"show-password-a\"\n                  onClick={() => setShowPassword(showPassword ? false : true)}\n                >\n                  {!showPassword ? (\n                    <BsEyeSlash size={23} />\n                  ) : (\n                    <BsEye size={23} />\n                  )}\n                </div>\n              </div>\n\n              <small className=\"form-inputfield-error\">{errorMessagePassword}</small>\n            </div>\n\n            <div className=\"loading-auth\">\n              {isLoading && <MoonLoader size={30} color={\"#122d7b\"} />}\n            </div>\n\n            <button className=\"submit-btn sign-up-btn\" type=\"submit\" onClick={(e) => _handleSubmit(e)}>\n              <p>Sign up</p>\n            </button>\n            <div className=\"auth-contents-ext\">\n            <p className=\"signup-agreement-a\">\n                  By signing up, you agree to our \n                <NavLink \n                target=\"_blank\" \n                 to={{ pathname: '/tos', state: { prevPath: 'signup' } }}\n                  >\n                  <span>  Terms of Service</span></NavLink> and \n                  <NavLink \n                  target=\"_blank\" \n                to={{ pathname: '/privacy', state: { prevPath: 'signup' } }}\n                  ><span> Privacy Policy.</span></NavLink> \n                </p>\n          </div>\n          </div>   \n        </div>\n      )\n      }\n      <footer>&#169; {new Date().getFullYear()} sponsorffy Inc.</footer>\n    </div>\n  </div>\n  );\n};\n\nexport default Signup;","/** Exposes different parameters for use in responsive images on SponsorFFy (Implemented Aug 23 2021)*/\nexport const BaseImg = ({ src, alt, id=\"\", className=\"\", onClick, srcSet=\"\", sizes=\"\" }) =>{\n  return(\n    <img\n    id={ id? id:null }\n    className={ className?className:null }\n    srcSet={srcSet}\n    sizes={sizes}\n    src={src} \n    alt={alt} \n    onClick={onClick ?() => onClick():null} //Implements onClick for avatars\n    />    \n  )\n};\n\n/* ----------->  AVATAR  <----------- */\nexport const defaultAvatar = \"https://spfy-dev.imgix.net/default_dp_400x400.png\";\n\nexport const avatarParam = (width)=>`w=${ width }&h=${ width }&crop=faces,edges&q=60&auto=format,compress,enhance&fit=clamp`;\nconst avatarSrc = (width) => `${avatarParam(width)} ${width}w`;\nconst { s, m, l } = { s:\"73\", m:\"96\", l:\"400\" };\n\nexport const AVATAR = ( props )=>{\n  const largeAvSrcSet = `${props.src}?${avatarSrc(l)}`\n\n  const regAvSrcSet = `\n  ${props.src}?${avatarSrc(s)},\n  ${props.src}?${avatarSrc(m)},\n  ${props.src}?${avatarSrc(l)}\n  `\n  const srcSet = props.isLargeAvatar? largeAvSrcSet : regAvSrcSet;\n  \n  const sizes= `\n  (max-width: 480px) 45px,\n  (max-width:768px) 96px,\n  (min-width:769px) 100px,\n  `\n  return(\n    <BaseImg \n    {...{...props , srcSet, sizes} }\n    />\n  )\n}\n\n\n/* ----------->  FEED PHOTOS  <----------- */\n\n// export const getParam = (W)=>`w=${ W }q=65&auto=format,compress&fit=clip`;\nconst getSrc=(width) =>`w=${ width }&q=65&auto=format,compress ${width}w`;\n\nconst feedW = {xty:\"280\",ty:\"480\",xsm:\"640\", sm:\"768\", md:\"840\", lg:\"999\", xl:\"1198\", xxl:\"1500\"};\n\nexport const FEEDIMG = ( props ) =>{\n  const srcSet=  `\n  ${props.src}?${getSrc(feedW.xty)},\n  ${props.src}?${getSrc(feedW.ty)},\n  ${props.src}?${getSrc(feedW.xsm)},\n  ${props.src}?${getSrc(feedW.sm)},\n  ${props.src}?${getSrc(feedW.md)},\n  ${props.src}?${getSrc(feedW.lg)},\n  ${props.src}?${getSrc(feedW.xl)},\n  ${props.src}?${getSrc(feedW.xxl)}\n  `\n  const sizes= `\n  (max-width: 414px) 100vw,\n  (max-width: 599px) calc(calc(100vw - 92px) * 0.648),\n  (max-width: 1200px) calc(calc(100vw - 252px) * 0.68),\n  calc((100vw - 732px) * 0.54)\n  `\n  return(\n    <BaseImg\n      {...{...props , srcSet, sizes} }\n    />\n  )\n}\n//  (max-width: 1499px) calc(0.612 * (100vw - 552px)),\n\n/** --------> PROFILE PHOTOS ---------> */ \nconst profileW = {xty:\"150\",ty:\"250\",xsm:\"350\", sm:\"450\", md:\"550\", lg:\"650\", xl:\"768\", xxl:\"1500\"};\nconst profileSrcSet = (src) =>  `\n${src}?${getSrc(profileW.xty)},\n${src}?${getSrc(profileW.ty)},\n${src}?${getSrc(profileW.xsm)},\n${src}?${getSrc(profileW.sm)},\n${src}?${getSrc(profileW.md)},\n${src}?${getSrc(profileW.lg)},\n${src}?${getSrc(profileW.xl)},\n${src}?${getSrc(profileW.xxl)}\n`\n\nexport const ProfileGridImg = (props)=>{\n  const srcSet= profileSrcSet(props.src)\n  const sizes= `\n  (max-width: 414px) calc(calc(100vw - 6px) / 2),\n  (max-width: 599px) calc(calc(100vw - 12px) / 3),\n  calc(calc(100vw - 20px) / 3)\n  `\n  return(\n    <BaseImg\n      {...{...props , srcSet, sizes} }\n    />\n  )\n};\n\nexport const LargeViewImg = (props)=>{\n  const srcSet= profileSrcSet(props.src)\n  const sizes= ` (max-width: 870px) 85vw, 75vw `\n  return(\n    <BaseImg\n      {...{...props , srcSet, sizes} }\n    />\n  )\n};","import {useSelector} from 'react-redux';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport {useNavigate} from 'react-router-dom';\nimport { AVATAR } from \"../../utils/imageParams\";\n\nconst SponsorTv = () => {\n\n  const navigate = useNavigate();\n  const{user} = useSelector(state => state.user);\n\n  return (\n    <div className=\"media-wrapper\">\n      <div className=\"media-container\">\n        <div className=\"media-container-top\">\n          <div className=\"media-arrow-back\">\n            <button onClick={()=>{\n              navigate(-1);\n            }}>\n              <BiArrowBack />\n            </button>\n          </div>\n          <div className=\"media-logo\">\n            \n          </div>\n          <div className=\"media-user\">\n          <AVATAR\n          src={user.photo} \n          alt={`Avatar of ${user.username}`}\n          />\n          </div>\n        </div>\n        <div className=\"media-video\">\n          <video controls autoPlay muted={true} playsInline={true} poster=\"https://images.unsplash.com/photo-1605310868366-50faea41f618?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\" className=\"\" src=\"\"/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SponsorTv;","import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n  over: {\n    scale: 1.06,\n    boxShadow: \"0px 3px 3px #e6e6e6\",\n    transition: {\n      ease: \"easeInOut\",\n    },\n  },\n  out: {\n    scale: 1.0,\n    // boxShadow: \"\",\n  },\n};\n\nconst PricingPackage = ({ amount, description, name }) => {\n  const [isBuying, setIsBuying] = useState(false);\n  const [isHover, setIsHover] = useState(false);\n\n  const buyToken = (e) => {\n    e.preventDefault(e);\n    setIsBuying(true);\n  };\n\n  return (\n    <motion.div\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n      variants={variants}\n      animate={isHover ? \"over\" : \"out\"}\n      className=\"pricing-package-container\"\n    >\n      <div className=\"pricing-package-contents\">\n      <div className=\"pricing-package-content-top\">\n\n\n        <h5>\n        $ {amount} <span>/ coin</span>\n        </h5>\n        <h4>{name}</h4>\n        <small>{description}</small>\n\n        </div>\n        <div className=\"pricing-package-actions\">\n          {isBuying ? (\n            <div className=\"pricing-process\">\n              <p>Processing...</p>\n            </div>\n          ) : (\n            <button onClick={(e) => buyToken(e)}>\n              <p>Buy now</p>\n            </button>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default PricingPackage;\n","import {useSelector} from 'react-redux';\n// import {useSelector} from 'react-redux/es/hooks/useSelector';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { useNavigate } from \"react-router-dom\";\nimport PricingPackage from \"./pricing_package\";\nimport { AVATAR } from \"../../utils/imageParams\";\n\nconst Pricing = () => {\n  const navigate = useNavigate();\n  const{user} = useSelector(state => state.user)\n\n  return (\n    <div className=\"pricing-wrapper\">\n      <div className=\"pricing-container\">\n        <div className=\"pricing-container-top\">\n          <div className=\"pricing-arrow-back\">\n            <button onClick={() => navigate(-1)}>\n              <BiArrowBack />\n            </button>\n          </div>\n          <div className=\"pricing-logo\">\n            <p>Sponsorffy</p>\n          </div>\n          <div className=\"pricing-user\">\n            <AVATAR\n            src={user.photo}\n            alt={`Avatar of ${user.username}`}\n            />\n          </div>\n        </div>\n        <div className=\"pricing-lists\">\n          <div className=\"pricing-lists-top\">\n            <h5>Pricing plans</h5>\n            <small>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero\n              perferendis in tempora quae dolorum repellat itaque ex dolorem ad\n              voluptates?\n            </small>\n          </div>\n          <div className=\"pricing-lists-contents\">\n            <PricingPackage\n              amount={4.99}\n              name=\"Timi Bundle\"\n              description=\"See in Naira\"\n            />\n            <PricingPackage\n              amount={6.99}\n              name=\"Mo Bundle\"\n              description=\"Lorem ipsum dolor sit amet, consectetur\"\n            />\n            <PricingPackage\n              amount={99.99}\n              name=\"Jumbo Bundle\"\n              description=\"Lorem ipsum dolor sit amet, consectetur\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Pricing;","const BackDrop = ({ children, isModal, handleModal, overflow}) =>{\n\n  const closeBackdrop = (e) => {\n    if (e.target === e.currentTarget){\n      handleModal();\n    }\n  };\n\n  return isModal ? (\n    <div className={`backdrop backdrop-profile ${overflow}`} onClick={closeBackdrop}>\n      {children}\n    </div>\n    \n  ) : null;\n};\n\nexport default BackDrop;","import { useState } from \"react\";\n// import {useDispatch} from 'react-redux';\nimport BackDrop from \"./backdrop\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nconst ConfirmationModal = (props) => {\n  // const dispatch = useDispatch();\n  const [confirmationCode, setConfirmationCode] = useState(\"\");\n\n  return (\n    <BackDrop isModal={props.isModal} handleModal={props.handleModal}>\n      <div className=\"confirmationModal-container\">\n        <div className=\"confirmationModal-closeBtn\">\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              props.handleModal(false)\n            }}\n          >\n            <AiOutlineClose size={20} />\n\n          </button>\n        </div>\n\n        <div className=\"confirmationModal-contents\">\n          <h4>Account Confirmation</h4>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt\n            reiciendis non eius iusto modi error odit et, ipsum sapiente,\n            voluptate saepe tempora commodi veniam unde corporis cum\n            perspiciatis mollitia quos nam quod odio.\n          </p>\n          <input\n            value={confirmationCode}\n            onChange={(e) => setConfirmationCode(e.target.value)}\n            type=\"text\"\n            name=\"\"\n            id=\"confirmation\"\n          />\n          <div className=\"confirmation-actions\">\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                props.handleModal(false)\n              }}\n              className=\"confirmation-cancel\"\n            >\n              <p>Cancel</p>\n            </button>\n            <button className=\"confirmation-sub\">\n              <p>Confirm</p>\n            </button>\n          </div>\n        </div>\n      </div>\n    </BackDrop>\n  );\n};\n\nexport default ConfirmationModal;\n","import axios from 'axios';\nexport const baseURL=\"http://localhost:3001/api/v1/\";\n\nconst _useAxios =(method,body={},url) =>{\n    let params = {};\n    let data = {};\n    if(method.toUpperCase()===\"GET\")params=body\n    if(method.toUpperCase()===\"POST\"||method.toUpperCase()===\"PATCH\"||method.toUpperCase()===\"PUT\"||method.toUpperCase()===\"DELETE\")data=body\n    return axios({\n        url,\n        method,\n        baseURL,\n        params,\n        data,\n        withCredentials: true,\n    })\n};\n\nexport default _useAxios; //callAPI","\nexport const SET_UPLOAD = 'SET_UPLOAD';\n\nexport const SET_UPLOAD_RESPONSE = 'SET_UPLOAD_RESPONSE';\n\nexport const SET_CURRENT_COMPONENT = 'SET_CURRENT_COMPONENT';\n\nexport const SET_TEST_MODAL = \"SET_TEST_MODAL\";\n\nexport const SET_UPLOAD_MODAL = \"SET_UPLOAD_MODAL\";\n\nexport const SET_DRAWER_MODAL = \"SET_DRAWER_MODAL\";\n\nexport const SET_ERR_MESSAGE = \"SET_ERR_MESSAGE\";\n","import {SET_UPLOAD, SET_CURRENT_COMPONENT, SET_ERR_MESSAGE, SET_UPLOAD_RESPONSE} from './NavActionTypes';\n\nexport const setUpload = (upload) => ({\n  type: SET_UPLOAD,\n  upload\n});\n\nexport const setUploadResponse = (response={}) => ({\n  type: SET_UPLOAD_RESPONSE,\n  payload: response\n});\n\nexport const setCurrentComponent = (component) => { \n  return {\n    type:SET_CURRENT_COMPONENT,\n    component\n  }\n};\n\nexport const setModal = (modalType,payload)=>{\n  return {\n    type:`SET_${modalType.toUpperCase()}_MODAL`,\n    payload\n  }\n};\n\nexport const setErrMesage = (payload)=>{\n  return {\n    type:SET_ERR_MESSAGE,\n    payload\n  }\n};","import _useAxios from \"./_useAxios\";\nimport {useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport { setUploadResponse } from \"../redux/navBar/NavActions\";\nconst endPoint = \"posts/media/upload\";\n\nconst handleMedia = (file, fieldName, dispatch) =>{\n\n  const {size=\"\", type=\"\"} = file;\n\n  // <-------- IMAGE ------------>\n  if(type.startsWith(\"image\")){\n\n    // Check file type for only jpeg/jpg and png,webp\n    const supportedMimes = [\"image/jpg\", \"image/jpeg\", \"image/png\", \"image/webp\"];\n    if(!supportedMimes.includes(type)){\n      return dispatch(setUploadResponse({error:\"We only support png, webp and jpg/jpeg\"})) \n    };\n  \n    // Check file size for less than 20mb\n    if(size > 20 * 1000 * 1000){\n      return dispatch(setUploadResponse({error:\"Too large! Image must not exceed 20mb\"}))\n    };\n    // Upload file to server here...\n    uploadToServer(file, fieldName, dispatch)\n  }\n\n  // <-------- VIDEO ------------>\n  if(type.startsWith(\"video\")){\n    \n    // Mime type check\n    const supportedMimes = [\"video/mp4\"];\n    if(!supportedMimes.includes(type)){\n      return dispatch(setUploadResponse({error:\"We only support mp4\"}))\n    };\n\n    // file size check: max=100mb\n    if(size > 100 * 1000 * 1000){\n      return dispatch(setUploadResponse({error:\"Too large! video must be less than 100mb.\"}))\n    };\n    \n    // file duration check :duration must not exceed 35secs\n    const video = document.createElement(\"video\");\n    video.src = URL.createObjectURL(file)\n    video.ondurationchange = () =>{\n      URL.revokeObjectURL(video.src);\n      const duration = Math.floor(video.duration);\n      \n      if(duration < 5 || duration > 30){\n        return dispatch(setUploadResponse({error:\"Your video must be between 5 and 30 seconds\"})) \n      }else{\n        // Upload file to server here...\n        dispatch(setUploadResponse({ success:{thumb:true} })); \n        uploadToServer(file, fieldName, dispatch)\n      }\n    }\n  };\n}\n\n// Uploads media file to server\nexport const uploadToServer = (file, fieldName, dispatch, req)=>{\n  let formData;\n  if(req && req.ORDER === \"FINAL\"){ //Video processing phase 2\n    formData = {media_id:req.media_id, post_id:req.post_id};\n  }\n  else{\n    if(!req){\n      formData = new FormData();\n      formData.append(\"media\", file, fieldName);\n    }\n  }\n\n  _useAxios(\"POST\", formData, endPoint).then((res) =>{\n    if(res){\n      if(res.data.video && res.data.video.ORDER === \"FINAL\")  return null; //No response needed for this phase\n      dispatch(\n        setUploadResponse({ success:res.data })\n      )\n    }\n  })\n  .catch((err) =>{\n    if(err && err.response){\n      console.log(err)\n      console.log(err.response)\n      dispatch(\n        setUploadResponse({error:err.response?.data?.message})\n      )\n    }\n  });\n};\n\n// Will handle callback request for video ABR transcoding\nexport const FulfillABR =()=> {\n  const dispatch = useDispatch();\n  const { uploadResponse} = useSelector(state => state.navBar);\n\n  useEffect(() =>{\n    const { video } = uploadResponse.success;\n    if( video && video.ORDER === \"FINALE\"){\n      uploadToServer(\"\", \"\", dispatch, {media_id:video.media_id, post_id:video.post_id, ORDER:\"FINAL\"});\n\n      // Reset uploadResponse\n      dispatch(setUploadResponse({ error:\"\", success:{video:null, image:null, thumb:\"\"}})) \n    }\n  }, [uploadResponse.success])\n\n  return null;\n}\n\nexport default handleMedia;","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch} from \"react-redux\";\nimport { AiOutlineCamera } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\nimport ConfirmationModal from \"./../Modal/confirmation_modal\";\nimport _useAxios from \"../../utils/_useAxios\";\nimport handleMedia from \"../../utils/handleMediaUpload\";\nimport { fetchUserSuccess } from \"../../redux/user/UserAction\";\nimport { AVATAR, defaultAvatar } from \"../../utils/imageParams\";\n\nconst Account = ( ) => {\n  let { user } = useSelector((state) => state.user);\n  // const DESTINATIONS = [\"Australia\", \"Canada\", \"UK\", \"USA\"];\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isLoggedOut, setIsLoggedOut] = useState(false);\n  const [isModal, setIsModal] = useState(false);\n\n  //   user info\n  const [avatarUrl, setAvatarUrl] = useState(user.photo);\n  let   [avatarFile, setAvatarFile] = useState(\"\");\n  const [uploadResp, setUploadResp] = useState({error: \"\", success: \"\"});\n  const [updateResp, setUpdateResp] = useState({error: \"\", success: \"\"});\n  const [formValues, setFormValues] = useState({});\n  const [username, setUserName] = useState(user.username);\n  const [fullname, setFullName] = useState(user.fullname);\n  const [email, setEmail] = useState(user.email);\n  const [phoneNumber, setPhoneNumber] = useState(user.phone);\n  const [countryTo, setCountryTo] = useState(user.countryTo);\n  const [countryFrom, setCountryFrom] = useState(user.countryFrom);\n\n  // logout user\n  useEffect(() => {\n    if (isLoggedOut) {\n      setIsLoggedOut(false);\n\n      // 2) Push user to the login page :if(!isUserLoggedIn):\n      navigate(\"/login\", { replace: true });\n    }\n  });\n\n  const removeWarning =()=>{\n    setUploadResp({});\n    setUpdateResp({});\n  }\n  // Upload error\n  useEffect(() => {\n    if(!updateResp.success && !uploadResp.success) return;\n\n    const timerId = setTimeout(() => {\n      removeWarning();\n      clearTimeout(timerId);\n    },3100);\n\n    if(uploadResp.success){\n      const {media_id, fileType} = uploadResp.success;\n      setFormValues(prevFormVals => ({ ...prevFormVals, media_id, fileType}))\n    }\n\n    return() =>clearTimeout(timerId);\n  },[uploadResp, updateResp.success]);\n\n  // Image upload\n  const onImageUpload = (e)=>{\n    const imgFile = e.target.files[0];\n    if(!imgFile) return;\n\n    removeWarning();\n\n    handleMedia(imgFile, \"avatar\", setUploadResp);\n\n    const imgUrl = window.URL.createObjectURL(imgFile);\n    setAvatarUrl(imgUrl);\n    setAvatarFile(imgFile)\n  }\n\n  const trackFormChanges = ({ name, value }) =>{\n\n    if(name === \"countryTo\") return; //Add select tag for DESTINATION on new app version\n    const initVal = user[name];\n\n    if(value === \"\") value = initVal;\n\n    // Set new value changes to state\n    setFormValues(prevFormVals =>{\n      return {...prevFormVals, [name]:value }\n    })\n\n    // Remove unchanged values from state\n    if(value.toLowerCase() === initVal.toLowerCase()){\n      setFormValues(prevFormVals =>{\n        const newState = {...prevFormVals};\n        delete newState[name];\n        return newState \n      })\n    }\n  };\n\n  const saveChanges = ()=>{\n    // Check for form Change or avatar change\n    if(Object.keys(formValues).length > 0){\n\n      // Remove defaultAvatar val in formValues if it exists\n      if(avatarUrl !== defaultAvatar && formValues.defaultAvatar){\n        delete formValues.defaultAvatar\n      }\n\n      _useAxios(\"PATCH\", formValues, \"users/updateMe\").then((resp) =>{\n        setUpdateResp({error:\"\", success:true});\n        setFormValues({})\n        dispatch(fetchUserSuccess(resp.data.user));\n\n      }).catch((err) => setUpdateResp({error:err.response.data.message, success:\"\"}));\n    }\n  }\n\n  return (\n    <div className=\"account-wrapper\">\n      <div className=\"account-container\">\n        <div className=\"account-top\">\n          {\n            avatarFile ? \n            <img src={avatarUrl} alt={`Avatar of ${user.username}`}/> : \n            <AVATAR src={avatarUrl} alt={`Avatar of ${user.username}`} isLargeAvatar={true}/>\n          }\n          <div className=\"account-top-btn\">\n            <label htmlFor=\"uploadAvatar\">\n              <AiOutlineCamera size={18} />\n              change avatar\n            </label>\n            <input\n              type=\"file\"\n              id=\"uploadAvatar\"\n              accept=\"image/*\"\n              name=\"media\"\n              onChange={onImageUpload}\n              onClick={(e)=>e.target.value = null}\n            />\n          </div>\n          {\n            avatarUrl === defaultAvatar? null:\n            <button \n            className=\"account-top-remove\"\n            onClick={()=>{\n              setAvatarUrl(defaultAvatar);\n              removeWarning();\n              // Only add to form if user doesn't use default avatar\n              if(user.photo !== defaultAvatar){\n                setFormValues(prev => ({...prev, defaultAvatar}))\n              }\n            }}>\n            Remove\n            </button>\n\n          }\n        </div>\n\n        { uploadResp.error && <div className=\"change-avatar-error\">{uploadResp.error}</div> }\n        { updateResp.success && <div className=\"feed-upload-success update-profile-success\">Profile updated!</div> }\n        { updateResp.error && <div className=\"change-avatar-error\">{updateResp.error}</div> }\n\n        <div className=\"account-forms\">\n          <form onChange={({target })=>trackFormChanges(target)}>\n            <div className=\"account-form-input\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                value={username}\n                onChange={(e) => setUserName(e.target.value)}\n                type=\"text\"\n                name=\"username\"\n              />\n            </div>\n            <div className=\"account-form-input\">\n              <label htmlFor=\"fullname\">fullname</label>\n              <input\n                value={fullname}\n                onChange={(e) => setFullName(e.target.value)}\n                type=\"text\"\n                name=\"fullname\"\n              />\n            </div>\n            <div className=\"account-form-input\">\n              <label htmlFor=\"email\">Email Address</label>\n              <input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                type=\"email\"\n                name=\"email\"\n              />\n            </div>\n            <div className=\"account-form-input\">\n              <label htmlFor=\"phone\">Phone Number</label>\n              <input\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n                type=\"text\"\n                name=\"phone\"\n              />\n            </div>\n            <div className=\"account-form-input\">\n              <label htmlFor=\"countryFrom\">Current Country</label>\n              <input\n                value={countryFrom}\n                onChange={(e) => setCountryFrom(e.target.value)}\n                type=\"text\"\n                name=\"countryFrom\"\n              />\n            </div>\n            <div className=\"account-form-input\">\n              <label htmlFor=\"countryTo\">Destination</label>\n              <input\n                value={countryTo}\n                onChange={(e) => setCountryTo(e.target.value)}\n                type=\"text\"\n                name=\"countryTo\"\n              />\n            </div>\n          </form>\n          <div className=\"account-del-bottom\">\n            <h6>Delete Account</h6>\n            <div className=\"account-del-action\">\n              <p>\n                Lorem ipsum dolor sit, amet consectetur fficia aliquam suscipit\n                praesentium voluptatibus vel voluptates rem quaerat illo nam b\n                landitiis nisi rerum excepturi perspiciatis?\n              </p>\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  setIsModal(true);\n                }}\n              >\n                Delete Account\n              </button>\n            </div>\n          </div>\n\n          <div className=\"account-changes-btn\">\n            <button onClick={saveChanges} disabled={uploadResp.error? true:false}>\n              <p>Save Changes</p>\n            </button>\n          </div>\n        </div>\n      </div>\n      <ConfirmationModal isModal={isModal} handleModal={setIsModal} />\n    </div>\n  );\n};\n\nexport default Account;","import { useState } from \"react\";\n// import { useSelector } from \"react-redux\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport ConfirmationModal from \"./../Modal/confirmation_modal\";\n\nconst PasswordChange = (props) => {\n  // let { user } = useSelector((state) => state.user);\n\n  const [isPasswordModal, setIsPasswordModal] = useState(false);\n  const [isReadOnly, setIsReadOnly] = useState(true);\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const showPasswordModal=()=>{\n    if(!isPasswordModal)return;\n\n    return<ConfirmationModal isModal={isPasswordModal} handleModal={setIsPasswordModal} />\n  }\n  return (\n    <div className=\"ps-wrapper\">\n      <div className=\"ps-container\">\n        <h4>Password Change</h4>\n        <p>\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Soluta nam\n          vero commodi! Nt deleniti recusandae repellat facilis quo ut nemo\n          repsequi ipsam est. Eos dicta magni fuga omnis? Repellendus reiciendis\n          maiores quidem itaque.\n        </p>\n        <div className=\"ps-actions\">\n          <div className=\"ps-input\">\n            <input\n              defaultValue=\"Repellendus reiciendis\"\n              readOnly={isReadOnly}\n             \n              type=\"password\"\n              name=\"ps_change\"\n              id=\"ps_change\"\n            />\n            <button\n            onClick={e=>{\n                e.preventDefault();\n                setIsPasswordModal(true);\n            }}\n            >\n              <FiEdit2 size={18} />\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"ps-changes-btn\">\n            <button>\n              <p>Save Changes</p>\n            </button>\n          </div>\n      </div>\n            {showPasswordModal()}\n    </div>\n  );\n};\n\nexport default PasswordChange;\n","\nconst countDownTimer =(countDownTo,callback)=>{\n  let timeIntervalID = setInterval(() =>{\n    let now = new Date().getTime();\n\n    let duration = new Date(countDownTo).getTime() - now;\n\n    // Time calculations for hours, minutes and seconds\n    let days = Math.floor(duration / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((duration % (1000 * 60)) / 1000);\n\n    //Just some formatting\n    days = days.toString().padStart(2, '0');\n    hours = hours.toString().padStart(2, '0');\n    minutes = minutes.toString().padStart(2, '0');\n    seconds = seconds.toString().padStart(2,'0');\n\n\n    if(duration < 0){ \n      clearInterval(timeIntervalID);\n      days=\"00\"\n      hours=\"00\"\n      minutes=\"00\"\n      seconds=\"00\"\n    };\n    callback(days,hours,minutes,seconds);\n\n  }, 1000);\n  \n  return timeIntervalID;\n};\nexport default countDownTimer;\n","import {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport { VscInfo } from \"react-icons/vsc\";\nimport countDownTimer from \"../../utils/countDownTimer\";\n\nconst RenderCountDown=()=>{\n  const {boardItems}= useSelector(state => state.leaderboard);\n  const {countDownTo} =boardItems;\n\n  // Below is for setting the countdown timer\n  const [ days, setDays ] = useState(\"00\");\n  const [ hours, setHours ] = useState(\"00\");\n  const [ minutes, setMinutes ] = useState(\"00\");\n  const [ seconds, setSeconds ] = useState(\"00\");\n\n  useEffect(() =>{\n    const timeId=countDownTimer(\n      countDownTo,\n      (days,hours,minutes,seconds)=>{\n        setDays(days);\n        setHours(hours);\n        setMinutes(minutes);\n        setSeconds(seconds);\n      }\n    )\n    return () =>{\n      //Clearing countdown timer\n      clearInterval(timeId);\n    }\n  },[countDownTo]);\n  \n  return(\n    <p className=\"contest-timer\">\n    <span>\n        {days}\n        <span className=\"timer-letters\">days</span>\n    </span> \n    <span className=\"countdown-dot\">&middot;</span> \n\n    <span>\n        {hours}\n        <span className=\"timer-letters\">hrs</span>\n    </span> \n    <span className=\"countdown-dot\">&middot;</span> \n\n    <span>\n        {minutes}\n        <span className=\"timer-letters\">min</span>\n    </span>\n    <span className=\"countdown-dot\">&middot;</span> \n\n    <span>\n    {seconds}\n    <span className=\"timer-letters\">sec</span>\n    </span>\n    <span className=\"display-info\"><VscInfo size={14}/></span>\n    </p>\n  )\n}\n\nexport default RenderCountDown;","import {Link,useLocation} from 'react-router-dom'\n\nconst NavLink =({to,inActiveClassName,className,activeClassName,...rest})=>{\n    let location = useLocation();\n  let isActive = location.pathname === to;\n\n  let allClassNames = className + \" \" + (isActive ? `${activeClassName}` : `${inActiveClassName}`);\n    \n  return <Link className={allClassNames} to={to} {...rest} />;\n\n\n}\n\nexport default NavLink;","import { setErrMesage } from \"../redux/navBar/NavActions\";\n/**\n * Checks if the user still has enough coins and\n * returns true or false based on the findings\n */\n\nexport const canContest = (coins, dispatch) =>{\n  if(coins === -1) return true;\n  // if(coins >= 5) return true;\n\n  // If not enough coins\n  dispatch(setErrMesage({\n    type:\"balance\", \n    errAction:\"\",\n    message:\"You are either low on coins or used up your free coins. To continue, buy coins.\"\n  }))\n\n  return false;\n};\n\n/**\n * Checks if the user has made an upload or taken test for this season and\n * returns true or false based on the findings\n */\nexport const canVote = (isContestant, dispatch) =>{\n  // Allow user cast vote if a contestant\n  if(isContestant) return true;\n  \n  dispatch(setErrMesage({\n    type:\"upvote\", \n    errAction:\"\",\n    message:\"Only contestants can vote and earn points! To be, make an upload or take test.\"\n  }));\n\n  return false;\n}","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IoFootballOutline,IoFootballSharp,IoSchoolOutline, IoSchoolSharp, IoVideocamOutline,IoVideocam} from \"react-icons/io5\";\nimport { RiHandHeartLine,RiHandHeartFill} from \"react-icons/ri\";\nimport handleMedia from \"../../utils/handleMediaUpload\";\nimport RenderCountDown from \"../leaderboard/renderCountDown\";\nimport NavLink from \"./navLink\";\nimport { canContest } from \"../../utils/verify\";\nimport { setUpload,setModal } from \"../../redux/navBar/NavActions\";\n\nconst Navbar = () => {\n  const [isSettings, setIsSettings] = useState(false);\n  const [fixedNav, setFixedNav] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { component } = useSelector((state) => state.navBar);\n  const { user } = useSelector((state) => state.user);\n  const [btnText, setBtnText] = useState(\"Upload\");\n\n  // toggle upload and take test btn\n  useEffect(() => {\n    if (component === \"academia\") {\n      setBtnText(\"Take Test\");\n    } else {\n      setBtnText(\"Upload\");\n    }\n  }, [component]);\n\n  // send file object to server\n  const uploadMedia = (e) => {\n\n    // Checking for available coins\n    if(!canContest(user.coins, dispatch)) return null;\n\n    const uploadedFile = e.target.files[0];\n    if(uploadedFile){\n    \n      // Sets file url for display on modal\n      dispatch(setUpload(uploadedFile));\n      dispatch(setModal(\"upload\", true));\n\n      // Sets the error/success message from handling media upload\n      const fieldname = \"feed-media\"\n      handleMedia(uploadedFile, fieldname, dispatch);\n    };\n  };\n\n  //show navbar title on /settings route\n  useEffect(() => {\n    if (\n      location.pathname.split(\"/\")[1] === \"settings\" ||\n      location.pathname.split(\"/\")[1] === \"profile\"\n    ) {\n      setIsSettings(true);\n      if (location.pathname.split(\"/\")[1] === \"profile\") {\n        setFixedNav(\"fixed-navbar\");\n      }\n    }\n\n    return () => {\n      setIsSettings(false);\n    };\n  }, [location]);\n\n  return (\n    <div className={`navbar-container ${fixedNav}`}>\n      <div className=\"nav-items\">\n        {isSettings ? (\n          <div className=\"navbar-title\">\n            <p>Sponsorffy</p>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <NavLink\n          to=\"/home/entertainment\"\n          className=\"nav-item\"\n          inActiveClassName=\"nav-inactive\"\n          activeClassName=\"nav-active\"\n        >\n          {component===\"entertainment\"? <IoVideocam size={22}/>:<IoVideocamOutline size={22}/>}\n          <div className=\"nav-cat-name\">Entertain</div>\n        </NavLink>\n        <NavLink\n          to=\"/home/academia\"\n          className=\"nav-item\"\n          inActiveClassName=\"nav-inactive\"\n          activeClassName=\"nav-active\"\n        >\n        {component===\"academia\"?<IoSchoolSharp size={22}/>:<IoSchoolOutline size={22}/>}\n        <div className=\"nav-cat-name\">Academia</div>\n        </NavLink>\n\n        <NavLink\n          to=\"/home/handwork\"\n          className=\"nav-item\"\n          inActiveClassName=\"nav-inactive\"\n          activeClassName=\"nav-active\"\n        >\n          {component===\"handwork\"?<RiHandHeartFill size={22}/>:<RiHandHeartLine size={22}/>}\n          <div className=\"nav-cat-name\">Handwork</div>\n        </NavLink>\n\n        <NavLink\n          to=\"/home/sports\"\n          className=\"nav-item\"\n          inActiveClassName=\"nav-inactive\"\n          activeClassName=\"nav-active\"\n        >\n          {component===\"sports\"? <IoFootballSharp size={22}/>:<IoFootballOutline size={22}/>}\n          <div className=\"nav-cat-name\">Sports</div>\n        </NavLink>\n      </div>\n    \n\n    {component ? (\n      <div className=\"navbar-search\" title=\"upload\" aria-label=\"upload\">\n        <div className=\"upload\">\n          <label htmlFor=\"doc_uploads\">\n            <span>\n              {btnText}\n              {/* <AiOutlineUpload/> */}\n            </span>\n          </label>\n          {component !== \"academia\" ? (\n            <input\n              type=\"file\"\n              id=\"doc_uploads\"\n              accept=\"image/*,video/*\"\n              name=\"media\"\n              onChange={uploadMedia}\n              onClick={({ target }) => {\n                target.value =null;\n              }}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              id=\"doc_uploads\"\n              // name=\"media\"\n              onClick={() =>{dispatch(setModal(\"test\", true))}} \n            />\n          )}\n        </div>\n        <div className=\"search-field\">\n            <RenderCountDown/>\n        </div>\n      </div>\n    ) : null}\n    </div>\n  );\n};\nexport default Navbar;","import {logOut} from '../../redux/auth/AuthAction';\nimport {fetchUserLogOut} from '../../redux/user/UserAction';\nimport BaseUrl from '../../config/BaseUrl';\nimport {LOG_OUT} from '../../config/EndPoints';\nimport axios from 'axios';\n\nconst Logout = (dispatch,navigate) => {\n  axios({ method:'GET',  url:`${BaseUrl}${LOG_OUT}`,  withCredentials:true })\n  .then(resp=>{})\n  .catch(err=>{ if(err)alert('error', 'Error logging out! Try again.')});\n\n  dispatch(logOut()); \n  dispatch(fetchUserLogOut());\n  localStorage.removeItem(\"auth_key\");\n  navigate(\"/\", { replace: true});\n};\n\nexport default Logout","import { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Logout from \"../../auth/Logout\"\n\nconst DrawerItem = ({ children,to, handleModal}) => {\n  let navigate = useNavigate();\n  let dispatch = useDispatch();\n\n  const goTo = ()=>{\n\n    // Log user out\n    if(to === \"/\"){\n      Logout(dispatch,navigate);\n    }\n    \n    navigate(to);\n    handleModal(false);\n  }\n\n  return (\n    <div\n      className=\"drawer-item\"\n      onClick={goTo}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default DrawerItem;\n","import BackDrop from \"../backdrop\"; \nimport {useSelector} from 'react-redux';\nimport { motion } from \"framer-motion\";\nimport { RiCoinsLine,RiAccountCircleLine } from \"react-icons/ri\";\nimport {useNavigate} from 'react-router-dom';\nimport {BiCheckShield,BiLockAlt} from 'react-icons/bi';\nimport {BsClipboard} from 'react-icons/bs';\nimport { AiOutlineLogout,AiOutlineInfoCircle} from \"react-icons/ai\";\nimport DrawerItem from \"./drawer_item\";\nimport {IoIosHelpCircleOutline} from 'react-icons/io';\nimport {SiAirplayvideo} from \"react-icons/si\"\nimport { AVATAR } from \"../../../utils/imageParams\" \n\nconst variants = {\n  visible: {\n    x:\"-250px\",\n    opacity:1,\n    transition:{\n      // duration:0.34,\n      ease:\"easeInOut\"\n    }\n  },\n  hidden: {\n   x:\"250px\",\n   opacity:0,\n   ease:\"easeInOut\"\n  },\n};\n\nconst Drawer = (props) => {\n  const navigate = useNavigate();\n  const{user} = useSelector(state => state.user);\n\n  return (\n    <BackDrop isModal={props.isModal} handleModal={props.handleModal}>\n      <motion.div \n        animate={props.isModal ? \"visible\":\"hidden\"}\n       variants={variants}\n       className=\"drawer-nav-container\">\n        <div className=\"drawer-nav-contents\">\n          <div className=\"drawer-nav-contents-top\">\n            <div\n            onClick={()=>{\n              const profileUrl =user.username.split(\" \").join(\"\");\n              navigate(`/${profileUrl}`,{state:{id:user._id}});\n            }}\n             className=\"drawer-nav-profile\">\n              <AVATAR src={user.photo} alt={`Avatar of ${user.username}`} isLargeAvatar={true}/>\n              <p>{user.fullname}</p>\n            </div>\n          </div>\n          <div className=\"drawer-nav-extra\">\n            <div className=\"drawer-nav-items\">\n              <DrawerItem to=\"/sponsorfy-tv\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <SiAirplayvideo />\n                  </span>\n                  <p>sponsorffy.Tv</p>\n                </div>\n              </DrawerItem>\n\n              <DrawerItem to=\"/coins\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <RiCoinsLine/>\n                  </span>\n                  <p>Buy Coins</p>\n                </div>\n              </DrawerItem>\n    \n              <DrawerItem to=\"/settings\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <RiAccountCircleLine />\n                  </span>\n                  <p>Account</p>\n                </div>\n              </DrawerItem>\n              <DrawerItem to=\"/settings/change\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <BiLockAlt />\n                  </span>\n                  <p>Password Change</p>\n                </div>\n              </DrawerItem>\n              <DrawerItem to=\"/privacy\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <BiCheckShield size={20} />\n                  </span>\n                  <p>Privacy Policy</p>\n                </div>\n              </DrawerItem>\n              <DrawerItem to=\"/terms\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <BsClipboard />\n                  </span>\n                  <p> Terms and Conditions</p>\n                </div>\n              </DrawerItem>\n              <DrawerItem to=\"/FAQs\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <AiOutlineInfoCircle />\n                  </span>\n                  <p> FAQ</p>\n                </div>\n              </DrawerItem>\n\n              <DrawerItem to=\"/entertainment\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <IoIosHelpCircleOutline size={20} />\n                  </span>\n                  <p> Help Center</p>\n                </div>\n              </DrawerItem>\n\n              <DrawerItem to=\"/\" handleModal={props.handleModal}>\n                <div className=\"drawer-nav-item\">\n                  <span>\n                    <AiOutlineLogout  />\n                  </span>\n                  <p>Logout</p>\n                </div>\n              </DrawerItem>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    </BackDrop>\n  );\n};\n\nexport default Drawer;\n","import { useSelector, useDispatch} from \"react-redux\";\nimport { setModal } from \"../../../redux/navBar/NavActions\";\nimport Drawer from \"./drawer\";\n\nexport default function Index(){\n  const dispatch = useDispatch();\n  \n  const { isDrawerModal } = useSelector(state => state.navBar);\n  const closeModal = () =>dispatch(setModal(\"drawer\", false));\n\n  return(\n    isDrawerModal && <Drawer isModal={isDrawerModal} handleModal ={closeModal}/>\n  )\n}","import Navbar from \"./../navigation/navbar\";\nimport {FiExternalLink} from 'react-icons/fi';\nimport { Outlet } from \"react-router-dom\";\nimport NavLink from \"./../navigation/navLink\";\nimport Drawer from '../Modal/drawer/index';\n\nconst Settings = () => {\n  return (\n    <div className=\"settings-wrapper\">\n      <Navbar/>\n      <div className=\"settings-container\">\n        <div className=\"settings-panel\">\n          <h4>Settings</h4>\n          <div className=\"settings-panel-nav\">\n            <NavLink\n              to=\"/settings\"\n              inActiveClassName=\"nav-item-settings\"\n              activeClassName=\"nav-item-settings-active\"\n            >\n              <div className=\"nav-item-settings-content\">\n                <p>Account</p>\n              </div>\n            </NavLink>\n            <NavLink\n              to=\"/settings/change\"\n              inActiveClassName=\"nav-item-settings\"\n              activeClassName=\"nav-item-settings-active\"\n            >\n              <div className=\"nav-item-settings-content\">\n                <p>Password</p>\n              </div>\n            </NavLink>\n\n            <h6>General</h6>\n            <NavLink\n              to=\"/privacy\"\n              inActiveClassName=\"nav-item-settings\"\n              activeClassName=\"nav-item-settings-active\"\n            >\n              <div className=\"nav-item-settings-content\">\n                <p>Privacy</p>\n                <FiExternalLink/>\n             \n              </div>\n            </NavLink>\n            <NavLink\n              to=\"/terms\"\n              inActiveClassName=\"nav-item-settings\"\n              activeClassName=\"nav-item-settings-active\"\n            >\n              <div className=\"nav-item-settings-content\">\n                <p>Term and Conditions</p>\n               \n                <FiExternalLink/>\n              \n              </div>\n            </NavLink>\n            <NavLink\n              to=\"/FAQs\"\n              inActiveClassName=\"nav-item-settings\"\n              activeClassName=\"nav-item-settings-active\"\n            >\n              <div className=\"nav-item-settings-content\">\n                <p>FAQs</p>\n                <FiExternalLink/>\n              </div>\n            </NavLink>\n            <NavLink\n              to=\"/help\"\n              inActiveClassName=\"nav-item-settings\"\n              activeClassName=\"nav-item-settings-active\">\n              <div className=\"nav-item-settings-content\">\n                <p>Help Center</p>\n                <FiExternalLink/>\n              </div>\n            </NavLink>\n          </div>\n        </div>\n        <div className=\"settings-contents\">\n          <Outlet />\n        </div>\n      </div>\n      <Drawer/>\n    </div>\n  );\n};\n\nexport default Settings;\n","import {useEffect, useRef} from \"react\";\nimport videojs from \"video.js/dist/alt/video.core.novtt\";\n// import videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\n\nconst baseOptions = {\n  preload:\"none\",\n  // notSupportedMessage\n  playbackRates: [0.5, 1, 1.5, 2],\n  disablePictureInPicture:true,\n  playsInline: true,\n  muted:true, \n  controls: true,\n  responsive: true,\n  fill: true,\n  html5: {\n    vhs: {\n      enableLowInitialPlaylist: true,\n      fastQualityChange: true,\n      overrideNative: true,\n    },\n  },\n}\n\nconst VideoJS = ({ options, id })=>{\n  const videoRef =  useRef(null);\n  const playerRef = useRef(null);\n\n  useEffect(() => {\n    if(!playerRef.current){\n      if(!videoRef.current) return;\n      playerRef.current = videojs(videoRef.current, {...baseOptions, ...options});\n    }\n    else{\n      playerRef.current.options_ = {...playerRef.current.options_, ...options};\n    }\n\n  },[options]);  \n\n  // Dispose the Video.js player when the functional component unmounts\n  useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);  \n\n  return( //data-vjs-player\n    <div className=\"feed-video-wrapper\"\n      onClick={(e) => e.stopPropagation()}>\n      <div className=\"videojs-wrapper\">\n        <video \n          id={id}\n          ref={videoRef} \n          onClick={(e) => e.stopPropagation()}\n          poster={options.poster}  \n          disablePictureInPicture={true}\n          className=\"video-js vjs-big-play-centered vjs-control-bar vjs-fill\"\n        />\n       </div>\n    </div>\n  );\n};\n\nexport default VideoJS;","import VideoJS from \"./videoJs\";\nconst getMedia = (ImgTag, item, bool=true) =>{\n  const {fileType, fileUrl, _id} = item;\n  switch (fileType){\n    case \"image\":\n      return(\n        <ImgTag \n        id={_id} \n        src={fileUrl} \n        className=\"feed-img\" \n        alt=\"user posted feed multimedia\"\n        />\n      )\n\n    case \"video\": \n      const vidOptions = {\n        poster:item.poster,\n        src:fileUrl,\n        sources:item.derivedUrls\n      };\n      return(\n        <VideoJS options={vidOptions} id={_id}/>\n      )\n\n    default: return null;\n  }\n};\n\nexport default getMedia;","const MONTHS =['Jan', 'Feb', 'Mar', 'Apr', 'May','Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov','Dec'];\n/**\n * The Format class will handle formatting dates, large and ordinal  numbers \n * \n * for more readable and responsive ui display\n */\n\nclass Format {\n\n    createdAt(createdAt){\n        const now=new Date();\n        const createdAtMillis=new Date(createdAt);\n        const timeDiffMillSecs=now-createdAtMillis //milliseconds\n      \n        const timeDiffMins=Math.round(timeDiffMillSecs/ 60000); //mins\n\n        const timeDiffHrs = Math.round(timeDiffMillSecs / 3600000); //hrs\n      \n        if(now.getFullYear() === createdAtMillis.getFullYear()){\n          // secs\n          const secs =Number((timeDiffMins*60).toFixed(0));\n          if(secs < 60) return secs+\"s\";\n      \n          // mins\n          if(timeDiffMins < 60) return timeDiffMins.toFixed(0)+\"m\";\n      \n          // hrs\n          if(timeDiffMins >= 60 && timeDiffMins<1440) return timeDiffHrs.toFixed(0)+\"hr\";\n      \n          // days\n          return MONTHS[createdAtMillis.getMonth()] +\" \"+createdAtMillis.getDate();\n        }else{\n          return MONTHS[createdAtMillis.getMonth()] +\" \"+createdAtMillis.getDate()+\", \"+createdAtMillis.getFullYear();\n        }\n    };\n\n    points=(points)=>{\n        /*\n        Goal is to format total points in to 3 characters\n        e.g (1100 = 1.1k, 25600 = 25k, 110000 = 110k, 1100000 = 1.1M)\n        */\n        points= Math.floor(points);\n        const formatter =(len,prefix,isOneK=false, decRequired)=>{\n            let formattedDigts = points.toString().substr(0,len);\n            if(isOneK){\n                const newPoints=formattedDigts.split(\"\");\n                if(newPoints[1]===\"0\"){ //Truncate zero if 1000\n                    formattedDigts = newPoints[0]\n                } else{\n                    formattedDigts = `${newPoints[0]}.${newPoints[1]}`\n                }\n                return formattedDigts + prefix        \n            }else{\n                if(decRequired){\n                    const newformat = formattedDigts.split(\"\");\n                    if(decRequired===\"oneM\"){\n                        formattedDigts = `${newformat[0]}.${newformat[1]}${newformat[2]}`\n                    }else{\n                        formattedDigts = `${newformat[0]}${newformat[1]}.${newformat[2]}`;\n                    }\n                }\n                return formattedDigts + prefix;\n            }\n        }\n    \n        // break points\n        const onek=1000, tenK=10000,hundK=100000,oneM=1000000, tenM=10000000, hundM=100000000;\n    \n        if(points>=onek && points<tenK)return formatter(2,\"K\",true) //1K\n        if(points>=tenK && points<hundK)return formatter(3,\"K\",null,\"tenK\") // 10k\n        if(points>=hundK && points<oneM)return formatter(3,\"K\") // 100k\n        if(points>=oneM && points<tenM)return formatter(3,\"M\",null,\"oneM\")  // 1M\n        if(points>=tenM && points<hundM)return formatter(3,\"M\",null,\"tenM\") // 10M\n        if(points>=hundM)return formatter(3,\"M\")   // 10OM\n    \n        if(points<10) return points.toFixed(1); //Avoids grammar error with 1 Votes\n        return points // 100s\n    }\n\n    rank(rank){\n        /**\n         * Goal is to put user rank number in its appropriate ordinal number form\n         * returns a string (st,nd,rd,th)\n         */\n\n        let ordString = \"\";\n        if(rank === 0) ordString = \"th\";\n        if(rank === 1) ordString = \"st\";\n        if(rank === 2) ordString = \"nd\";\n        if(rank === 3) ordString = \"rd\";\n\n        if(rank >=4){\n            let ArrayRank = rank.toString().split(\"\");\n            let arrLen = ArrayRank.length;\n            let lastItem = ArrayRank[arrLen - 1]\n            // Get last item from ArrayRank and check if it is any of 1,2 or 3\n            if(lastItem === \"1\") ordString = \"st\";\n            if(lastItem === \"2\") ordString = \"nd\";\n            if(lastItem === \"3\") ordString = \"rd\";\n\n            if(lastItem !==\"1\" && lastItem !==\"2\" && lastItem !==\"3\") ordString = \"th\";\n        }\n        let formatRank = this.points(rank) * 1;\n\n        if(formatRank < 10){ //Removes decimal zero\n            formatRank = Math.trunc(formatRank)\n        }\n\n        return(\n            <div>\n                {formatRank}\n                <sup className=\"super-script\">{ordString}</sup>\n            </div>\n        )\n    }\n}\n\nexport default Format;","\n// FETCH POSTS\nexport const FETCH_POSTS = \"FETCH_POSTS\"\n\n// PAGINATION\nexport const NEXT_CURSOR = \"NEXT_CURSOR\";\n\n// POST AMT INDICATOR\nexport const POSTS_FINISHED = \"POSTS_FINISHED\";\n\n// UPVOTED IDS\nexport const SAVE_POST_IDS = \"SAVE_POST_IDS\";\n\n// Will show toasts messages\nexport const SHOW_ALERT = \"SHOW_ALERT\";\n\n// SCROLL RESTORATION\nexport const SAVE_SCROLL_POSITION = \"SAVE_SCROLL_POSITION\";\n","\nimport {FETCH_POSTS, NEXT_CURSOR,POSTS_FINISHED,SAVE_POST_IDS,SHOW_ALERT,SAVE_SCROLL_POSITION} from \"./postActionTypes\";\n\nexport const fetchPosts = (posts,categoryName) =>({\n    type: `${FETCH_POSTS}_${categoryName.toUpperCase()}`,\n    payload:posts\n});\n\nexport const nextCursor = (cursor,categoryName) =>({\n    type:`${NEXT_CURSOR}_${categoryName.toUpperCase()}`,\n    payload:cursor\n});\n\nexport const isPostsFinished = (boolType,categoryName) =>({\n    type:`${POSTS_FINISHED}_${categoryName.toUpperCase()}`,\n    payload:boolType\n})\n\nexport const savePostIds = (postIdsArray,categoryName) =>({\n    type:`${SAVE_POST_IDS}_${categoryName.toUpperCase()}`,\n    payload:postIdsArray\n})\n\nexport const showAlert = (alertOBJ,categoryName) =>({\n    type:`${SHOW_ALERT}_${categoryName.toUpperCase()}`,\n    payload:alertOBJ\n})\n\nexport const saveScroll = (scrollPosition,categoryName) =>({\n    type:`${SAVE_SCROLL_POSITION}_${categoryName.toUpperCase()}`,\n    payload: scrollPosition\n})\n","import _useAxios from \"./_useAxios\";\nimport {savePostIds} from \"../redux/utils/postActions\";\nimport { setErrMesage } from \"../redux/navBar/NavActions\";\n\n/**\n * The FeedAction constructor func exposes methods needed for interracting  \n * \n * with the buttons below a feed/post item. I.e (upvote,upvoted,share) etc.\n * \n */\nexport default class FeedAction {\n  constructor(postIdSaver,parentName,dispatch){\n    this.dispatch = dispatch;\n    this.postIdSaver = postIdSaver;\n    this.parentName = parentName;\n  }\n\n  // This creates upvote on a post given the postId\n  createUpvote({ _id:postId }){\n    // 1) initialize array to save the currently upvoted postid by the user in redux\n    let storePostId = [];\n    storePostId.push(postId);\n\n    // 2) Dispatch the saved id to enable realtime upvote-to-upvoted\n    const payload =[...this.postIdSaver,...storePostId];\n    this.dispatch(savePostIds(payload, this.parentName));\n\n    _useAxios(\"POST\",{},`posts/${postId}/upvotes`)\n    .then(()=>{})\n    .catch(err => this.dispatch(setErrMesage({type:\"upvote\", message:err.response.data.message, errAction:false})));\n  }\n\n  // Toggles the upvote/upvoted button textContent\n  hasUpVoted(upvotesArray,postId,currentUserId){\n    let hasAlreadyVoted = false;\n    const upvotesArrLen = upvotesArray && upvotesArray.length;\n    if(upvotesArrLen) {\n      for(let i=0; i<upvotesArrLen; i++){\n        if(upvotesArray[i].voterId === currentUserId){\n          hasAlreadyVoted = !hasAlreadyVoted;\n        }\n      }\n    }\n    return hasAlreadyVoted  || this.postIdSaver.includes(postId);\n  };\n\n  // Sets modal for sharing\n  sharePost({_id,fileUrl,fileType,creator, countryTo}){\n    const postDetails={ _id,fileUrl,fileType,creator,countryTo}\n    this.dispatch({\n      type:\"SHARE_POST\",\n      payload:{\n        isModal:true,\n        postDetails\n      }\n    })\n  }\n}","import BackDrop from \"./backdrop\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nconst TestModal = ({_useModal, header, subHeader, choice=[], choiceParams=[], callback }) =>{\n\n  const {isTestModal, closeModal} = _useModal();\n  \n  return (\n    <BackDrop isModal={isTestModal} handleModal={closeModal}>\n      <div className=\"confirmationModal-container\">\n        <div className=\"confirmationModal-closeBtn\">\n          <button onClick={closeModal}>\n            <AiOutlineClose size={20}/>\n          </button>\n        </div>\n        <div className=\"confirmationModal-contents\">\n          <h3>{ header }</h3>\n          <p> { subHeader }</p>\n          <div className=\"confirmation-actions\">\n            <button className=\"confirmation-sub\" \n            onClick={()=>callback(choiceParams[0], closeModal)}>\n              <p>{ choice[0] }</p>\n            </button>\n            <button className=\"confirmation-sub\" \n            onClick={()=>callback(choiceParams[1], closeModal)}>\n              <p>{ choice[1] }</p>\n            </button>\n          </div>\n        </div>\n      </div>\n    </BackDrop>\n  );\n};\nexport default TestModal;","import { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch} from \"react-redux\";\nimport {setErrMesage} from \"./../../redux/navBar/NavActions\";\nimport TestModal from \"../Modal/testModal\";\n\nconst ErrorModal = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { error } = useSelector(state => state.navBar);\n\n  const closeModal = ()=> dispatch(setErrMesage({type:\"\", message:\"\", errAction:\"\"}));\n\n  const _useModal = () => ({isTestModal:error.message, closeModal})\n\n  const options = {\n    upvote:{\n      header:\"NOT A CONTESTANT!\", //Text to display as the header of modal\n      subHeader:error.message, //Text to display as sub-header of Modal\n      choice:[\"UPLOAD\",\"TAKE TEST\"], //Users options to choose from\n      choiceParams:[\"upload\",\"test\"], //Parameters to be passed to functions of the users choice option\n      callback: handleUpvoteErr\n    },\n    \n    balance:{\n      header:\"INSUFFICIENT COIN BALANCE\",\n      subHeader:error.message, \n      choice:[\"Buy coins\",\"Cancel\"],\n      choiceParams:[\"coins\",\"cancel\"],\n      callback: handleBalanceErr\n    }\n  };\n\n  function handleUpvoteErr(choiceParam){\n    closeModal(); // close the modal\n\n    dispatch(setErrMesage({type:\"\", message:\"\", errAction:true}));\n\n    if(choiceParam === \"test\") navigate(\"/home/academia\", {replace: true})\n\n    if(choiceParam === \"upload\"){\n      document\n      .querySelector(\"label[for='doc_uploads']\")\n      .click();\n\n      dispatch(setErrMesage({type:\"\", message:\"\", errAction:false}));\n    }\n\n  };\n\n  function handleBalanceErr(choiceParam){\n    closeModal(); // close the modal\n\n    if(choiceParam ===\"coins\") navigate(\"/coins\");\n\n    // Both cancel and coins will need modal closed\n    dispatch(setErrMesage({type:\"\", message:\"\", errAction:false}));\n  }\n\n  return(\n    <>\n      {error.message ?<TestModal {...{...options[error.type], _useModal}}/>:null}\n    </>\n  );\n}\n \nexport default ErrorModal;\n\n//<label  className=\"feed-float-btn\" htmlFor=\"doc_uploads\"/>","import { useState,useEffect } from \"react\";\nimport { useSelector, useDispatch} from 'react-redux';\nimport BackDrop from \"./backdrop\";\nimport {AiOutlineClose} from \"react-icons/ai\";\nimport {FacebookShareButton,FacebookMessengerShareButton,TwitterShareButton,WhatsappShareButton,EmailShareButton,PinterestShareButton,FacebookIcon,FacebookMessengerIcon,TwitterIcon,WhatsappIcon,EmailIcon,PinterestIcon} from 'react-share'\n\nconst ShareModal=()=>{ \n\n  const[shareUrl, setShareUrl] = useState('');\n  const[shareText, setShareText] = useState('');\n  const shareIconSize = 50;\n  const[isRounded, setIsRounded] = useState('');\n  const[pinterestMedia, setPinterestMedia] = useState('');\n  const dispatch = useDispatch();\n  const{isModal,postDetails} = useSelector(state => state.entertainment.sharePost);\n  const { _id, fileUrl, fileType, countryTo} = postDetails || {};\n\n  // Enables the user to share posts to other platforms\n  useEffect(() =>{\n    // 1) pause/play media  on modal opening;\n    let isModalPaused=false; //Check if media was paused due to modal opening\n    const media = document.getElementById(_id);\n    if(fileType === \"audio\" || fileType === \"video\"){\n      if(!media.paused){\n        media?.player?.pause();\n        isModalPaused = true;\n      }\n    }\n\n    const url = `https://www.sponsorffy.com/uploads/${_id}`// to share current page\n    const title = `Hey friend(s), help me win this Free and Full Sponsorship to ${countryTo?countryTo.toUpperCase():countryTo} by upvoting my post on sponsorffy.com! Here is the link:`;\n\n    setIsRounded(true);\n    setShareText(title);\n    setShareUrl(url);\n    setPinterestMedia(fileUrl);\n    \n    return()=>{\n      if(fileType === \"video\"){\n        if(isModalPaused){\n          // media.play(); Vanila\n          media?.player?.play();\n        }\n      }\n    }\n  },[isModal]) //isModal,postDetails\n\n  const closeModal=()=> {\n    dispatch({\n      type:\"SHARE_POST\",\n      payload:{\n        isModal:false,\n        postDetails:{}\n      }\n    });\n  };\n\n  return (\n    isModal?\n    <BackDrop isModal={isModal} handleModal={closeModal}>\n      <div className=\"share-modal\" >\n        <div className=\"shareModal-closeBtn\">\n          <button onClick={closeModal}><AiOutlineClose size={20}/></button>\n        </div>\n        <h6 className=\"share-modal-header\">Choose a platform to share to</h6>\n        <div style={{marginTop:'60px'}}>\n        <div className=\"share-btn-row\" >\n          <FacebookShareButton url={shareUrl} quote={shareText} hashtag='#sponsorffy=FreeAndFullyPaidSponsorshipAbroad'>\n          <div className=\"share-btn-row-item\">\n          <FacebookIcon size={shareIconSize} round={isRounded}/>\n          <p>Facebook</p>\n          </div>\n          </FacebookShareButton>\n\n          <FacebookMessengerShareButton url={shareUrl}>\n          <div className=\"share-btn-row-item\">\n            <FacebookMessengerIcon size={shareIconSize} round={isRounded}/>\n            <p>Messenger</p>\n            </div>\n          </FacebookMessengerShareButton>\n\n          <TwitterShareButton url={shareUrl} title={shareText} via='sponsorffy' hashtags={['sponsorffy', 'FreeAndFullyPaidSponsorshipAbroad', 'upvotes']}>\n            <div className=\"share-btn-row-item\">\n              <TwitterIcon size={shareIconSize} round={isRounded}/>\n              <p>Twitter</p>\n            </div>\n          </TwitterShareButton>\n        </div>\n\n        <div className=\"share-btn-row-2\">\n        <WhatsappShareButton url={shareUrl} title={shareText}>\n        <div className=\"share-btn-row-item\">\n        <WhatsappIcon size={shareIconSize} round={isRounded}/>\n        <p>Whatsapp</p>\n        </div>\n        </WhatsappShareButton>\n\n        <EmailShareButton url={shareUrl} subject='Free and fully paid sponsorship abroad!' body={shareText}>\n        <div className=\"share-btn-row-item\">\n          <EmailIcon size={shareIconSize} round={isRounded}/>\n          <p>Email</p>\n          </div>\n        </EmailShareButton>\n          <PinterestShareButton url={shareUrl} description={shareText} media={pinterestMedia}>\n            <div className=\"share-btn-row-item\">\n              <PinterestIcon size={shareIconSize} round={isRounded}/>\n              <p>Pinterest</p>\n            </div>\n          </PinterestShareButton>\n        </div>\n        </div>\n      </div>\n    </BackDrop>:null \n  )\n}\nexport default ShareModal;","import {useRef, useEffect} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport { showAlert } from \"../../redux/utils/postActions\";\n\nconst Toast = ({ parentName, className, alertType, timeOut}) =>{\n  const dispatch = useDispatch();\n  const {main, subMain, onClick, alertName} = useSelector(state => state[parentName].alertMessage);\n\n  let timerId = useRef({});\n  useEffect(()=>{\n    if(!main  || !subMain) return;\n    \n    timerId.current = setTimeout(() =>{\n      dispatch(showAlert({main:\"\", subMain:\"\", alertName:\"\", onClick:null},parentName));\n    },timeOut);\n\n    return () => clearTimeout(timerId.current);\n  },[main, subMain, parentName]);\n\n  const renderToast = () => {\n    return(\n      <div className={className ? className : \"feed-upload-success\"}\n      onClick={() =>{\n        if(!onClick) return;\n        onClick();\n        clearTimeout(timerId.current);\n        dispatch(showAlert({main:\"\", subMain:\"\", alertName:\"\", onClick:null},parentName));\n      }}>\n        { main } <span>{ subMain }</span>\n      </div>\n    )\n  }\n\n  return(\n    alertType === alertName && renderToast()\n  )\n}\n\nexport default Toast;","import {Fragment} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport BackDrop from \"../Modal/backdrop\";\nimport {AiOutlineClose} from \"react-icons/ai\";\nimport {BsArrowUp} from \"react-icons/bs\";\nimport {IoMdShareAlt} from \"react-icons/io\";\nimport {IoSchoolSharp} from \"react-icons/io5\";\nimport Format from \"../../utils/Format\";\nimport FeedAction from \"../../utils/FeedAction\";\nimport ErrorModal from \"../Modal/errorModal\";\nimport { canVote } from '../../utils/verify';\nimport { UploadSpinner } from \"../../utils/Loader\"\nimport { LargeViewImg } from \"../../utils/imageParams\";\nimport ShareModal from \"../Modal/shareModal\"\nimport { showAlert } from \"../../redux/utils/postActions\";\nimport Toast from \"../feed/toast\";\n\nconst getMedia = (item) =>{\n  const{ fileType, fileUrl, _id } = item;\n  switch (fileType){\n    case \"image\":\n     return <LargeViewImg id={_id} src={fileUrl} className=\"large-view-img\" alt=\"user posted file\"/>;\n\n    case \"video\":\n      return(\n        <video src={item.fileUrl} id={_id} poster={item.poster} controls muted playsInline disablePictureInPicture  className=\"large-view-video\"/>\n      )\n\n    default: return null;\n  }\n};\n\nconst View = ({profileAction,tabType, closeView}) =>{\n  const dispatch = useDispatch();\n  const format = new Format();\n  const feedState = useSelector(state => state);\n  const {_id:currentUserId, isContestant} =feedState[\"user\"].user;\n  const {isModal,modalItem} =useSelector(state => state.profile.shared);\n  const dispatchModal =()=>{\n    profileAction.setIsModal(false,{});\n\n    if(typeof closeView === \"function\") closeView()\n  }\n  \n  const getRate=(amount=0,time=0)=>{\n    let rate=0;\n    if(tabType===\"post\"){\n      amount=modalItem.upvoteCount; time=modalItem.createdAt\n      const now = new Date();\n      const timeDiffMillSecs = now - new Date(time); //returns this in milliseconds\n      const timeDiffMins= timeDiffMillSecs / 60000 //returns this in mins\n      const upvoteRate = amount / timeDiffMins //Rate of upvote per day \n      rate=upvoteRate.toFixed(4);\n    }\n\n    if(tabType===\"test\"){\n      amount=modalItem.totalAnswered; time=modalItem.timeToComplete\n      rate = (amount / time).toFixed(2);\n      if(amount===0 || time===0) rate=0; //avoids NAN/Undefined\n    };\n    return rate;\n  };\n\n  // for test components\n  const getScore=(score)=>(score).toFixed(2);\n\n  // Close modal\n  const closeModal=(e)=> {\n    const lvContainer =\"profile-item-view-container\";\n    if(e.target.className !== lvContainer && tabType !==\"test\"){\n      return;\n    }\n    dispatchModal();\n  };\n\n  const renderTabView=()=>{\n    const shared =()=>(\n      <Fragment>\n        <li><span>Created</span><span className=\"stats-value\">{format.createdAt(modalItem.createdAt)}</span></li>\n        <li><span>Expired</span><span className=\"stats-value\">{modalItem.expired.toString()}</span></li>\n      </Fragment>\n    );\n\n    if(tabType===\"post\"){\n      // Enables the post actions\n      const {postIdSaver} = feedState[modalItem.category];\n      const feedAction = new FeedAction(postIdSaver, modalItem.category, dispatch);\n\n      return(\n        <Fragment>\n          <div className=\"profile-item-large-view-l\">\n            {getMedia(modalItem)}\n          </div>\n          <div className=\"profile-item-large-view-r\">\n            <div className=\"item-stats-container\">\n              {\n                modalItem.creatorId._id === currentUserId?\n                <Fragment>\n                  <p className=\"stats-header\">Post Stats</p>\n                  <div className=\"stats-item\">\n                    <li><span>Upvotes</span><span className=\"stats-value\">{modalItem.upvoteCount}</span></li>\n                    <li><span>Upvote Rate</span> <span className=\"stats-value\">{getRate()}/mins</span></li>\n                  </div>\n                </Fragment>:null\n              }\n\n              <p className=\"stats-header\">Post Details</p>\n              <div className=\"stats-item\">\n                {\n                  modalItem.creatorId._id === currentUserId? null:\n                  <li><span>Creator</span><span className=\"stats-value\">{modalItem.creatorId.username}</span></li>\n                }\n                {shared()}\n                <li><span>Category</span><span className=\"stats-value\">{modalItem.category}</span></li>\n                <li><span>Sub-Category</span><span className=\"stats-value\">{modalItem.subCategory}</span></li>\n              </div>\n\n              <p className=\"stats-header\">Post Actions</p>\n              <div className=\"largeview-post-action\">\n              {\n                feedAction.hasUpVoted(modalItem.upvotes,modalItem._id,currentUserId)? \n                <button className=\"upvoted\">\n                  <BsArrowUp size={20}/>\n                  <span>upvoted</span>\n                </button>\n                : \n                <Fragment>\n                  { window && window.__item_id__ === modalItem._id && <Toast parentName={\"entertainment\"} className={\"bonus-alert\"} alertType={\"bonus\"} timeOut={1200}/> }\n                  <button \n                  disabled={modalItem.creatorId._id === currentUserId} \n                  onClick={() =>{\n                    if(canVote(isContestant, dispatch)){\n\n                      dispatch(showAlert({main:\"bonus: \", subMain:\"+1\", alertName:\"bonus\", onClick:null}, \"entertainment\"));\n                      if(typeof window !== \"undefined\") window.__item_id__ = modalItem._id;\n\n                      // Timer allows for animation\n                      const timer = setTimeout(() =>{\n                        feedAction.createUpvote(modalItem);\n                        clearTimeout(timer);\n                      },1210);\n                    };\n                  }}>\n                    <BsArrowUp size={20}/>\n                    <span>upvote</span>\n                  </button>\n                </Fragment>\n              }\n                <button onClick={()=> feedAction.sharePost(modalItem)}><IoMdShareAlt size={20}/>share</button>\n              </div>\n            </div>\n          </div>\n          <ErrorModal/>\n          <ShareModal/>\n        </Fragment>\n      )\n    }\n\n    if(tabType === \"test\"){\n      return(\n        <Fragment>\n          <div className=\"profile-item-large-view-l grad-hat-large-view\">\n            <IoSchoolSharp className=\"grad-hat-icon\"/>\n          </div>\n          <div className=\"profile-item-large-view-r\">\n            <div className=\"item-stats-container\">\n              <p className=\"stats-header\">Test Stats</p>\n              <div className=\"stats-item\">\n                <li><span>Total Points</span><span className=\"stats-value\">{getScore(modalItem.total_score)}</span></li>\n                <li><span>Reading</span> <span className=\"stats-value\">{getScore(modalItem.reading_score)}</span></li>\n                <li><span>Writing</span> <span className=\"stats-value\">{getScore(modalItem.writing_score)}</span></li>\n                <li><span>Listening</span> <span className=\"stats-value\">{getScore(modalItem.listening_score)}</span></li>\n                <li><span>Speaking</span> <span className=\"stats-value\">{getScore(modalItem.speaking_score)}</span></li>\n                <li><span>Speed</span> <span className=\"stats-value\">{getRate()} Q/min</span></li>\n              </div>\n\n              <p className=\"stats-header\">Test Details</p>\n              <div className=\"stats-item\">\n              <li><span>Mode</span><span className=\"stats-value\">{modalItem.testMode}</span></li>\n              <li><span>Version</span><span className=\"stats-value\">{modalItem.version}</span></li>\n                {shared()}\n              </div>\n            </div>\n           </div>\n        </Fragment>\n      )\n    }\n  };\n\n  return(\n    <BackDrop isModal={isModal}>\n      <div className=\"profile-item-view-container\" onClick={closeModal}>\n      <div className=\"confirmationModal-closeBtn\">\n        <button onClick={dispatchModal}>\n          <AiOutlineClose size={20}/>\n        </button>\n      </div>\n        {\n          Object.keys(modalItem).length>0 ?\n          renderTabView() : <UploadSpinner canSpin={true}/>\n        }\n      </div>\n    </BackDrop>\n  );\n};\nexport default View;","import {useEffect, useState, useRef} from 'react';\nimport {useSelector} from 'react-redux';\nimport Loader from \"../../utils/Loader\";\nimport getMedia from \"../feed/getMedia\";\nimport {ProfileGridImg} from \"../../utils/imageParams\";\nimport LargeView from \"./LargeView\";\n\nconst ProfileTab =({tabType, user, profileAction, format})=>{\n  const{profile} = useSelector(state => state);\n  const [placeHolder, setPlaceHolder] = useState(false);\n  const [dataFinished, setDataFinished] = useState({post:false, test:false});\n  const currentTab = profile[tabType];\n\n  let timerId = useRef({}) //used for clearing timeout\n\n  useEffect(()=>{\n    // Check if user data still exists in database and if the user has requested more\n    if(dataFinished[tabType]) return; // If no more post/test to fetch\n\n    let creatorId =user._id;\n    let nextCursor =currentTab.nextCursor;\n    let currentData = currentTab[tabType+\"s\"]\n    let body ={creatorId, nextCursor}\n\n    // Get user's posts from db\n    profileAction.getAllData(body,tabType,currentData, setDataFinished);\n    \n    return() => clearTimeout(timerId);\n\n  },[tabType, profile[tabType].nextCursor]);\n\n  // Displays the individual grid item for tests\n  const testGridItem =({version,createdAt})=>{\n    return(\n      <div className=\"test-grid-item\">\n        <div className=\"version-display\"><span>{version}</span></div>\n        <span className=\"date-display\">&middot; {format.createdAt(createdAt)}</span>\n      </div>\n    )\n  }\n  // Set profile Item large screen view\n  const setLargeView =(item)=>{\n  profileAction.setIsModal(true,item)\n  };\n\n  // Get the user's posts or tests array e.g (profile[\"post\"][\"posts\"])\n  const items = currentTab[tabType+\"s\"];\n  const itemsCount = items.length;\n\n  const fallback = () =>{\n\n    timerId = setTimeout(() =>{\n      setPlaceHolder(!currentTab.isFetching && !itemsCount);\n      clearTimeout(timerId)\n    },10);\n\n    if(placeHolder){\n      return(\n        <div className=\"place-holder\">\n          {tabType === \"post\"? \"You have not made any post yet!\" : \"You have not taken any test yet!\"}\n        </div>\n      )\n    };\n    \n    return(\n      <div className=\"place-holder\">\n        {Loader()}\n      </div>\n    ) \n  }\n\n  return(\n    <div className=\"profile-content-main\">\n    {\n      itemsCount?items.map((item,index)=>{ \n        const points =tabType===\"post\"? item.upvoteCount : item.total_score; \n        return(\n          <div key={index.toString()} className=\"profile-item-wrapper\">\n            {tabType===\"post\"? getMedia(ProfileGridImg, item, false) : testGridItem(item)}  \n            <div className=\"profile-item-btn-container\">\n              <button className=\"profile-item-votes\">{format.points(points)} {tabType===\"post\"?\"votes\":\"points\"}</button>\n              <button className=\"profile-item-stats-btn\" onClick={()=>setLargeView({...item, index})}>see more</button>\n            </div>\n          </div>\n        )\n      })\n      :\n      fallback()\n    }\n\n    <LargeView\n      tabType={tabType}\n      profileAction={profileAction}\n    />\n    </div>\n  );\n}\nexport default ProfileTab;","\n// User posts \nexport const SAVE_POST_IDS = \"SAVE_POST_IDS\"\n\nexport const FETCH_USER_POST = \"FETCH_USER_POST\"\n\nexport const IS_FETCHING_POST = \"IS_FETCHING_POST\"\n\nexport const SET_USER_POST_CURSOR = \"SET_USER_POST_CURSOR\"\n\n\n\n// User tests\nexport const FETCH_USER_TEST = \"FETCH_USER_TEST\"\n\nexport const IS_FETCHING_TEST = \"IS_FETCHING_TEST\"\n\nexport const SET_USER_TEST_CURSOR = \"SET_USER_TEST_CURSOR\"\n\n\n\n// Shared props\nexport const SET_IS_MODAL = \"SET_IS_MODAL\"\n\n\n","import{SET_IS_MODAL}from \"./ActionType\";\n\nimport {fetchUserSuccess} from \"../../redux/user/UserAction\";\nimport _useAxios from \"../../utils/_useAxios\";\n\n/**\n * The ProfileActions constructor function exposes action creators && getHandlers as methods\n * \n * for updating the redux state of a user's profile'\n */\nclass ProfileActions{\n  constructor(dispatch){\n    this.dispatch = dispatch;\n  }\n\n  // Fetch user Posts/Tests\n  fetchProfileFeed(feed,TYPE){\n    this.dispatch({\n      type:`FETCH_USER_${TYPE}`,\n      payload:feed\n    })\n  }\n\n  // Post/Test Next Cursor\n  setNextCursor(nextCursor,TYPE){\n    this.dispatch({\n      type:`SET_USER_${TYPE}_CURSOR`,\n      payload:nextCursor\n    })\n  }\n\n  // Set post/test finished\n  setIsModal(isModal,modalItem){\n    this.dispatch({\n      type:SET_IS_MODAL,\n      payload:{\n        isModal,\n        modalItem\n      }\n    })\n  }\n\n  // Gets user's profile from db\n  getMe(){\n    _useAxios(\"GET\",{},\"users/me\").then(res=>{\n      this.dispatch(\n        fetchUserSuccess(res.data.user)\n      )\n    }).catch(err=>console.log(err))\n  }\n\n  // Gets a post from db while user is in LargeView\n  // getPost(postId, postsArray){\n  //   _useAxios(\"GET\",{},`posts/${postId}`).then(res=>{\n  //     const post = res.data.data\n\n  //     // Get the index of the post in redux\n  //     let postIndex;\n  //     for(let i=0; i<postsArray.length; i++){\n  //       if(postsArray[i]._id === postId){\n  //         postIndex = i;\n  //         break;\n  //       }\n  //     }\n\n  //     // Replace the new post with its old position in redux  \n  //     postsArray.splice(postIndex,1, post)\n\n  //     // update modalItem to emulate real-time\n  //     this.setIsModal(true,post);\n\n  //     // update redux posts in user's profile\n  //     this.fetchProfileFeed(postsArray,\"POST\");\n\n  //   }).catch(err=>console.log(err))\n  // }\n  \n  // Gets all of this user's posts/tests from db\n  getAllData(body,tabType,currentData,setDataFinished){ \n    // Capitalizing tabType for redux\n    const tabTypeUpper = tabType.toUpperCase();\n\n    // loading indicator\n    this.dispatch({\n      type:`IS_FETCHING_${tabTypeUpper}`,\n      payload:true\n    })\n\n    let endPoint =\"\";\n\n    // for post tab\n    if(tabType===\"post\") endPoint = \"posts\";\n\n    // for test tab\n    if(tabType===\"test\") endPoint = \"tests/getAllTests\";\n\n    _useAxios(\"GET\",body,endPoint).then(response=>{\n      let cursor;\n      const data = response.data[tabType+\"s\"]; //e.g response.data.posts\n      const dataCount=data.length;\n      cursor = dataCount && data[dataCount - 1]._id;\n\n      if(data.length){\n        // Update tabType content\n        this.fetchProfileFeed([...currentData,...data],tabTypeUpper)\n        \n        // Update user tabType nextcursor\n        this.setNextCursor(cursor,tabTypeUpper);\n      }\n      else{\n        // loading indicator\n        this.dispatch({\n          type:`IS_FETCHING_${tabTypeUpper}`,\n          payload:false\n        })\n\n        // Set post/test finished\n        setDataFinished((prevState) =>({...prevState,[tabType]:true}));\n      }\n\n    }).catch(err=>console.log(err));\n  }\n}\nexport default ProfileActions;","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate,useParams,useLocation} from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsCollectionPlay,BsFillCollectionPlayFill } from \"react-icons/bs\";\nimport {IoSchoolOutline, IoSchoolSharp} from \"react-icons/io5\";\nimport ProfileTab from \"./ProfileTab\";\nimport ProfileActions from \"../../redux/profile/action\";\nimport {motion} from 'framer-motion';\nimport Format from \"../../utils/Format\";\nimport { AVATAR, avatarParam } from \"../../utils/imageParams\";\n\nconst variants = {\n  show:{\n    opacity:1,\n    transition:{\n      duration:0.5,\n      ease:\"easeIn\"\n    },\n  },\n  hidden:{\n    opacity:0,\n    transition:{\n      duration:0.5,\n      ease:\"easeOut\"\n      \n    }\n  }\n}\n\nconst Profile = ( ) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const profileAction = new ProfileActions(dispatch);\n  const format = new Format();\n\n  const { user } = useSelector((state) => state.user);\n  const {username} = useParams();\n  const location = useLocation();\n\n  const [isScroll, setIsScroll] = useState(false);\n  const [isUser, setIsUser] = useState(true);\n  const [profileTab, setProfileTab] = useState(\"post\");\n\n\n  //checking url param to see if username exit\n  //if  not return 404\n  useEffect(()=>{\n    const paramUserName = user.username.split(\" \").join(\"\");\n    let paramUserId, profileTab;\n    if(location.state){\n      paramUserId = location.state.id;\n      profileTab = location.state.profileTab;\n    }\n\n    if(user._id !==paramUserId || username !==  paramUserName){\n      setIsUser(false)\n    }else{\n      if(profileTab){\n        setProfileTab(profileTab)\n      }\n      setIsUser(true)\n    }\n\n    return () =>{\n      // clearing user's data to enable re-fetching when profile mounts initially\n      [\"POST\", \"TEST\"].forEach((tabType) =>{\n        profileAction.setNextCursor(null, tabType);\n        profileAction.fetchProfileFeed([], tabType);\n      });\n    }\n  },[username])\n\n  // Get user profile from db\n  useEffect(()=>profileAction.getMe(),[])\n\n  function verticalScrollListener() {\n    const avatar = document && document.getElementById(\"user-avatar\");\n    const avatarVisibility = avatar && avatar.getBoundingClientRect().bottom; //Get the visibility of avatar from the viewport\n    if(avatarVisibility < 67){\n      setIsScroll(true);\n    }\n    else{\n      setIsScroll(false)\n    }\n\n\t}\n\n\tuseEffect(() => {\n    if(typeof window !== \"undefined\"){\n      // setting animation \n      const profileWrapper = document && document.querySelector(\".profile-wrapper\");\n\n      if(window.innerWidth < 600){\n        profileWrapper &&  profileWrapper.addEventListener('scroll',verticalScrollListener);\n      }\n    \n      return ()=>{\n        profileWrapper &&  profileWrapper.removeEventListener('scroll', verticalScrollListener);\n      }\n    }\n  });\n  \n\n  if(!isUser){\n    return <h4>404 not found!</h4>\n    // \n  }\n\n  return (\n    <div className=\"profile-wrapper\">\n    \n    {/**Mobile */}\n    <div className=\"profile-res-mo\">\n      <div className=\"profile-res-mo-left\">\n          <button onClick={()=> navigate(\"/home\")} className=\"profile-arr-back\">\n              <BiArrowBack/><span className=\"profile-res-name\">Back</span>\n          </button>\n      </div>\n      <div className=\"profile-res-mo-mid\">\n        <motion.img \n          animate={isScroll ? \"show\" : \"hidden\"}\n          initial=\"hidden\"\n          variants={variants}\n          src={`${user.photo}?${avatarParam(\"73\")}`} alt={`Avatar of ${user.username}`}\n\n        />\n      </div>\n      <div className=\"profile-more-stats\">\n      {/* <RiMenu3Line/> */}\n      </div>\n    </div>\n\n        {/**Desktop*/}\n      <div className=\"profile-container\">\n        <div className=\"profile-content\">\n          <div className=\"profile-content-top\">\n            <div onClick={()=> navigate(\"/home\")} className=\"profile-arr-back\">\n              <BiArrowBack color=\"white\" size={30}/><span className=\"profile-res-name\">Back</span>\n            </div>\n            <div className=\"profile-content-stats\">\n              <div className=\"profile-counts\">\n                <span>{format.points(user.points.total.tests) || 0}</span>\n                <p>Test(pts)</p>\n              </div>\n              <div className=\"profile-counts-ml\">\n                <span>{user.points.total.upvotes || 0}</span>\n                <p>Upvotes</p>\n              </div>\n            </div>\n            <AVATAR src={user.photo} alt={`Avatar of ${user.username}`} id=\"user-avatar\" isLargeAvatar={true}/>\n\n            <div className=\"profile-content-stats-right\">\n              <div className=\"profile-counts\">\n                <span>{format.points(user.points.bonus.totalCount) || 0}</span>\n                <p>Bonus</p>\n              </div>\n              <div className=\"profile-counts-ml\">\n                <span>{user.coins || 0}</span>\n                <p>Coins</p>\n\n              </div>\n            </div>\n          </div>\n          <div className=\"profile-content-name\">\n            <p>{user.fullname}</p>\n          </div>\n\n          {/**Mobile */}\n          <div className=\"profile-res-mob-stats\">\n          <div className=\"profile-counts\">\n                <span>{format.points(user.points.total.tests) || 0}</span>\n                <p>Test(pts)</p>\n              </div>\n              <div className=\"profile-counts\">\n                <span>{user.points.total.upvotes || 0}</span>\n                <p>Upvotes</p>\n              </div>\n              <div className=\"profile-counts\">\n                <span>{ format.points(user.points.bonus.totalCount) || 0}</span>\n                <p>Bonus</p>\n              </div>\n              <div className=\"profile-counts\">\n                <span>{user.coins || 0}</span>\n                <p>Coins</p>\n              </div>\n          </div>\n          \n             {/**Bottom Navs */}\n          <div className=\"profile-content-navigation\">\n            <div className=\"profile-tabs-container\">\n              <div className=\"profile-tabs\">\n              <div className=\"profile-tab\" onClick={() =>setProfileTab(\"post\")}>\n                {profileTab===\"post\"?<BsFillCollectionPlayFill size={27} color=\"#2142a3\"/>:<BsCollectionPlay size={27} color=\"slategrey\"/>}\n              </div>\n              <div className=\"profile-tab\" onClick={() =>setProfileTab(\"test\")}>\n                {profileTab===\"test\"?<IoSchoolSharp size={27} color=\"#2142a3\"/>:<IoSchoolOutline size={27} color=\"slategrey\"/>}\n              </div>\n              </div>\n            </div>\n            <hr/>\n\n            <ProfileTab \n              tabType={profileTab} \n              user={user} \n              profileAction={profileAction} \n              format={format}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Profile;","import {useSelector} from 'react-redux';\nimport { BsCheckAll } from 'react-icons/bs';\n\nconst GrideItem = ({item, qNumber}) =>{\n  let colCriteria = item.answer.hasOwnProperty(\"audioUrl\")? item.answer.audioUrl:item.answer;\n  return(\n    <div className=\"grid-item-tile\">\n      <span>{qNumber}</span>\n      <span>\n        <BsCheckAll color={colCriteria? \"black\":\"#f5f5f5\"}/>\n      </span>\n    </div>\n  )\n}\n\nconst TestLeft = () =>{\n\tconst{ stateTemplate } = useSelector(state => state.test);\n\tconst {testSession} = useSelector(state => state.user.user);\n\treturn (\n\t\t<div id=\"testLeft\">\n\t\t\t<div className=\"test-left-container\">\n        <nav id=\"test-left-nav\">\n          <span>Version :</span>{testSession.version}\n        </nav>\n      <div className=\"grid-container\">\n        {stateTemplate.map((item,index)=>{\n          return(\n            <GrideItem\n            item={item}\n            qNumber={index + 1}\n            key={index.toString()}\n            />\n          )\n        })\n        }\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default TestLeft;\n","export const SET_ACTIVATE_PAGE = 'SET_ACTIVATE_PAGE';\n\nexport const SET_CURRENT_TYPE = 'SET_CURRENT_TYPE'\n\nexport const SET_ANSWERS = 'SET_ANSWERS'\n\nexport const SET_STATE_TEMPLATE = 'SET_STATE_TEMPLATE'","import {SET_ACTIVATE_PAGE,SET_CURRENT_TYPE,SET_ANSWERS,SET_STATE_TEMPLATE} from './ActionTypes';\n\nexport const setActivePage = (page) =>({\n  type: SET_ACTIVATE_PAGE,\n  payload: page\n});\n\nexport const setCurrentType = (currType) =>({\n  type: SET_CURRENT_TYPE,\n  payload: currType\n});\n\n// User's Saved answers\nexport const setAnswers = (answers,isNewAnswer) =>({\n  type: SET_ANSWERS,\n  payload: {answers, isNewAnswer}\n});\n\n\n// User's Saved state template\nexport const setStateTemplate = (stateTemplate) =>({\n  type: SET_STATE_TEMPLATE,\n  payload: stateTemplate\n});\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setActivePage, setCurrentType} from '../../redux/test/Actions';\nimport { GiRead } from 'react-icons/gi';\nimport {BsPencilSquare} from 'react-icons/bs';\nimport {MdRecordVoiceOver } from 'react-icons/md';\nimport {ImHeadphones } from 'react-icons/im';\n\nconst FooterNav = props => {\n\n  const dispatch = useDispatch();\n  const { currentType } = useSelector(state => state.test);\n  \n  const onPageChange = (type) =>{\n              \n    // 1) Set active page # to default\n    dispatch(setActivePage('one'))\n\n    // 2) Set current test type\n    dispatch(setCurrentType(type))\n  }\n  return (\n    <div id={props.id}>\n    <div onClick={() => onPageChange('reading')} className=\"page-type-item\" style={{backgroundColor:currentType === 'reading' ? '#122d7b':null,color:currentType === 'reading' ? 'white':'black',border:currentType === 'reading' ? 'none':null }}>\n      <p><GiRead></GiRead></p>\n      <p>Reading</p>\n    </div>\n    <div onClick={() => onPageChange('writing')} className=\"page-type-item\" style={{backgroundColor:currentType === 'writing' ? '#122d7b':null,color:currentType === 'writing' ? 'white':'black',border:currentType === 'writing' ? 'none':null }}>\n      <p><BsPencilSquare></BsPencilSquare></p> \n      <p>Writing</p>\n    </div>\n    <div onClick={() => onPageChange('listening')} className=\"page-type-item\" style={{backgroundColor:currentType === 'listening' ? '#122d7b':null,color:currentType === 'listening' ? 'white':'black',border:currentType === 'listening' ? 'none':null }}>\n      <p><ImHeadphones></ImHeadphones></p> \n      <p>Listening</p>\n    </div>\n    <div onClick={() => onPageChange('speaking')} className=\"page-type-item\" style={{backgroundColor:currentType === 'speaking' ? '#122d7b':null,color:currentType === 'speaking' ? 'white':'black',border:currentType === 'speaking' ? 'none':null }}>\n      <p><MdRecordVoiceOver></MdRecordVoiceOver></p> \n      <p>Speaking</p>\n    </div>\n    </div>\n  )\n}\nexport default FooterNav;","import { fetchUserSuccess } from \"../../redux/user/UserAction\";\n/**\n* Exposes methods needed for updating test state \n*/\nclass StateActions {\n  constructor(user,dispatch, navigate){\n    this.user = user;\n    this.dispatch = dispatch;\n    this.navigate = navigate;\n  };\n\n  testTypes = ['reading','writing','listening','speaking'];\n\n  onPrevious(currentType,setCurrentType, setActivePage){\n    // 1) Don't execute if the first type is READING\n    if(currentType === 'reading') return;\n\n    // 2) Get index of the current test type in testTypes array above\n    let index = this.testTypes.indexOf(currentType);\n\n    // 3) Get the prev test type \n    let prevType  = this.testTypes[index - 1];\n\n    // 4) Set Active page to default Two for navigating to reading\n    // currentType === \"writing\" && this.dispatch(setActivePage('two'));\n    this.dispatch(setActivePage('two'));\n\n    // 5) set previous/current page\n    this.dispatch(setCurrentType(prevType))\n  };\n\n  onNext(currentType,setCurrentType, setActivePage){\n    // 1) Don't execute if the last type is SPEAKING\n    if(currentType === 'speaking') return;\n\n    // 2) Get index of the current test type in testTypes array above\n    let index = this.testTypes.indexOf(currentType);\n\n    // 3) Get the next/Prev test type\n    let nextType  = this.testTypes[index + 1];\n    \n    // 4) Set Active page to One\n    this.dispatch(setActivePage('one'))\n\n    // 5) Set next/current type test type\n    this.dispatch(setCurrentType(nextType))\n  };\n\n  // Sets the values of the input tags/tags that have been replaced with regex: MAKE SURE TO GIVE TAGS to be REPLACED AN ID\n  setDefaultValues(task,taskType){\n    task && task.length && document.querySelectorAll(\".question-description\").forEach((tag, i)=>{\n      if(tag.id){\n        let input = tag.querySelector(\"input\");\n        let type = input && tag.querySelector(\"input\").type;\n\n        if(input && type){\n          //1) For TEXT inputs\n          if(type===\"text\" && task[(tag.id*1)-1])input.value=task[(tag.id*1)-1].answer\n\n          // 2) For RADIO inputs\n          if(type===\"radio\" && task[(input.className*1)-1]){\n            if(task[(input.className*1)-1].answer.toLowerCase() === input.value.toLowerCase()){\n              input.checked=true;\n            }\n          }\n        }\n    \n        // 3) For SELECT tags\n        if(tag.nodeName===\"SELECT\" && task[(tag.id*1)-1]){\n          tag.value=task[(tag.id*1)-1].answer? task[(tag.id*1)-1].answer:\"select\";\n          \n          // 3-i) For speaking task two\n          if(taskType && taskType === \"speaking_ans_2\"){\n            tag.value=task[(tag.id*1)-1].answer.option? task[(tag.id*1)-1].answer.option:\"pick response\";\n          }\n        }\n      }\n    });\n  }\n\n  onTestSubmit(shouldSubmit){\n    \n    if(shouldSubmit){\n      // Navigate to test marking page\n      this.navigate(\"/test/marktest\",{replace: true,state:{...this.user.testSession}});\n\n      // Remove testSession from client side\n      this.dispatch(fetchUserSuccess({...this.user, testSession:{}}));\n    }\n  }\n\n  // Displays submit testModal options\n  testModalOpts(){\n    return{\n      header:\"Confirm Test Submission\", //Text to display as the header of modal\n      subHeader:\"Are you sure you want to submit test?\", //Text to display as sub-header of Modal\n      choice:[\"Cancel\",\"Yes Submit\"], //Users options to choose from\n      choiceParams:[false,true], //Parameters to be passed to functions of the users choice option\n      callback:(value, closeModal)=>{\n        closeModal();\n        this.onTestSubmit(value)\n      }\n    }\n  }\n}\n\nexport default StateActions;","import { useState, useEffect } from 'react';\nimport { useNavigate} from 'react-router-dom';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport countDownTimer from \"../../utils/countDownTimer\";\nimport StateActions from \"./stateActions\"\n\nconst Timer = ({isChangeStyle = false}) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useSelector(state => state.user);\n  const [{days,hrs, mins, secs}, setTime] = useState({days:0,hrs:0, mins:0, secs:0});\n\n  const tick = (days,hrs, mins, secs)=> setTime({days,hrs, mins, secs});\n  useEffect(() => {\n   const timerId = countDownTimer(user.testSession.duration_Millis,tick);\n\n    // Submit test on time up\n    if(hrs === \"00\" && mins === \"00\" && secs === \"00\"){\n      \n      // new StateActions(user,dispatch,navigate).onTestSubmit(true)\n    }\n   return () => clearInterval(timerId);\n  });\n\n  return(\n     <>\n      {\n        !isChangeStyle  ? (\n\n          <div className=\"test-timer-panel-item\">\n            <h5>Time Remaining</h5>\n            <div className=\"upvote-countdown-container\">\n              <div id=\"upvote-countdown-days-hours-container\">\n                <div id=\"upvote-days-container\">\n                  <div className=\"upvote-days-hours-container-item-1\">\n                  { days }\n                  </div>\n                  <div className=\"upvote-days-hours-container-item-2\">DAYS</div>\n                </div>\n\n                <div id=\"upvote-hours-container\">\n                  <div className=\"upvote-days-hours-container-item-1\">\n                  { hrs }\n                  </div>\n                  <div className=\"upvote-days-hours-container-item-2\">HRS</div>\n                </div>\n              </div>\n\n              <div id=\"upvote-countdown-mins-secs-container\">\n                <div id=\"upvote-minutes-container\">\n                  <div className=\"upvote-minutes-seconds-container-item-1\">\n                  { mins }\n                  </div>\n                  <div className=\"upvote-minutes-seconds-container-item-2\">\n                    MINS\n                  </div>\n                </div>\n\n                <div id=\"upvote-seconds-container\">\n                  <div className=\"upvote-minutes-seconds-container-item-1\">\n                  { secs }\n                  </div>\n                  <div className=\"upvote-minutes-seconds-container-item-2\">\n                    SECS\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        ) : (\n          <div className=\"timer-wrapper\">\n\n            <div className=\"timer-container\">\n              <div className=\"timer-container-panel\">\n                <div className=\"timer-panel-item\">\n                  <p>{ days }</p>\n                  <small>Days</small>\n                </div>\n                <div className=\"timer-panel-item\">\n                  <p>  { hrs }</p>\n                  <small>hrs</small>\n                </div>\n              </div>\n              <div className=\"timer-container-panel\">\n                <div className=\"timer-panel-item\">\n                  <p>   { mins }</p>\n                  <small>mins</small>\n                </div>\n                <div className=\"timer-panel-item\">\n                  <p>  { secs }</p>\n                  <small>secs</small>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        )\n      }\n\n     </>\n  );\n}\nexport default Timer;","import FooterNav from \"./FooterNav\";\nimport Timer from \"./Timer\";\n\nconst TestRight = () => {\n  return (\n    <div id=\"testRight\">\n      <div className=\"testRight-container\">\n        <div className=\"test-timer-panel-container\">\n\t      \t<Timer/>\n        </div>\n        <FooterNav id=\"test-right-catergory\"></FooterNav>\n      </div>\n    </div>\n  );\n};\n\nexport default TestRight;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Timer from \"./Timer\";\n\nconst TestNav = () => {\n\tconst [ day, setDay ] = useState([]);\n\tconst [ month, setMonth ] = useState([]);\n\tconst [ year, setYear ] = useState([]);\n  \n  const { totalPoints, duration } = useSelector((state) => state.user.user.testSession);\n\n\tuseEffect(() => {\n\t\tconst months = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ];\n\t\tlet [ date, month, year ] = new Date().toLocaleDateString().split('/');\n\n\t\tsetDay(date);\n\t\tsetMonth(months[month - 1]);\n\t\tsetYear(year);\n\t},[]);\n\treturn (\n\t\t<div id=\"testNav\" className=\"before-scroll\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<span>Date:</span> {month} {day}, {year}\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span>Grading:</span> { totalPoints } points available\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span>Duration:</span> { duration }  hours\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<span>Mode:</span> {(typeof window !== \"undefined\" && localStorage.getItem(\"testMode\")) || \"\"}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div className=\"testNav-timer\">\n\t\t\t<Timer isChangeStyle={true}/>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n\nexport default TestNav;","import {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskOne = ({answers, questions, SectionComp, stateTemplate, setDefaultValues}) =>{\n  const dispatch = useDispatch();\n  const{passage,sections} = questions;\n  const[taskAnswers, setTaskAnswers] = stateTemplate\n\n  // scroll up On initial mount\n  useEffect(()=>typeof window !== 'undefined' && window[\"test-main\"] && window[\"test-main\"].scrollTo(0,0), []);\n\n  // Sets previous task answers saved in db\n  useEffect(() => {\n    console.log(\"answers: \", answers)\n    answers && \n    answers.reading_ans.task_1.length && \n    setTaskAnswers(answers.reading_ans.task_1)\n  },[answers.reading_ans.task_1])\n\n  // updates task asnwers for testLeft on every question attempt\n  useEffect(()=>dispatch(setStateTemplate(taskAnswers)), [taskAnswers]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = () =>{\n    answers.reading_ans.task_1 = taskAnswers;\n    dispatch(setAnswers(answers, true));\n  }\n\n  // Sets the values of the input tags that have been replaced with regex\n  useEffect(() =>setDefaultValues(taskAnswers));\n\n\n  const setState =(question_number,value)=>{\n\n    setTaskAnswers(prevTaskOne =>{\n      prevTaskOne[question_number - 1].answer = value;\n\n      return [...prevTaskOne];\n    });\n\n  }\n  \n  return(\n    <div id=\"reading-task-one\">\n      {\n        sections.pageOne.map((section,index)=>(\n          <SectionComp \n          passage={passage}\n          section={section}\n          setState={setState}\n          saveOnBlur={saveOnBlur}\n          key={index.toString()}\n          />\n        ))\n      }\n    </div> \n  )\n};\n\nexport default TaskOne;","import {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskTwo = ({answers, questions, SectionComp, stateTemplate, setDefaultValues}) =>{\n  const dispatch = useDispatch();\n  const{passage,sections} = questions\n  const[taskAnswers, setTaskAnswers] = stateTemplate\n\n  // scroll up On initial mount\n  useEffect(()=>typeof window !== \"undefined\" && window[\"reading-task-two\"] && window[\"reading-task-two\"].scrollIntoView(), []);\n\n  // Sets previous task answers saved in db\n  useEffect(() =>{\n    answers && \n    answers.reading_ans.task_1.length &&\n    setTaskAnswers(answers.reading_ans.task_1)\n  },[answers.reading_ans.task_1]);\n  \n  // updates task asnwers for testLeft on every question attempt\n  useEffect(()=>dispatch(setStateTemplate(taskAnswers)), [taskAnswers]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = () =>{\n    answers.reading_ans.task_1 = taskAnswers;\n    dispatch(setAnswers(answers,true));\n  }\n  \n  // Sets the values of tags on mount using answers in state\n  useEffect(() =>setDefaultValues(taskAnswers));\n\n  const setState =(question_number,value)=>{\n    setTaskAnswers(prevTaskTwo =>{\n      prevTaskTwo[question_number - 1].answer = value;\n      return [...prevTaskTwo]\n    });\n\n  };\n\n  return(\n    <div id=\"reading-task-two\">\n    {\n      sections.pageTwo.map((section,index)=>(\n        <SectionComp \n        passage={passage}\n        section={section}\n        setState={setState}\n        saveOnBlur={saveOnBlur}\n        key={index.toString()}\n        />\n      ))\n    }\n  </div>\n  )\n}\nexport default TaskTwo; ","import _useAxios from \"../../utils/_useAxios\";\nimport ProfileActions from \"../../redux/profile/action\";\nimport {fetchUserSuccess} from \"../../redux/user/UserAction\";\n\n/**\n * Exposes methods for querying DB for tests\n */\nclass TestQuery{\n  constructor(user, dispatch, navigate){\n    this.user = user;\n    this.dispatch = dispatch;\n    this.navigate = navigate;\n  };\n\n  // Gets a new test for user to take/on refresh gets back same test\n  getNewTest(setQuestions){\n    const { testSession } = this.user;\n\n    const testMode = localStorage.getItem(\"testMode\") || \"\";\n\n    let params={testMode}; //Only need this on initial request\n\n    if(testSession.testId){\n      params={\n        testId:testSession.testId\n      };\n    }\n\n    _useAxios(\"GET\",params,\"tests/getNewTest\").then(res =>{\n      if(res.data){\n        // 1)Sets the questions to be used in each component\n        const { test } = res.data;\n        // const {test, candidateId, duration, duration_Millis} = res.data;\n\n        setQuestions(test);\n\n        //2) Update user in redux to get latest testSession on Init of new test\n        // if(!testSession.testId) new ProfileActions(this.dispatch).getMe();\n      }\n    }).catch(err =>console.log(err));\n  };\n\n  // Saves user's answers to DB\n  saveAnswers(type,task,answers){\n    const{ userOwnTestId } = this.user.testSession;\n\n    // 1) For all non-audio/speaking questions\n    let data = { userOwnTestId, type, task, answers }\n\n    // 2) For questions requiring user voice inputs\n    if(type===\"speaking_ans\"){\n      data = new FormData() //It uses the same format a form would use if the encoding type were set to \"multipart/form-data\".\n      data.append(\"userOwnTestId\",userOwnTestId); //user's currently created test\n      data.append(\"type\",type);\n      data.append(\"task\",task);\n      data.append(\"answers\",JSON.stringify(answers));\n      answers.forEach((answerItem,index)=>{\n        if(answerItem.answer.blob){\n          data.append(\"audioBlob\",answerItem.answer.blob,`Q${answerItem.question_num}`);\n        }\n      })\n    };\n\n    // 3) make axios request to server for form upload\n    _useAxios(\"PATCH\",data,\"tests/updateTest\")\n    .then((response) => {})\n    .catch((error) => console.log(error));\n  }\n\n  getUserSavedAnsDB(setAnswers){\n    const { testId, candidateId } = this.user.testSession;\n    const params={ testId, creatorId:this.user._id, candidateId }\n    \n    _useAxios(\"GET\",params,\"tests/getUserSavedAns\")\n    .then((response)=>{\n      const{ test }= response.data;\n\n      // update user's answers in redux\n      this.dispatch(setAnswers(test, false));\n      \n      // update testSession with userOwnTestId\n      this.dispatch(\n        fetchUserSuccess({\n          ...this.user, \n          testSession:{\n            ...this.user.testSession, \n            userOwnTestId:test._id\n          }\n        })\n      )\n      \n    }).catch((error) => console.log(error));\n  }\n};\n\nexport default TestQuery;","import { useEffect, useState, createContext } from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { useNavigate} from 'react-router-dom';\nimport {BiChevronsRight, BiChevronsLeft} from 'react-icons/bi';\nimport renderLoader from \"../../utils/Loader\";\nimport TestModal from \"../Modal/testModal\";\nimport {setActivePage, setCurrentType,setAnswers} from '../../redux/test/Actions';\nimport FooterNav from './FooterNav';\nimport TestQuery from \"./testQuery\";\nimport StateActions from \"./stateActions\";\n\nexport const TestContext = createContext({});\n\nconst TestContextProvider = ({ children }) =>{\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); \n  const{user} = useSelector(state => state.user);\n  const testQuery = new TestQuery(user, dispatch, navigate);\n  const stateActions = new StateActions(user, dispatch, navigate);\n\n  const[questions,setQuestions] = useState({});\n  const [isTestModal,setTestModal] = useState(false);\n  const _useModal =() => ({isTestModal, closeModal:()=>setTestModal(false)});\n\n  const{activePage, currentType} = useSelector(state => state.test);\n  const type = `${currentType}_ans`;\n  const task = activePage === \"one\"? \"task_1\" : \"task_2\";\n\n  const{ answers, isNewAnswer } = useSelector(state => state.test.answerObj);//User's current answers gotten from redux/db\n  console.log(\"answers: \", answers)\n  const answersToSave = answers[type][\"task_1\"];\n\n  // Replaces BOLD() and INPUT() tags in question\n  const parsing_rule = [\n    {pattern: /BOLD\\((.*?)\\)/g, replacement: `<b>$1</b>`},\n    {pattern: /INPUT\\((.*?)\\)/g, replacement: `<input type=\"text\" class=\"listening-input\"/>`}\n  ];\n\n  useEffect(() =>{\n    // Gets test questions from db\n    testQuery.getNewTest(setQuestions);\n\n    // Gets user's saved answers from db\n    // if(user.testSession.testId){\n    //   testQuery.getUserSavedAnsDB(setAnswers)\n    // }\n  },[]);\n    \n\n  const testMain = typeof window !== \"undefined\" && window['test-main'];\n  useEffect(()=> {\n\n    //Ensures answer isn't sent to db immediately page change\n    dispatch(setAnswers(answers, false));\n\n    // Enables scroll to top on each navigation to new page\n    testMain && testMain.scrollTo(0,0);\n    // activePage,currentType\n  },[currentType]);\n\n  // Saves user's answers to db as they come in\n  useEffect(() => {\n    \n    // if(!answersToSave.length || !isNewAnswer) return; //Ensures empty array of answers isn't saved to db\n\n    // testQuery.saveAnswers(type,task,answersToSave);\n\n  },[answersToSave])\n\n  \n  // Makes all the replacement needed in the question titles\n  useEffect(() => {\n    document.querySelectorAll('.question-description').forEach(function(tag){\n      let innerHTML = tag.innerHTML;\n      parsing_rule.forEach((rule)=>{\n        if(innerHTML.match(rule.pattern)){\n          innerHTML = innerHTML.replace(rule.pattern, rule.replacement);\n          tag.innerHTML = innerHTML;\n        }\n      })\n    })\n  });\n  \n  return(\n    questions.Reading? \n      <TestContext.Provider value={{questions, setDefaultValues: stateActions.setDefaultValues}}>\n        <div id=\"test-main\">\n        <h2 className=\"test-section-header\">{currentType.toUpperCase()}</h2>\n          { children }\n          <div onClick={()=>setTestModal(true)} className=\"page-type-item submit-test\" \n            style={{display:activePage===\"two\" && currentType===\"speaking\"?\"block\":\"none\"}}>\n            SUBMIT TEST\n          </div>\n          <div id=\"pagination-footer\">\n            <div id=\"page-number\">\n              <span className=\"page-number-item\"\n              onClick={() =>{\n                stateActions.onPrevious(\n                  currentType,\n                  setCurrentType, \n                  setActivePage\n                )\n              }}\n              >\n              <span><BiChevronsLeft color='#122d7b' size={25}/></span>\n              </span>\n              <span \n              className=\"page-number-item\" onClick={() =>dispatch(setActivePage('one'))} style={{borderLeft:'none',color:activePage === 'one' ? 'white':'black',backgroundColor:activePage === 'one' ? '#122d7b':'white', borderColor:activePage === 'one'?'#122d7b':null}}>1</span>\n              {\n                // currentType === \"reading\" && \n                <span className=\"page-number-item\" onClick={() =>dispatch(setActivePage('two'))} style={{borderRight:'none', borderLeft:'none',color:activePage === 'two' ? 'white':'black',backgroundColor:activePage === 'two' ? '#122d7b':'white',borderColor:activePage === 'two'?'#122d7b':null}}>2</span>\n              }\n              <span className=\"page-number-item\"\n              onClick={()=> {\n                stateActions.onNext(\n                  currentType,\n                  setCurrentType, \n                  setActivePage\n                )\n              }}\n              >\n                <span><BiChevronsRight color='#122d7b' size={25}/></span>\n              </span>\n            </div>\n            <FooterNav id='page-type-ROW'/>\n          </div>\n        </div>\n        {isTestModal?<TestModal {...{...stateActions.testModalOpts(), _useModal}}/>:null}\n    </TestContext.Provider>\n    :\n    renderLoader()\n  )\n}\nexport default TestContextProvider;","import {useState} from \"react\";\n\n/**\n * A custom hook that returns an array of {question_num:1...n, answer:\"\", mark:0}\n * where n = totalQuestions in a task\n * params: totalQuestions & testType & task\n */\nconst useStateTemplate=(totalQuestions)=>{\n\n  const stateTemplate = [...Array(totalQuestions)].map((q,index)=>{\n\n    return { question_num: ++index, answer:\"\", mark:0 }\n  });\n\n  return useState(stateTemplate);\n}\n\nexport default useStateTemplate","const SectionHeader = ({ section }) =>(\n  <>\n    <h4>{section.heading}</h4>\n    {section.sub_heading.map((subHeading,index)=>{\n      return(\n        <p key={index.toString()} className=\"question-description font-italic\">\n          {subHeading}\n        </p>\n      )\n    })}\n  </>\n);\n \nexport default SectionHeader;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst SingleAnswerMultipleChoice = ({ section, setState, saveOnBlur }) =>{\n  return(\n    <section>\n      <SectionHeader\n      section={section}\n      />\n      \n      {section.question_blocks.map((question,index)=>{\n        return(\n          <div key={index.toString()} className=\"question-block\">\n            <p className=\"inline-question\">\n              <strong>{question.question_number}</strong>\n              {question.heading}\n            </p>\n            <div className=\"answer-options\">\n            <form>\n              {question.answer_options.map((option,i)=>{\n                return(\n                  <label id={question.question_number} key={i.toString()} className=\"container question-description\">\n                    <span>{option.option}</span>\n                    <input  \n                    className={question.question_number} \n                    type=\"radio\" name={question.question_number} \n                    value={option.option}\n                    onBlur={saveOnBlur}\n                    // onClick={saveOnBlur}\n                    onChange={(e) => setState(question.question_number,e.target.value)}\n                    />\n                    <span className=\"checkmark\" />\n                    {option.value}\n                </label>\n                )\n              })}\n            </form>\n          </div>\n        </div>\n        )\n      })\n      }\n   </section>\n  )\n}\n \nexport default SingleAnswerMultipleChoice;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst SummaryCompletion = ({section, setState, saveOnBlur}) => {\n  return(\n    <section>\n\n      <SectionHeader\n      section={section}\n      />\n\n      <div className=\"question-block\">\n        <p className=\"summary-q\">\n        {section.question_blocks.map((question,index)=>{\n          return(\n            <span id={question.question_number} className=\"question-description\" key={index.toString()} \n            tabIndex={0}\n            onBlur={saveOnBlur}\n            onKeyDown={(e)=>{\n              if(e.target.type) {\n                // input.value=\"Check this question\";\n                e.target.addEventListener(\"blur\", (e)=> {\n                  setState(question.question_number,e.target.value)\n                })\n              }\n            }}\n          >\n            {question.heading}\n          </span>\n          )\n\n        })}\n        </p>\n      </div>\n    </section>\n  )\n}\n \nexport default SummaryCompletion;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst NoteCompletion = ({section, setState, saveOnBlur }) =>{\n  return(\n    <section>\n    \n      <SectionHeader\n      section={section}\n      />\n\n      <div className=\"selection-table-reading\">\n        <div>{section.table.heading}</div>\n        {section.table.table_items.map((item,index)=>(\n          <div key={index.toString()} className=\"tb-item\">\n            <span>{item.option}</span>\n            <span>{item.value}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"question-block\">\n        {section.question_blocks.map((question,index)=>{\n          return(\n            <p key={index.toString()} className=\"inline-question\">\n              <strong>{question.question_number}</strong>\n              {question.heading}\n              <select id={question.question_number} className=\"question-description select-box\" data-focusable=\"true\"\n              onBlur={saveOnBlur}\n              defaultValue={\"select\"}\n              onChange={(e)=>setState(question.question_number,e.target.value)}>\n              <option value=\"select\" disabled>select</option>\n              {section.table.table_items.map((item,index )=>{\n                return(\n                  <option key={index.toString()} value={item.option} className=\"r-14lw9ot\">\n                  {item.option}\n                  </option>\n                )\n              })}\n              </select>\n            </p>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default NoteCompletion;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst HeadingMatching = ({section, setState, saveOnBlur}) => {\n  return(\n    <section>\n      <SectionHeader\n      section={section}\n      />\n\n      <div className=\"selection-table-reading\">\n        <div>{section.table.heading}</div>\n        {section.table.table_items.map((item,index)=>(\n          <div key={index.toString()} className=\"tb-item\">\n          <span>{item.option}</span>\n          <span>{item.value}</span>\n          </div>\n        ))}\n      </div>\n\n    <div className=\"question-block\">\n    {section.question_blocks.map((question,index)=>{\n      return(\n        <p key={index.toString()} className=\"inline-question\">\n          <strong>{question.question_number}</strong>\n              {question.heading}\n          <span>\n          <select id={question.question_number} className=\"question-description  select-box\" data-focusable=\"true\"\n            onBlur={saveOnBlur}\n            defaultValue={\"select\"}\n            onChange={(e) =>setState(question.question_number,e.target.value)}>\n            <option value=\"select\" disabled>select</option>\n              {section.table.table_items.map((item,index)=>{\n                return(\n                  <option key={index.toString()} value={item.option} className=\"r-14lw9ot\">\n                    {item.option}\n                  </option>\n                )\n              })}\n          </select>\n          </span>\n        </p>\n      )\n    })}\n  </div>\n  </section>\n  )\n}\n \nexport default HeadingMatching;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst ParagraphMatching = ({section, passage, setState, saveOnBlur}) => {\n  return(\n    <section>\n    \n      <SectionHeader\n      section={section}\n      />\n\n      <div className=\"question-block\">\n        {section.question_blocks.map((question,index)=>{\n          return(\n            <p key={index.toString()} className=\"inline-question\">\n              <strong>{question.question_number}</strong>\n              {question.heading}\n              <span>\n              <select id={question.question_number} className=\"question-description select-box\" data-focusable=\"true\"\n              onBlur={saveOnBlur} \n              defaultValue={\"select\"}\n              onChange={(e) =>setState(question.question_number,e.target.value)}\n              >\n              <option value=\"select\" disabled>select</option>\n                {passage.paragraphs.map((paragraph,index)=>{\n                  return(\n                    <option key={index.toString()} value={paragraph.paragraph} className=\"r-14lw9ot\">\n                      {paragraph.paragraph}\n                    </option>\n                  )\n                })}\n              </select>\n              </span>\n            </p>\n          )\n        })}\n      </div>\n    </section> \n  )\n}\n \nexport default ParagraphMatching;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst SentenceMatching = ({section, setState, saveOnBlur}) => {\n  return(\n    <section >\n    \n      <SectionHeader\n      section={section}\n      />\n\n      <div className=\"selection-table-reading\">\n        <div/>\n        {section.table.table_items.map((item,index)=>(\n          <div key={index.toString()} className=\"tb-item\">\n            <span>{item.option}</span>\n            <span>{item.value}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"question-block\">\n      {section.question_blocks.map((question,index)=>{\n        return(\n          <p key={index.toString()} className=\"inline-question\">\n            <strong>{question.question_number}</strong>\n              {question.heading}\n            <span>\n            <select id={question.question_number} className=\"question-description select-box\" data-focusable=\"true\" \n            defaultValue={\"select\"}\n            onBlur={saveOnBlur} \n            onChange={(e)=>setState(question.question_number,e.target.value)}>\n            <option value=\"select\" disabled>select</option>\n              {section.table.table_items.map((item, index) =>{\n                return(\n                  <option key={index.toString()} value={item.option} className=\"r-14lw9ot\">\n                    {item.option}\n                  </option>\n                )\n              })}\n            </select>\n            </span>\n          </p>  \n        )\n      })}\n     </div>\n    </section>\n  )\n}\n \nexport default SentenceMatching;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst TrueFalse = ({section, setState, saveOnBlur}) => {\n  return(\n    <section>\n\n      <SectionHeader\n      section={section}\n      />\n\n      <p className=\"font-italic true-false\">\n      {section.sub_heading_2.map((subHeading_2,index)=>{\n        return(\n          <span key={index.toString()}>\n            <span>{subHeading_2.option}</span>\n            {subHeading_2.value}<br />\n          </span>\n        )\n      })}\n      </p>\n\n      <div  className=\"question-block\">\n      {section.question_blocks.map((question,index)=>{\n        return(\n          <p key={index.toString()} className=\"inline-question\">\n          <strong>{question.question_number}</strong>\n              {question.heading}\n          <span>\n            <select id={question.question_number} className=\"question-description select-box\"  \n            onBlur={saveOnBlur}\n            defaultValue={\"select\"}\n            onChange={(e) =>setState(question.question_number,e.target.value)}>\n            <option value={\"select\"} disabled>select</option>\n              {section.sub_heading_2.map((subHeading_2,index)=>{\n                return(\n                  <option key={index.toString()} value={subHeading_2.option} className=\"r-14lw9ot\">\n                    {subHeading_2.option}\n                  </option>\n                )\n              })}\n            </select>\n          </span>\n         </p>\n        )\n      })}\n    </div>\n    </section>\n  )\n}\n \nexport default TrueFalse;","import {useContext} from 'react';\nimport { useSelector } from \"react-redux\";\nimport TaskOne from './TaskOne';\nimport TaskTwo from './TaskTwo';\nimport {TestContext} from '../TestContextProvider';\nimport useStateTemplate from \"../children/utils/stateTemplate\";\nimport SingleAnswerMultipleChoice from \"../children/question_blocks/multiple_choice/singleAnswer\";\nimport SummaryCompletion from \"../children/question_blocks/summary_completion/summaryCompletion\";\nimport NoteCompletion from \"../children/question_blocks/note_completion/noteCompletion\";\nimport HeadingMatching from \"../children/question_blocks/heading_matching/headingMatching\";\nimport ParagraphMatching from \"../children/question_blocks/paragraph_matching/paragraphMatching\";\nimport SentenceMatching from \"../children/question_blocks/sentence_matching/sentenceMatching\";\nimport TrueFalse from \"../children/question_blocks/true_false/trueFalse\";\n\n// Will get the right component for a given section\nconst SectionComp = (props) =>{\n  switch(props.section.type){\n\n    case \"multiple_choice\":\n    return <SingleAnswerMultipleChoice {...props}/>;\n\n    case \"summary_completion\":\n    return <SummaryCompletion {...props}/>;\n\n    case \"note_completion\":\n    return <NoteCompletion {...props}/>;\n\n    case \"heading_matching\":\n    return <HeadingMatching {...props}/>;\n\n    case \"paragraph_matching\":\n    return <ParagraphMatching {...props}/>;\n\n    case \"sentence_matching\":\n    return <SentenceMatching {...props}/>;\n\n    case \"true_false\":\n    return <TrueFalse {...props}/>;\n\n    default:return\n  }\n}\n\nconst Reading = () =>{\n  const{ activePage } = useSelector(state => state.test);\n  const {questions, setDefaultValues} = useContext(TestContext);\n  const{ passage, totalQuestions } = questions.Reading.task_1;\n  const{ answers } = useSelector(state => state.test.answerObj)\n  const stateTemplate = useStateTemplate(totalQuestions);\n\n  const renderTask = () =>{\n    if(activePage === 'one'){\n      return(\n        <TaskOne \n        answers={answers}\n        SectionComp={SectionComp}\n        stateTemplate={stateTemplate}\n        setDefaultValues={setDefaultValues}\n        questions={questions.Reading.task_1} \n        />\n      )\n    }\n\n    if(activePage  === 'two'){\n      return(\n        <TaskTwo \n        answers={answers}\n        SectionComp={SectionComp}\n        stateTemplate={stateTemplate}\n        setDefaultValues={setDefaultValues}\n        questions={questions.Reading.task_1} \n        />\n      )\n    };\n  };\n\n  const renderPassage = (type, paragraph) =>{\n    switch(type){\n      case \"plain\":\n        return paragraph;\n\n      case \"lettered\":\n        return(\n          <>\n            <span>{paragraph.paragraph}</span>\n            <br></br>\n            {paragraph.value}\n          </>\n        )\n      default:return;\n    }\n  }\n\n  return(\n    <div id=\"reading\">\n      <article id=\"readingPassage\">\n        <div id=\"readingHeader\">\n          <h1>{passage.title}</h1>\n          <img alt=\"Sponsorffy reading\" src={passage.img}/>\n        </div>\n        <div>\n        {passage.paragraphs.map((paragraph,index)=>(\n          <p key={index.toString()}>\n            {renderPassage(passage.type, paragraph)}\n          </p>\n        ))}\n        </div>\n      </article>\n      {renderTask()}\n    </div>\n  )\n}\nexport default Reading;","import React from 'react';\n\nconst SelectionTable = ({ section }) => {\n  return(\n    <div className=\"selection-table selection-table-WR\">\n      <div>{section.table.heading}</div>\n      {section.table.table_items.map((item, index)=>{\n        return(\n          <div key={index.toString()} className=\"tb-item\">\n            <span>{item.option}</span> \n            <span>{item.value}</span>\n          </div>\n        )\n      })}\t\n   </div>\n  )\n}\n \nexport default SelectionTable;","const WritingBox = ({question_number, value, setState, saveOnBlur}) =>{\n  return(\n    <p className=\"inline-question question-description\">\n      <strong>{question_number}</strong>\n      <input \n        className=\"writing-box\"\n        // id={question_number} \n        type=\"text\" \n        placeholder=\"type sentence...\" \n        value={value || \"\"}\n        onChange={(e)=>setState(question_number,e.target.value)}\n        onBlur={saveOnBlur}\n      />\n    </p>\n  )\n}\n \nexport default WritingBox;","import {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport SectionHeader from \"../children/utils/sectionHeader\";\nimport SelectionTable from \"../children/utils/selectionTable\";\nimport useStateTemplate from \"../children/utils/stateTemplate\";\nimport WritingBox from \"../children/question_blocks/writing/writingBox\";\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskOne = ({questions, setDefaultValues}) => {\n  const dispatch = useDispatch();\n  const{ answers }=useSelector(state => state.test.answerObj)\n  const{article,sections,totalQuestions} = questions;\n  const[taskOne, setTaskOne] = useStateTemplate(totalQuestions);\n\n  // Sets previous task answers saved in db\n  useEffect(() => {\n    answers && \n    answers.writing_ans.task_1.length &&\n    setTaskOne(answers.writing_ans.task_1)\n  },[answers.writing_ans.task_1]);\n\n\n  // updates task asnwers in redux on every question attempt\n  useEffect(()=>dispatch(setStateTemplate(taskOne)),[taskOne]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = () =>{\n    answers.writing_ans.task_1 = taskOne\n    dispatch(setAnswers(answers,true));\n  }\n\n  // Sets the values of the input tags that have been replaced with regex: MAKE SURE TO GIVE TAGS to be REPLACED AN ID\n  useEffect(()=>setDefaultValues(taskOne) );\n\n  // Saves in-realTime for left comp and writing box editing\n  const setState =(question_number,value)=>{\n    setTaskOne(prevTaskOne =>{\n      prevTaskOne[question_number - 1].answer = value;\n      return [...prevTaskOne];\n    });\n\n  }\n\n  const useTaskOne ={\n    getAnswers:()=>taskOne.filter((question)=>question.answer)\n  };\n\n  const renderSections=()=>{\n   return sections.map((section, index)=>{\n    return(\n      <section key={index.toString()}>\n\n        <SectionHeader\n        section={section}\n        />\n\n        <SelectionTable\n        section={section}\n        />\n        \n        <div className=\"question-block\">\n        <div className=\"inline-question\">\n          <strong style={{ marginRight:'10px'}}></strong>\n          <div className=\"writing-box-all\" style={{ display:useTaskOne.getAnswers().length? 'inline-block' :'none'}}>\n            {useTaskOne.getAnswers().map((question,index)=>{\n              return(\n                <span key={index.toString()}>\n                  {question.answer}\n                </span>\n              )\n            })}\n          </div>\n        </div>\n        \n        {section.question_blocks.map(({question_number})=>{\n          if(taskOne.length){\n            return(\n              <WritingBox\n              setState={setState}\n              saveOnBlur={saveOnBlur}\n              key={question_number.toString()}\n              question_number={question_number}\n              value={taskOne[question_number-1].answer}\n              />\n            )\n          }\n        })}\n      </div>\n      </section>\n    )\n  })\n  }\n  return (\n    <div id=\"writing-task-one\">   \n      <article id=\"readingPassage\">\n        <div id=\"readingHeader\">\n          <h1>{article.title}</h1>\n          <img alt=\"Sponsorfy reading\" src={article.img}/>\n        </div>\n      </article>\n      {renderSections()}\n    </div> \n  )\n};\nexport default TaskOne;","import {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport SectionHeader from \"../children/utils/sectionHeader\";\nimport useStateTemplate from \"../children/utils/stateTemplate\";\nimport WritingBox from \"../children/question_blocks/writing/writingBox\";\nimport {setAnswers,setStateTemplate} from '../../../redux/test/Actions';\n\nconst TaskTWO =({questions, setDefaultValues})=>{\n  const dispatch = useDispatch();\n  const{answers}=useSelector(state => state.test.answerObj)\n  const{article,sections,totalQuestions} = questions;\n  const[taskTwo, setTaskTwo] = useStateTemplate(totalQuestions);\n\n  // Sets previous task answers saved in db\n  useEffect(() =>{\n    answers && \n    answers.writing_ans.task_2.length &&\n    setTaskTwo(answers.writing_ans.task_2);\n  },[answers.writing_ans.task_2]);\n\n  // updates task asnwers for testLeft on every question attempt\n  useEffect(()=>dispatch(setStateTemplate(taskTwo)), [taskTwo]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = () =>{\n    answers.writing_ans.task_2 = taskTwo;\n    dispatch(setAnswers(answers,true));\n\n  };\n\n  // Sets the values of the input tags that have been replaced with regex\n  useEffect(()=>setDefaultValues(taskTwo));\n\n  const setState =(question_number,value)=>{\n    setTaskTwo(prevTaskTwo =>{\n      prevTaskTwo[question_number - 1].answer = value;\n      return [...prevTaskTwo]\n    });\n  }\n  \n  const useTaskTwo={\n    // number: this is the question number to not include in the array\n    // operator: either greater than or less than the number of questions to include\n    // The above is because the writing is in 2 paragraphs\n    getAnswers:(operator,number)=>{\n      const filterByOperator= taskTwo.filter((question)=>{\n        if(operator == \"<\"){\n          return question.question_num < number\n        }\n\n        if(operator == \">=\"){\n          return question.question_num >= number\n        }\n      });\n\n      const filterByAnswer= filterByOperator.filter((question)=>question.answer.trim().length);\n\n      return filterByAnswer\n    }\n  }\n\n  const renderSections=()=>{\n    return sections.map((section, index)=>{ \n      return(\n        <section key={index.toString()}>\n\n          <SectionHeader\n          section={section}\n          />\n\n          <div className=\"selection-table selection-table-WR\">\n            <div>{section.table.heading}</div>\n            {section.table.table_items_1.map((item, index)=>{\n              return(\n                <div key={index.toString()} className=\"tb-item\">\n                  <span>{item.option}</span>\n                  <span>{item.value}</span>\n                </div>\n              )\n            })}\n            \n            {section.table.table_items_2.map((item, index)=>{\n              return(\n                <div key={index.toString()} className=\"tb-item\">\n                  <span>{item.option}</span>\n                  <span>{item.value}</span>\n                </div>\n              )\n            })}\n          </div>\n          \n          {section.question_blocks.map((block, index)=>{\n            return(\n              <div className=\"question-block\" key={index.toString()}>\n                <p className=\"block-header\">\n                  <strong>{block.heading}</strong>\n                </p>\n                <div className=\"inline-question\">\n                <strong style={{ marginRight:'10px'}}></strong>\n                {index===0?(\n                  <div className=\"writing-box-all\" style={{ display:useTaskTwo.getAnswers(\"<\",7).length? 'inline-block' :'none'}}>\n                    {useTaskTwo.getAnswers(\"<\",7).map((question,index)=><span key={index.toString()}>{question.answer}</span>)}\n                  </div>\n                ) : (<div className=\"writing-box-all\" style={{ display:useTaskTwo.getAnswers(\">=\",7).length? 'inline-block' :'none'}}>\n                    {useTaskTwo.getAnswers(\">=\",7).map((question,index)=><span key={index.toString()}>{question.answer}</span>)}\n                    </div>\n                )\n                } \n                </div>\n                {block.questions.map((question,index)=>{\n                  if(taskTwo.length){\n                    return(\n                      <WritingBox\n                      setState={setState}\n                      saveOnBlur={saveOnBlur}\n                      key={index.toString()}\n                      question_number={question.question_number}\n                      value={taskTwo[question.question_number-1].answer}\n                      />\n                    )\n                  }\n                })}\n              </div>\n            )\n          })}\n        </section>\n      )\n    })\n  }\n  return(\n    <div id=\"writing-task-one\">   \n      <article id=\"readingPassage\">\n        {article.sentences.map((sentence,index)=>{\n          return(\n            <strong key={index.toString()}>\n              {sentence}\n            </strong>\n          )\n        })}\n      </article>\n      {renderSections()}\n    </div> \n  )\n};\nexport default TaskTWO;","import {useContext} from 'react';\nimport { useSelector } from \"react-redux\";\nimport TaskOne from './TaskOne';\nimport TaskTwo from './TaskTwo';\nimport {TestContext} from '../TestContextProvider';\n\nconst Writing = () => {\n  const{ activePage } = useSelector(state => state.test);\n  const {questions, setDefaultValues} = useContext(TestContext);\n\n  const renderTask = () => {\n    if(activePage === 'one'){\n      return(\n        <TaskOne \n        setDefaultValues={setDefaultValues}\n        questions={questions.Writing.task_1} \n        />\n      )\n    };\n\n    if(activePage  === 'two'){\n      return(\n        <TaskTwo \n        setDefaultValues={setDefaultValues}\n        questions={questions.Writing.task_2} \n        />\n      )\n    }\n  };\n\n  return(\n    <div id=\"reading\">\n      {renderTask()}\n    </div>\n  )\n}\nexport default Writing;","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst TableCompletion = ({section, setState, saveOnBlur}) =>{\n  return(\n    <section>\n    \n      <SectionHeader\n      section={section}\n      />\n\n      <table className=\"listen-table\" border=\".1\" cellSpacing=\"0\" cellPadding=\"4\">\n        <tbody>\n          <tr className=\"question-description\">\n            <td colSpan={2}>\n              <p style={{textAlign:'center', fontWeight:'bold'}}>\n                {section.table.heading}\n              </p>\n            </td>\n          </tr>\n        {section.table.table_items.map((item, index)=>{\n          return(\n            <tr id={item.question_number} key={index.toString()} className=\"question-description\" \n              tabIndex={0}\n              onBlur={saveOnBlur}\n              onKeyDown={(e) => { //used keyDown to capture keyboard events like TABBING\n                if(e.target.type){\n                  e.target.addEventListener(\"blur\",(e)=>{ //input\n                    setState(item.question_number,e.target.value);\n                  })\n                }\n              }}>\n              <td style={{verticalAlign:'top',width:'30%'}}><p>{item.item_1}</p></td>\n              <td style={{verticalAlign:'top',width:'70%'}}><p>{item.item_2}</p></td>\n            </tr>\n          )\n        })}\n        </tbody>\n      </table>\n    </section>\n  )\n}\n \nexport default TableCompletion;","import  {useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport useStateTemplate from \"../children/utils/stateTemplate\";\nimport {AiFillAudio} from 'react-icons/ai';\nimport TableCompletion from \"../children/question_blocks/table_completion/tableCompletion\";\nimport SingleAnswerMultipleChoice from \"../children/question_blocks/multiple_choice/singleAnswer\"\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskOne = ({questions, setDefaultValues}) =>{\n\n  const dispatch = useDispatch();\n  const{article,sections,totalQuestions} = questions;\n  const{answers}=useSelector(state => state.test.answerObj);\n  const[taskOne, setTaskOne] = useStateTemplate(totalQuestions);\n\n // Sets previous task answers saved in db\n  useEffect(() => {\n    answers &&\n    answers.listening_ans.task_1.length &&\n    setTaskOne(answers.listening_ans.task_1)\n  },[answers.listening_ans.task_1]);\n\n  // updates task asnwers in redux on every question attempt\n  useEffect(()=>dispatch(setStateTemplate(taskOne)), [taskOne]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = () =>{\n    answers.listening_ans.task_1 = taskOne;\n    dispatch(setAnswers(answers,true));\n\n  };\n\n  // Sets the values of the input tags that have been replaced with regex\n  useEffect(()=>setDefaultValues(taskOne));\n\n  const setState =(question_number,value)=>{\n\n    // question_number - 1: Adjusts for array index starting at 0\n    setTaskOne(prevTaskOne =>{\n      prevTaskOne[question_number - 1].answer = value;\n      return [...prevTaskOne];\n    })\n  }\n\n  const renderSections=()=>{\n    return sections.map((section, index)=>{\n\n      if(section.type===\"table_completion\"){\n        return(\n          <TableCompletion\n          section={section}\n          setState={setState}\n          saveOnBlur={saveOnBlur}\n          key={index.toString()}\n          />\n        )\n      };\n        \n      if(section.type===\"multiple_choice\"){\n        return(\n          <SingleAnswerMultipleChoice\n          section={section}\n          setState={setState}\n          saveOnBlur={saveOnBlur}\n          key={index.toString()}\n          />\n        )\n      }\n    })\n  }\n    \n  return(\n      <div id=\"writing-task-one\">  \n        <article id=\"readingPassage\">\n          <div id=\"readingHeader\">\n            <div className=\"listening-audio audio-element-wrapper\">\n              <section>\n                <AiFillAudio size={60} />\n              </section>\n              <audio controls src={article.audio} />\n            </div>\n          </div>\n          <p className=\"sub-header\">\n            <strong>{article.title}</strong>\n          </p>\n        </article>\n        {renderSections()}\n      </div> \n  )\n}\nexport default TaskOne;\n","import SectionHeader from \"../../utils/sectionHeader\";\n\nconst SentenceCompletion = ({section, setState, saveOnBlur}) => {\n  return(\n    <section >\n    \n      <SectionHeader\n      section={section}\n      />\n\n      {section.question_blocks.map((block, index)=>(\n        <div key={index.toString()}  className=\"question-block\">\n          <p id={block.question_number} className=\"inline-question question-description\" \n          tabIndex={index}\n          onBlur={saveOnBlur}\n          onKeyDown={(e)=>{\n            if(e.target.type){\n              e.target.addEventListener(\"blur\",(e)=>setState(block.question_number,e.target.value))\n            }\n          }}>\n            <strong>{block.question_number}.</strong>\n            {block.heading}\n          </p>\n        </div>\n      ))}\n   </section>\n  )\n}\n \nexport default SentenceCompletion;","import {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AiFillAudio} from 'react-icons/ai';\nimport useStateTemplate from \"../children/utils/stateTemplate\";\nimport SingleAnswerMultipleChoice from \"../children/question_blocks/multiple_choice/singleAnswer\";\nimport SentenceCompletion from \"../children/question_blocks/sentence_completion/sentenceCompletion\";\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskTwo = ({questions, setDefaultValues}) =>{\n\n  const dispatch = useDispatch();\n  const{article,sections,totalQuestions} = questions;\n  const{answers} = useSelector(state => state.test.answerObj)\n  const[taskTwo, setTaskTwo] = useStateTemplate(totalQuestions);\n\n  // Sets previous task answers saved in db\n  useEffect(() =>{\n    answers && \n    answers.listening_ans.task_2.length &&\n    setTaskTwo(answers.listening_ans.task_2)\n  },[answers.listening_ans.task_2]);\n\n  // updates task asnwers in redux on every question attempt\n  useEffect(()=>dispatch(setStateTemplate(taskTwo)), [taskTwo]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = () =>{\n    answers.listening_ans.task_2 = taskTwo;\n    dispatch(setAnswers(answers,true));\n\n  };\n    \n  // Sets the values of the input tags that have been replaced with regex\n  useEffect(() =>setDefaultValues(taskTwo));\n\n  const setState = (question_number,value)=>{\n    setTaskTwo(prevTaskTwo =>{\n      prevTaskTwo[question_number - 1].answer = value;\n      return [...prevTaskTwo];\n    })\n  };\n\n  const renderSections=()=>{\n    return(\n      sections.map((section, index)=>{\n        \n        if(section.type===\"sentence_completion\"){\n          return(\n            <SentenceCompletion\n            section={section}\n            setState={setState}\n            saveOnBlur={saveOnBlur}\n            key={index.toString()}\n            />\n          )\n        };\n    \n        if(section.type===\"multiple_choice\"){\n          return(\n            <SingleAnswerMultipleChoice\n            section={section}\n            setState={setState}\n            saveOnBlur={saveOnBlur}\n            key={index.toString()}\n            />\n          )\n        }\n      })\n    ) \n  }\n\n  return(\n    <div id=\"writing-task-one\">  \n      <article id=\"readingPassage\">\n        <div id=\"readingHeader\">\n          <div className=\"listening-audio audio-element-wrapper\">\n            <section>\n            <AiFillAudio size={60}/>\n            </section>\n            <audio controls src={article.audio}/>\n          </div>\n        </div>\n        <p className=\"sub-header\">\n          <strong>{article.title}</strong>\n        </p>\n      </article>\n      {renderSections()}\n    </div> \n  )\n};\nexport default TaskTwo;","import {useContext} from 'react';\nimport { useSelector } from \"react-redux\";\nimport TaskOne from './TaskOne';\nimport TaskTwo from './TaskTwo';\nimport {TestContext} from '../TestContextProvider';\n\nconst Listening = () => {\n  const{ activePage } = useSelector(state => state.test);\n  const {questions, setDefaultValues} = useContext(TestContext);\n\n  const renderTask = () => {\n    if(activePage === 'one'){\n      return(\n        <TaskOne \n        setDefaultValues={setDefaultValues}\n        questions={questions.Listening.task_1} \n        />\n      )\n    };\n\n    if(activePage  === 'two'){\n      return(\n        <TaskTwo \n        setDefaultValues={setDefaultValues}\n        questions={questions.Listening.task_2} \n        />\n      )\n    };\n\n  };\n\n  return(\n    <div id=\"reading\">\n      {renderTask()}\n    </div>\n  )\n}\nexport default Listening;","import {useState,useEffect,useRef,createContext} from 'react';\nimport {useSelector} from 'react-redux';\nexport const speechContext = createContext();\n\nconst SpeechContextProvider = ({ children }) => {\n  const{prev_Location} = useSelector(state => state.test);\n  const[isRecordingId, setIsRecordingId] = useState(''); //This holds the id of the current recording question\n\tlet [ toggleRecordMode, setToggleRecordMode ] = useState(0); //This will determine when the user starts recording and when they end\n\tlet [ recordingSecs, setRecordingSecs ] = useState('00'); // sets the recording duration in secs;\n  let [ recordingMins, setRecordingMins ] = useState(0); // sets the recording duration in mins;\n  let [ mediaRecorder, setMediaRecorder ] = useState(\"\");\n\n  //solves problem of stale closure in recordAudio\n  let shouldRecord = useRef({});\n  shouldRecord.current = toggleRecordMode;\n\n  let timerIds = useRef({setIntervalID:0, addTimeoutId:0, removeTimeoutId:0}).current;\n\n  // Stop recording if user navigates away\n  useEffect(() => {\n    if(mediaRecorder.state===\"recording\"){\n      stopRecording(\n        mediaRecorder\n      )\n    }\n  },[prev_Location]);\n\n  // Call this anytime the recording is cancelled.\n  const stopRecording =(mediaRecorder)=>{\n    let {setIntervalID, addTimeoutId, removeTimeoutId} = timerIds;\n\n    setToggleRecordMode(0);\n    setIsRecordingId('');\n    setRecordingSecs('00');\n    setRecordingMins(0);\n    clearInterval(setIntervalID);\n    clearTimeout(addTimeoutId)\n    clearTimeout(removeTimeoutId)\n    mediaRecorder.stop();\n  };\n\n  // start recording audio\n  const startRecording =(mediaRecorder,recordIndicator,okayBtn)=>{\n    mediaRecorder.start();\n\n    let timeCount = 0; //in seconds\n    timerIds.setIntervalID = setInterval(() => {\n      timeCount++;\n      if(timeCount.toString().length < 2){\n        setRecordingSecs('0' + timeCount);\n\n      }else{\n        if(timeCount === 60){\n          timeCount = 0;\n          recordingMins = recordingMins + 1;\n          recordingSecs = '00';\n          // Makes sure recording does not go above a --3MIN-- Threshold\n          if(recordingMins === 2){\n            okayBtn && okayBtn.click();\n          }\n          setRecordingMins(recordingMins);\n          setRecordingSecs(recordingSecs);\n        }else{\n          setRecordingSecs(timeCount);\n        }\n      };\n    }, 1000);\n\n    // Below code alternates the class of the red dot thereby making it look like its blinking\n    const alternateAdd = () =>{\n      recordIndicator && recordIndicator.classList.add('record-dot-display');\n      timerIds.addTimeoutId = setTimeout(() =>alternateRemove(), 500);\n    }\n    const alternateRemove = () =>{\n      recordIndicator && recordIndicator.classList.remove('record-dot-display');\n      timerIds.removeTimeoutId = setTimeout(() =>alternateAdd(), 500);\n    }\n    alternateAdd();\n  };\n\n  // when recording is Checked Okay.\n  const onRecordOkay=(mediaRecorder,question_number,setState)=>{\n    stopRecording(mediaRecorder)\n    let chunks = [];\n\n    //Adding data from audio recording to the chunks array\n    mediaRecorder.ondataavailable = (event) => { chunks.push(event.data)};\n\n    //After the recording is done\n    mediaRecorder.onstop = () =>{\n      let blob = new Blob(chunks, { type: 'audio/*', quality: 'high' });\n      chunks = [];\n      let audioUrl = window.URL.createObjectURL(blob);\n      setState(question_number,{audioUrl,blob},\"isAudioUrl\")\n    };\n  };\n\n  // Audio recording initiator\n  const recordAudio = (question_number, setState) =>{\n    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia){\n\n      navigator.mediaDevices.getUserMedia({audio: true}).then((mediaStream)=>{\n        let mediaRecorder = new MediaRecorder(mediaStream);\n        setMediaRecorder(mediaRecorder)\n\n        // red-dot indicator & btn variables\n        const recordIndicator = document.getElementById('record-dot');\n        const okayBtn =document.getElementById('active-recording-check-item');\n        const cancelBtn = document.getElementById('active-recording-cancel-item');\n        \n        //Starting the recording process\n        if(shouldRecord){\n          startRecording(\n            mediaRecorder,\n            recordIndicator,\n            okayBtn\n          )\n        }\n  \n        //Stopping and deleting the recording after user clicks cancel button\n        cancelBtn && cancelBtn.addEventListener('click',() =>{\n          return stopRecording(\n            mediaRecorder\n          )\n        });\n  \n        //Stopping and saving the recording after user clicks check button\n        okayBtn && okayBtn.addEventListener('click',()=>{\n          return onRecordOkay(\n            mediaRecorder,\n            question_number,\n            setState\n          )\n        });\n      })\n      .catch((err) => console.log(err));\n    }\n    else{\n      console.log(\"Your browser does not support getUserMedia\")\n    }\n  };\n\n  return(\n    <speechContext.Provider value={{\n      recordingSecs,\n      recordingMins,\n      isRecordingId,\n      toggleRecordMode,\n      recordAudio,\n      setIsRecordingId,\n      setToggleRecordMode\n    }}\n    >\n      { children }\n    </speechContext.Provider>\n  )\n}\nexport default SpeechContextProvider;","import React from 'react';\nimport {MdCancel} from 'react-icons/md';\nimport { IoIosCheckmarkCircleOutline } from 'react-icons/io';\n\nconst RecordingIndicator =({ recordingMins,recordingSecs })=>{\n  return(\n    <div className=\"active-recording-container\">\n    <div id=\"active-recording-cancel-item\" className=\"active-recording-cancel-item\">\n      <MdCancel color=\"red\" size={35} />\n    </div>\n    <div className=\"active-recording-timer-item\">\n      <span id=\"record-dot\" className=\"record-dot\"/>\n      <span>{recordingMins}</span>\n      <span>:</span>\n      <span>{recordingSecs}</span>\n    </div>\n    <div id=\"active-recording-check-item\" className=\"active-recording-check-item\">\n      <IoIosCheckmarkCircleOutline color=\"lightgreen\" size={35} />\n    </div>\n  </div>\n  ) \n}\n \nexport default RecordingIndicator;","import SectionHeader from \"../../utils/sectionHeader\";\nimport SelectionTable from \"../../utils/selectionTable\";\nimport WritingBox from \"./../writing/writingBox\";\n\nconst AudioSummary = ({ taskOne, setState, saveOnBlur, section, shouldDisplay, renderSpeech, getWriteUpAnswers})=>{\nreturn(\n  <section>\n\n    <SectionHeader\n    section={section}\n    />\n\n    <SelectionTable\n    section={section}\n    />\n\n    <div className=\"question-block\">\n      <div className=\"inline-question\">\n        <div className=\"writing-box-all\" style={{ display:shouldDisplay(\"writeUp\")? \"inline-block\" :\"none\"}}>\n          {getWriteUpAnswers().length && getWriteUpAnswers().map(({answer},index)=>{\n            return(\n              <span key={index.toString()}>\n                { answer } <br/> <br/>\n              </span>\n            )\n          })}\n          <div className=\"speaking-record-text\" style={{ display:shouldDisplay(\"audio\")? \"inline-block\" :\"none\"}}>\n              {renderSpeech(taskOne.length)}\n          </div>\n        </div>\n      </div>\n\n      {section.question_blocks.map((block, index)=>{\n        return(\n          <WritingBox\n          setState={setState}\n          saveOnBlur={saveOnBlur}\n          key={index.toString()}\n          question_number={block.question_number}\n          value={taskOne[block.question_number-1].answer}\n          />\n        )\n      })}\n    </div>\n </section>\n)\n}\n \nexport default AudioSummary;","import {useState,useEffect, useContext} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { AiOutlineAudio, AiFillAudio} from 'react-icons/ai';\nimport {MdCancel} from 'react-icons/md';\nimport {speechContext} from \"./speakingContext\";\nimport RecordingIndicator from \"../children/utils/recordingIndicator\";\nimport AudioSummary from \"../children/question_blocks/voiceChat/audioSummary\";\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskOne = ({questions, setDefaultValues}) => {\n  const dispatch = useDispatch();\n  const{article,sections,totalQuestions} = questions;\n  const{answers}=useSelector(state => state.test.answerObj);\n  let{recordingSecs,recordingMins,toggleRecordMode,recordAudio,setToggleRecordMode} = useContext(speechContext)\n\n  const getStateTemplate = [...Array(totalQuestions)].map((q,index)=>{\n    let question_num = ++index;\n  \n    // return answer object with audioUrl prop for the last question with audio recording\n    if(question_num === totalQuestions){\n      return {question_num, answer:{audioUrl:\"\",blob:\"\",audioDuration:0}, mark:0}\n    }\n    else{\n      return{question_num, answer:\"\", mark:0} \n    }\n\n  })\n  const [taskOne, setTaskOne] = useState(getStateTemplate);\n  const [isAudioQuestion, setIsAudioQuestion] = useState(false);\n\n  // Sets previous task answers saved in db\n  useEffect(() => {\n    answers && \n    answers.speaking_ans.task_1.length &&\n    setTaskOne(answers.speaking_ans.task_1)\n  },[answers.speaking_ans.task_1]);\n\n  useEffect(() => {\n\n    // updates task asnwers in redux on every question attempt\n    dispatch(setStateTemplate(taskOne));\n\n    // Only run if question involves recording to avoid multiple db saving\n    if(isAudioQuestion){\n      setIsAudioQuestion(false);\n      saveOnBlur()\n    }\n\n  },[taskOne]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = ()=>{\n    answers.speaking_ans.task_1 = taskOne;\n    dispatch(setAnswers(answers,true));\n  };\n\n  // Sets the values of the input tags that have been replaced with regex\n  useEffect(()=>setDefaultValues(taskOne));\n\n  const setState =(question_number,value,isAudioUrl)=>{\n    setTaskOne(prevTaskOne =>{\n      if(!isAudioUrl){\n        prevTaskOne[question_number - 1].answer = value;\n      }\n      else{\n        prevTaskOne[question_number - 1].answer = {audioUrl:value.audioUrl, blob:value.blob};\n        setIsAudioQuestion(true)\n      }\n\n      return [...prevTaskOne]\n    })\n  }\n\n/**\n *  question_number= last question in the question block\n */\n const renderSpeech =(question_number)=>{\n  // Shows this if recording is ongoing\n  if(toggleRecordMode){\n    return(\n      <RecordingIndicator\n      recordingSecs={recordingSecs}\n      recordingMins={recordingMins}\n      />\n    )\n  };\n\n  // The recorded audio is displayed here: last question_num\n  if(taskOne[question_number-1].answer.audioUrl){\n    return(\n      <div className=\"task-one-audio\">\n        <span onClick={()=>setState(question_number,\"\",\"isAudioUrl\")}>\n          <MdCancel size={24} color=\"red\"/>\n        </span>\n\n        <span>\n        <AiFillAudio size={30} />\n        </span>\n\n        <audio controls src={taskOne[question_number-1].answer.audioUrl}/> \n      </div>\n    )\n  } \n\n  // Returns this as default\n  return(\n    <div className=\"record-item\" \n      onClick={()=>{\n        setToggleRecordMode(1);\n        recordAudio(question_number,setState);\n      }}\n    >\n      <span className=\"icon-container\">\n        <AiOutlineAudio className=\"AiOutlineAudio\" size={15} color=\"white\"/>\n      </span>\n      <span id=\"record-a\" style={{color:\"white\"}}>Record</span>\n    </div>\n  )\n}\n\n  /**\n   * Shows record/audio if user has answered all input questions \n   * OR has previously recorded \n   */\n  const shouldDisplay=(displayType)=>{\n    let quests_answered =0,questionNum=1,first_condition;\n\n    while(questionNum < totalQuestions){\n      if(taskOne[questionNum - 1].answer.trim().length){\n        quests_answered++;\n      };\n      questionNum++;\n    };\n\n    // && case or none\n    if(displayType === \"audio\") first_condition = quests_answered === (totalQuestions -1);\n\n    // either || case\n    if(displayType === \"writeUp\") first_condition = quests_answered > 0;\n\n    return first_condition || (taskOne[totalQuestions -1].answer.audioUrl)\n  };\n\n  /**\n   * Joins all writeUp answers in a single text box.\n   */\n  const getWriteUpAnswers=()=>{\n    return taskOne.filter((q)=>{\n      if(!q.answer.hasOwnProperty(\"audioUrl\")){\n        return q.answer;\n      }\n    })\n  }\n  \nconst renderSections=()=>{\n  return(\n    sections.map((section, i)=>{\n    return(\n      <AudioSummary\n      key={i.toString()}\n      taskOne={taskOne}\n      section={section}\n      setState={setState}\n      saveOnBlur={saveOnBlur}\n      renderSpeech={renderSpeech}\n      shouldDisplay={shouldDisplay}\n      getWriteUpAnswers={getWriteUpAnswers}\n      />\n    )\n  })\n  )\n}\n\nreturn(\n  <div id=\"speaking-task-one\">   \n   <article id=\"readingPassage\">\n    <div id=\"readingHeader\">\n      <h1>{article.title}</h1>\n      <img alt=\"Sponsorfy reading\" src={article.img}/>\n    </div>\n   </article>\n  {renderSections()}\n </div> \n)\n};\nexport default TaskOne;","import React from 'react';\nimport {useSelector} from 'react-redux';\n\nconst SingleChatBox = ({article, section, saveOnBlur, useTaskTwo, setState, question,renderSpeech, isRecordingId}) => {\n\n  const {user} = useSelector(state => state.user);\n\n  return(\n    <div className=\"inline-question speaking-audio-container\">\n    <strong>{question.question_number}</strong>\n\n    <div className=\"speaking-audio\">\n    <div className=\"speaking-audio-top\">\n      <div>\n        <img  src={article.img} alt=\"user avatar\"/>\n         <audio className=\"\" controls src={article.audios[question.question_number]}/>\n      </div>\n        <select  id={question.question_number} className=\"question-description select-audio-box\"\n        disabled={isRecordingId? true:false}  data-focusable=\"true\" \n        onBlur={saveOnBlur}\n        onChange={(e) =>setState(question.question_number,e.target.value)}\n        >\n          <option value=\"pick response\" disabled>\n            pick response\n          </option>\n        {section.table.table_items.map((item, index)=>{\n          return(\n            <option key={index.toString()} value={item.option} className=\"r-14lw9ot\">\n              {item.option}\n            </option>\n          )\n        })}\n       </select>\n      </div>\n\n    <div className=\"selected-item-container\">\n      <div className=\"select-selected-item\" \n        style={{ \n          border:'none', \n          display:useTaskTwo.getOption(question.question_number)?'inline-block' :'none'\n        }}>\n        {useTaskTwo.getOption(question.question_number) &&\n        section.table.table_items\n        .filter(item => item.option === useTaskTwo.getOption(question.question_number))[0].value\n        }\n      </div>\n      </div>\n\n      <div className=\"speaking-audio-bottom\" \n        style={{\n          display: useTaskTwo.getOption(question.question_number) || useTaskTwo.getAudioUrl(question.question_number) ?\"flex\":\"none\"\n        }}\n        >\n        {renderSpeech(question.question_number)}\n        <img style={{width:\"50px\", height:\"50px\", borderRadius:\"50%\"}} src={user.photo} alt=\"user avatar\"/>\n      </div>\n    </div>\n   </div>\n  )\n}\n \nexport default SingleChatBox;","import SectionHeader from \"../../utils/sectionHeader\";\nimport SelectionTable from \"../../utils/selectionTable\";\nimport SingleChatBox from \"../../utils/singleChatBox\";\n\nconst SingleChat = ({ article,section, setState, saveOnBlur, useTaskTwo,renderSpeech, isRecordingId }) =>{\n  return(\n    <section>\n    \n    <SectionHeader\n    section={section}\n    />\n\n    <SelectionTable\n    section={section}\n    />\n\n    <div className=\"question-block\">\n    {section.question_blocks.map((question, index)=>{\n      return(\n        <SingleChatBox\n        article={article}\n        setState={setState}\n        saveOnBlur={saveOnBlur}\n        section={section}\n        question={question}\n        key={index.toString()}\n        useTaskTwo={useTaskTwo}\n        renderSpeech={renderSpeech}\n        isRecordingId={isRecordingId}\n        />\n      )\n    })}\n    </div>\n  </section>\n  )\n}\n \nexport default SingleChat;","import {useState,useEffect,useContext} from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { AiOutlineAudio} from 'react-icons/ai';\nimport {MdCancel} from 'react-icons/md';\nimport {speechContext} from \"./speakingContext\";\nimport RecordingIndicator from \"../children/utils/recordingIndicator\";\nimport SingleChat from \"../children/question_blocks/voiceChat/singleChat\";\nimport {setAnswers, setStateTemplate} from '../../../redux/test/Actions'\n\nconst TaskTwo = ({questions, setDefaultValues}) => {\n\n  let{\n    recordingSecs,\n    recordingMins,\n    isRecordingId,\n    toggleRecordMode,\n    recordAudio,\n    setIsRecordingId,\n    setToggleRecordMode\n  } = useContext(speechContext);\n  \n  const dispatch = useDispatch();\n  const{article,sections,totalQuestions} = questions;\n  const{answers} = useSelector(state => state.test.answerObj)\n  \n  const getStateTemplate = [...Array(totalQuestions)].map((q,index)=>{\n    return {\n      question_num: ++index, \n      answer:{option:'',audioUrl:\"\",blob:\"\",audioDuration:0}, \n      mark:0\n    }\n  })\n  const[taskTwo, setTaskTwo] = useState(getStateTemplate);\n  const [isAudioQuestion, setIsAudioQuestion] = useState(false);\n\n  // Sets previous task answers saved in db\n  useEffect(() =>{\n    answers && \n    answers.speaking_ans.task_2.length &&\n    setTaskTwo(answers.speaking_ans.task_2)\n  },[answers.speaking_ans.task_2]);\n \n  useEffect(() =>{\n    // updates task asnwers in redux on every question attempt\n    dispatch(setStateTemplate(taskTwo));\n\n    // Only run if question involves recording to avoid multiple db saving\n    if(isAudioQuestion){\n      setIsAudioQuestion(false);\n      saveOnBlur()\n    }\n  },[taskTwo]);\n\n  // Enables saving user's answers to db only once\n  const saveOnBlur = ()=>{\n    answers.speaking_ans.task_2 = taskTwo;\n    dispatch(setAnswers(answers,true));\n\n  };\n\n  // Sets the values of the input tags that have been replaced with regex\n  useEffect(() =>setDefaultValues(taskTwo,\"speaking_ans_2\"));\n\n  const setState =(question_number,value,isAudioUrl)=>{\n    setTaskTwo(prevTaskTwo =>{\n      if(isAudioUrl){ \n        //sets audio url and blob file\n        prevTaskTwo[question_number - 1].answer.audioUrl= value.audioUrl;\n        prevTaskTwo[question_number - 1].answer.blob= value.blob?value.blob:\"\";\n\n        setIsAudioQuestion(true)\n      }\n      else{ \n        //sets option chosen from question\n        prevTaskTwo[question_number - 1].answer.option= value !== 'pick response' ? value : undefined\n      };\n\n      return[...prevTaskTwo]\n    })\n  }\n\n  // Getters for audioUrl and options in taskTwo Array\n  const useTaskTwo={\n    getOption:(question_number)=>taskTwo[question_number-1].answer.option \n    ,\n    getAudioUrl:(question_number)=>taskTwo[question_number-1].answer.audioUrl,\n\n  }\n  const renderSpeech = (question_number) => {\n   let audioId=\"Q\"+question_number //Just an identifier for each audio been recorded/recording\n\n    // Shows this if recording is ongoing toggleRecordMode\n    if(toggleRecordMode && isRecordingId === audioId){\n      return(\n        <RecordingIndicator\n        recordingSecs={recordingSecs}\n        recordingMins={recordingMins}\n        />\n      )\n    };\n\n    // The recorded audio is displayed here question_number::taskTwo[audioId].audio::{taskTwo[audioId].audio}\n    if(useTaskTwo.getAudioUrl(question_number)){\n      return(\n        <div className=\"chat-right-recorded\">\n          <audio className=\"chat-box-audio\" controls \n          src={useTaskTwo.getAudioUrl(question_number)}\n          />\n          <span onClick={() => setState(question_number,\"\",\"isAudioUrl\")}>\n           <MdCancel color=\"red\" size={30}/>\n          </span>\n        </div>\n      )\n    } \n\n    // Returns this as default\n    return(\n      <div \n      className=\"record-item\" \n      onClick={() => {\n        if(isRecordingId) return; //Ensures only one recording is occuring at any single time\n        toggleRecordMode = 1;\n        setToggleRecordMode(toggleRecordMode);\n        setIsRecordingId(audioId)\n        recordAudio(question_number, setState);\n      }}\n      >\n      <span className=\"icon-container\">\n        <AiOutlineAudio className=\"AiOutlineAudio\"/>\n      </span>\n     </div>\n    )\n  }\n\n  const renderSections = ()=>{\n    return sections.map((section, index)=>{\n      if(section.type===\"single_user\"){\n        return(\n          <SingleChat\n          article={article}\n          section={section}\n          setState={setState}\n          saveOnBlur={saveOnBlur}\n          key={index.toString()}\n          useTaskTwo={useTaskTwo}\n          renderSpeech={renderSpeech}\n          isRecordingId={isRecordingId}\n          />\n        )\n      }\n    })\n  }\n    \n  return(\n    <div id=\"speaking-task-one\"> \n      {renderSections()}  \n    </div> \n  )\n};\nexport default TaskTwo;","import {useContext} from 'react';\nimport { useSelector } from \"react-redux\";\nimport TaskOne from './TaskOne';\nimport TaskTwo from './TaskTwo';\nimport {TestContext} from '../TestContextProvider';\nimport SpeechContextProvider from \"./speakingContext\";\n\nconst Speaking = () => {\n  const{ activePage } = useSelector(state => state.test);\n  const {questions, setDefaultValues} = useContext(TestContext);\n\n  const renderTask = () => {\n    if(activePage === 'one'){\n      return(\n        <TaskOne \n        questions={questions.Speaking.task_1} \n        setDefaultValues={setDefaultValues}\n        />\n      )\n    };\n\n    if(activePage  === 'two'){\n      return(\n        <TaskTwo \n        questions={questions.Speaking.task_2} \n        setDefaultValues={setDefaultValues}\n        />\n      )\n    };\n  };\n\n  return(\n    <SpeechContextProvider>\n      <div id=\"reading\">\n        {renderTask()}\n      </div>\n    </SpeechContextProvider>\n  )\n}\nexport default Speaking;","import {useSelector} from \"react-redux\";\nimport Reading from './reading/Reading';\nimport Writing from './writing/Writing';\nimport Listening from './listening/Listening';\nimport Speaking from './speaking/Speaking';\n\nconst RenderTestType = () => {\n  const{ currentType } = useSelector(state => state.test);\n\n  const renderType = ()=>{\n    \n    switch(currentType){\n      case \"reading\":\n        return <Reading/>\n\n      case \"writing\":\n        return <Writing />\n\n      case \"listening\":\n        return <Listening />\n\n      case \"speaking\":\n        return <Speaking />\n\n      default:return null;\n    }\n  }\n  return (renderType());\n}\n \nexport default RenderTestType;","import { useEffect } from 'react';\nimport TestLeft from './TestLeft';\nimport TestRight from './TestRight';\nimport TestNav from './TestNav';\nimport RenderTestType from './RenderTestType';\nimport TestContextProvider from './TestContextProvider';\n// import './styles/testStyles.css';\nimport \"./testStyles.css\"\n\nconst Test = () => {\n\n  useEffect(()=>{\n\n    // 3. Disabling the mouse right click event  to avoid users copy/paste in test writings:WHILE ON PRODUCTION\n    // const testBody=document.getElementById(\"test-container\");\n    // testBody.oncontextmenu=()=>false //Cancels mouse right click to view page source\n    // testBody.onselectstart=()=>false; //Cancels selecting to copy\n    // testBody.ondragstart=()=>false; //cancels dragging \n    // testBody.onpaste=()=>false; //cancels pasting of any sort\n  });\n\n  return (\n    <div className=\"test-top-level-wrapper\">\n      <div id=\"test-container\">\n        <TestLeft />\n        <div className=\"whole-page-container\">\n          <TestNav />\n          <div className=\"test-middle-right-container\">\n\n            <TestContextProvider>\n              <RenderTestType/>\n            </TestContextProvider>\n\n            <TestRight/>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Test;","import { useEffect, useState } from 'react';\nimport {useNavigate,useLocation} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {IoMdCheckmarkCircleOutline} from \"react-icons/io\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport {  FaMarker } from \"react-icons/fa\";\nimport BackDrop from \"./../Modal/backdrop\";\nimport _useAxios from \"../../utils/_useAxios\";\nimport ProfileAction from \"../../redux/profile/action\";\nimport { AVATAR } from \"../../utils/imageParams\";\n\nconst MarkTest = () =>{\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const profileAction = new ProfileAction(dispatch);\n\n  const [timerIDs, setTimerIDs] = useState([]) \n  const[isModal, setIsModal]= useState(true);\n  const[textContent, setTextContent]= useState(\"Marking in progress\")\n  const[isDoneMarking,setIsDoneMarking]= useState(false);\n  const{user} = useSelector(state => state.user);\n\n  const gettingGrades =()=>{\n    let timerId = setTimeout(() =>{\n      setTextContent(\"Getting Grades Ready\");\n      markingDone()\n    }, 4500);\n\n    setTimerIDs((prevIds) =>[...prevIds,timerId])\n  }\n\n  const markingDone = () => {\n    let timerId = setTimeout(() =>{\n      setIsDoneMarking(true);\n      setTextContent(\"Marking done\");\n      viewResult()\n    }, 4500);\n\n    setTimerIDs((prevIds) =>[...prevIds,timerId])\n  }\n\n  const viewResult =()=>{\n    const timerId = setTimeout(() =>{\n      // 1.Negate modal opening\n      setIsModal(false);\n      \n      //2. Reset redux and navigate to view test results\n      dispatch({type:\"RESE_TEST_STATE\"})\n\n      const profileUrl = user.username.split(\" \").join(\"\");\n      navigate(\n        `/${profileUrl}`,\n       {\n        state:{\n          id:user._id,\n          profileTab:\"test\"\n        }\n       }\n      );\n    },1000);\n\n    setTimerIDs((prevIds) =>[...prevIds,timerId])\n  }\n\n  useEffect(() => {\n    if(!(location.state && location.state.testId)){\n      navigate(-1);\n\n    }else{\n      const {version, testId, candidateId} = location.state;\n      _useAxios(\"POST\",{version, testId, candidateId},\"tests/markTest\")\n      .then((response)=>{\n        if(response.data){\n          // Set largeView for test results viewing\n          profileAction.setIsModal(true, response.data.gradedTest);\n\n          // Show marking indicator\n          gettingGrades();\n        }\n      })\n      .catch((error)=>console.log(error.response))\n    }\n\n    return() => timerIDs.forEach((timerId) =>clearTimeout(timerId));\n  },[]);\n\n  return(\n    location.state && location.state.testId?\n    <BackDrop isModal={isModal} handleModal={() =>setIsModal(true)}>\n      <div id=\"mark-test\">\n        <div className=\"marking-container-top\">\n          <button className=\"marking-closeBtn\" onClick={() => navigate(\"/home/academia\", {replace: true, state:{}})}>\n            <AiOutlineClose size={20}/>\n          </button>\n          <div className=\"marking-brand-name\">\n            <p>Sponsorffy</p>\n          </div>\n          <div className=\"marking-user\">\n            <AVATAR src={user.photo} alt={`Avatar of ${user.username}`}/>\n          </div>\n        </div>\n        <div className=\"notify-marking-process\">\n        <span className=\"progress-txt\">{textContent}</span>\n        {\n          isDoneMarking?<IoMdCheckmarkCircleOutline size={40} color=\"#1d3d9e\"/>:\n          <div id=\"indicator\" className=\"progress-dots\">\n            <span className=\"p-dot-1\">.</span>\n            <span className=\"p-dot-2\">.</span>\n            <span className=\"p-dot-3\">.</span>\n            <span className=\"Fa-Marker\">\n              <FaMarker size={70}/>\n            </span>\n          </div>\n        }\n        </div>\n      </div>\n    </BackDrop>\n    :null\n  )\n}\nexport default MarkTest;","\nexport const SET_LEADERS = 'SET_LEADERS'\n\nexport const SET_PAGES = 'SET_PAGES'\n\nexport const SET_BOARD_ItEMS = 'SET_BOARD_ItEMS'\n\nexport const SET_LEADER_COUNT = 'SET_LEADER_COUNT'\n","import {SET_LEADERS,SET_PAGES,SET_LEADER_COUNT,SET_BOARD_ItEMS} from \"./LBActionTypes\";\n\n\n// boardItems\nexport const setBoardItems=(payload)=>{\n    return({\n        type:SET_BOARD_ItEMS,\n        payload\n    })\n}\n\n// Leaders\nexport const setLeaders =(leaders,category)=>_useHelper(SET_LEADERS,leaders,category);\n\n// Page counts\nexport const setPages =(page,category)=>_useHelper(SET_PAGES,page,category);\n\n\n// Leader list length\nexport const setLeaderCount =(leaderCount,category)=>_useHelper(SET_LEADER_COUNT,leaderCount,category);\n\n// Helper\nconst _useHelper = (type,data,category)=>{\n    if(category === \"all\") return {type,payload:{all:data}};\n    if(category === \"academia\") return {type,payload:{academia:data}};\n    if(category === \"entertainment\") return {type,payload:{entertainment:data}};\n    if(category === \"handwork\") return {type,payload:{handwork:data}};\n    if(category === \"sports\") return {type,payload:{sports:data}}\n}","import _useAxios from \"../../../utils/_useAxios\";\nimport {setLeaders,setLeaderCount, setBoardItems} from \"../../../redux/leaderBoard/LBActions\";\n\nclass FetchBoard{\n  constructor(dispatch,user){\n    this.user = user;\n    this.dispatch = dispatch;\n  }\n  \n  // Get scoreboard\n  getScoreboard(boardType){\n    const body ={\n      _id:this.user._id,\n      countryTo:this.user.countryTo,\n      countryFrom:this.user.countryFrom  \n    }\n    _useAxios(\"GET\",body,\"leaderboard/scoreboard\")\n    .then(({data})=>{\n      this.dispatch(\n        setBoardItems({\n          boardType,\n          scoreboardData:data.boardData\n        })\n      )\n    })\n    .catch(err => console.log(err))\n  }\n\n  // Get leaderboard\n  getLeaderboard(boardType,pages,leaders,leaderCount,currentCategory){\n    const body ={\n      countryTo:this.user.countryTo,\n      countryFrom:this.user.countryFrom,\n      category:currentCategory,\n      page:pages[currentCategory]\n    }\n    _useAxios(\"GET\",body,\"leaderboard/leaders\")\n    .then(({data})=>{\n\n      // Set Leaders based on the current category\n      const {category,totalData} = data;\n      let retrieved =leaderCount[category].retrieved;\n\n      if(retrieved < totalData){\n        this.dispatch(\n          setLeaders(\n            [...leaders[category], ...data.leaders],\n            category\n          )\n        );\n          \n        // Increase the number of retrieved data in redux\n        retrieved += data.leaders.length;\n        this.dispatch(\n          setLeaderCount(\n            {total:totalData,retrieved},\n            category\n          )\n        )\n      }\n\n      // set board type\n      this.dispatch(\n        setBoardItems({\n          boardType\n        })\n      )\n    })\n    .catch(err => console.log(err))\n  }  \n}\nexport default FetchBoard;","import {useState, useEffect,createContext} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport FetchBoard from \"../fetch/fetchBoard\";\nimport {setBoardItems} from \"../../../redux/leaderBoard/LBActions\";\nimport {io} from \"socket.io-client\";\nconst socket = io(\"http://localhost:3001\"); //Sponsorfy server url\n\nexport const BoardContext = createContext();\n\nconst BoardContextProvider =({children})=>{\n  const dispatch = useDispatch();\n  const {user} = useSelector(state => state.user)\n  const boardState= useSelector(state => state.leaderboard);\n  const{leaders,leaderCount,pages,boardItems} =boardState\n  const { boardType } = boardItems;\n  const [currentCategory,setCurrentCategory] = useState(\"all\");\n  const [shouldFetch, setShouldFetch] =useState(false);\n\n  // Exposes methods for getting score/leader boards\n  const fetch = new FetchBoard(dispatch,user);\n\n  const toggleFetch =(BoardType)=>{\n\n    // Query DB for user's scoreboard\n    if(BoardType===\"score\"){\n      fetch.getScoreboard(BoardType);\n    }\n\n    // Query Db for users leaderboard\n    if(BoardType===\"leader\"){\n      fetch.getLeaderboard(\n        BoardType,\n        pages,\n        leaders,\n        leaderCount,\n        currentCategory\n      );\n    }\n  }\n\n  // Returns the event listener for socket event below\n  const boardListener =({BoardType,countDownTo},callback)=>{\n\n    // Fetch data for the given boardType\n    toggleFetch(BoardType)\n\n    // Update redux with board items\n    dispatch(\n      setBoardItems({\n        boardType:BoardType,\n        countDownTo\n      })\n    )\n\n    callback(null)\n  }\n\n  // SOCKET EVENTS\n  useEffect(() => {\n\n    // When server calculates rank\n    socket.on(\"changeBoard\",boardListener);\n\n    // When user refreshes page\n    if(!boardType){\n      socket.emit(\"getBoardType\")\n    }\n\n    return () =>{\n      socket.off(\"changeBoard\",boardListener);\n    }\n  },[])\n\n  // Fires when a user changes category\n  useEffect(() => { \n    const category=currentCategory;\n    const condition= !leaders[category].length || shouldFetch;\n    if(condition && boardType===\"leader\"){\n      fetch.getLeaderboard(\n        \"leader\",\n        pages,\n        leaders,\n        leaderCount,\n        currentCategory\n      );\n      setShouldFetch(false)\n    }\n\n  },[currentCategory,pages[currentCategory]])\n\n  return(\n    <BoardContext.Provider value={{currentCategory,setCurrentCategory,setShouldFetch}}>\n        {children}\n    </BoardContext.Provider>\n  )\n}\n\nexport default BoardContextProvider","import { IoFootballOutline,IoSchoolOutline,IoVideocamOutline } from \"react-icons/io5\";\nimport { RiHandHeartLine} from \"react-icons/ri\";\nimport Format from \"../../utils/Format\";\n\nconst Scoreboard=({ boardData , screenType}) =>{\n  const format = new Format();\n  const boardIcons = {\n    academia:<IoSchoolOutline  size={20}/>,\n    handwork:<RiHandHeartLine  size={20}/>,\n    sports:<IoFootballOutline  size={20}/>,\n    entertainment:<IoVideocamOutline  size={20}/>\n  }\n    \n  return(\n    <div className=\"scoreboard-container\">\n      <header className={`scoreboard-header scoreboard-header-${screenType}`}>\n        <span className=\"sb-category-header\">Category points</span>\n        <span className=\"sb-ranking-header\">Ranking</span>\n      </header>\n\n      <main className=\"scoreboard-main-container\">\n      {boardData.points && Object.keys(boardData.points).map(category=>{\n        return(\n          <div key={category} className=\"scoreboard-main-content\">\n            <div className=\"sb-category\">\n                <div className=\"sb-icon-holder\">\n                    <div className=\"scoreboard-category-icon-content-o\">\n                    <div className=\"scoreboard-category-icon-content-i\">\n                        <span>{boardIcons[category]}</span>\n                    </div>\n                </div>\n                </div>\n                <div className={`sb-point-holder sb-point-holder-${screenType}`}>\n                    <span>{category}</span>\n                    <span>{format.points(boardData.points[category])} points</span>\n                </div>\n                <div className=\"sb-rank-holder\">\n                    {format.rank(boardData.ranks[category])}\n                </div>\n            </div>\n        </div>\n        )\n      })}\n    </main>\n    </div>\n  )\n}\n\nexport default Scoreboard;","import { MdStar } from \"react-icons/md\";\nimport Format from \"../../utils/Format\";\nimport { AVATAR } from \"../../utils/imageParams\";\n// import NavLink from \"../navigation/navLink\";\n\nconst format = new Format();\nconst LeaderBoardItem = ({ user, rank,points,borderClassName, pillClassName,categoryName}) => {\n    return (\n      <div className=\"leadership-item-container\">\n        <section className=\"leadership-ranks\">\n          <p>{rank}</p>\n        </section>\n  \n        <section className=\"leadership-user\">\n          <section className=\"leadership-user-img\">\n            <AVATAR\n            className={borderClassName}\n            src={user.photo}\n            alt=\"avatar of winner\"\n           />\n          </section>\n          <section className=\"leadership-user-info\">\n            <p>{user.username}</p>\n            <small>{categoryName}</small>\n          </section>\n        </section>\n        <section className=\"leadership-stats\">\n          <section className={`stats-pill ${pillClassName} `}>\n            <span>\n              <MdStar size={20} />\n            </span>\n            <p>{format.points(points)}</p>\n          </section>\n        </section>\n      </div>\n    );\n};\n\nexport default LeaderBoardItem;","import {useContext} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LeaderBoardItem from \"./leaderboard_item\"\nimport {setPages} from \"../../redux/leaderBoard/LBActions\"\nimport {BoardContext} from \"../leaderboard/contexts/leaderboardContext\"\n/**\n * Displays all leaders in a list\n */\nconst RenderLeaders = ()=> {\n\n  const dispatch = useDispatch();\n  const {setShouldFetch,currentCategory} = useContext(BoardContext)\n  const {leaders,leaderCount,pages} = useSelector(state => state.leaderboard);\n\n  // Helps with Pagination\n  const paginate = () => {\n    let pageCount = pages[currentCategory] + 1;\n\n    // Update new page count\n    dispatch(setPages(pageCount,currentCategory))\n\n    // Fetch next list items\n    setShouldFetch(true);\n  }\n  \n    return (\n      <div>\n      <div className=\"leadership-lists\">\n      {leaders[currentCategory].length >0 && leaders[currentCategory].map((leader, i) =>{\n        let getRank = i + 1\n  \n        let {categoryName} = leader\n        let{total,bonus} = leader.points;\n        if(currentCategory !== \"all\") total = leader.points[categoryName]; //Use category points instead of overrall point\n  \n        if (getRank === 1) {\n          return (\n            <LeaderBoardItem\n              key={i}\n              rank={getRank}\n              user={leader}\n              points={total + bonus.totalCount}\n              categoryName={currentCategory ===\"all\"?categoryName:null}\n              borderClassName=\"rank-first\"\n              pillClassName=\"first\"\n            />\n          );\n        }\n        if (getRank === 2) {\n          return (\n            <LeaderBoardItem\n              key={i}\n              rank={getRank}\n              user={leader}\n              points={total + bonus.totalCount}\n              categoryName={currentCategory ===\"all\"?categoryName:null}\n              borderClassName=\"rank-second\"\n              pillClassName=\"second\"\n            />\n          );\n        }\n        if (getRank === 3) {\n          return (\n            <LeaderBoardItem\n              key={i}\n              rank={getRank}\n              user={leader}\n              points={total + bonus.totalCount}\n              categoryName={currentCategory ===\"all\"?categoryName:null}\n              borderClassName=\"rank-third\"\n              pillClassName=\"third\"\n            />\n          );\n        } else {\n          return(\n            <LeaderBoardItem\n            key={i} \n            rank={getRank} \n            user={leader} \n            points={total + bonus.totalCount} \n            categoryName={currentCategory===\"all\"?categoryName:null}\n            />\n          )\n        }\n      })}\n    </div>\n  \n    <section className=\"more-leadership-list\">\n    {leaderCount[currentCategory].retrieved < leaderCount[currentCategory].total ? <p onClick={paginate}>See more</p>:null}\n    </section>\n   </div>\n  )\n}\n\nexport default RenderLeaders","import {useContext} from \"react\";\nimport {useSelector} from 'react-redux';\nimport Loader from \"../../utils/Loader\";\nimport {BoardContext} from \"./../leaderboard/contexts/leaderboardContext\";\nimport Scoreboard from \"./scoreboard\";\nimport RenderLeaders from \"./renderLeaders\"\n// const RenderLeaders = Loadable({\n//   loader:() => import(/* webpackChunkName: \"RenderLeaders\" */ \"./renderLeaders\"),\n//   loading: () => <div>Loading...</div>\n// })\n\nconst RenderBoard=({screenType})=>{\n\n  const {setShouldFetch,currentCategory} = useContext(BoardContext);\n  const {boardItems}= useSelector(state => state.leaderboard);\n  const {boardType,scoreboardData} = boardItems;\n\n  const toggleBoard = ()=>{\n    if(boardType===\"score\"){\n      return(\n        <Scoreboard \n        screenType={screenType}\n        boardData={scoreboardData}\n      />\n      )\n    }\n\n    if(boardType===\"leader\"){\n      return(\n        <RenderLeaders\n        setShouldFetch={setShouldFetch}\n        currentCategory={currentCategory}\n        />\n      )\n    }\n    \n    return <Loader/>\n  }\n\n  return(\n      toggleBoard()\n  )\n};\n\nexport default RenderBoard;","import {useContext} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {BoardContext} from \"./contexts/leaderboardContext\"\n\n// 1) Determines the current leaderboard category in display\nconst CategoryPill = ({ name, screenType, activeClass,setCurrentCat }) =>{\n\n  /**\n   * screenType takes on values of full-screen || half-screen.\n   */\n    return (\n      <div \n      id={`${name}-${screenType}`}\n      className={`leadership-category-pill category-pill-${screenType} ${activeClass}`}\n      onClick={()=>{\n        return(\n          name === \"entertain\"?setCurrentCat(\"entertainment\"):setCurrentCat(name)\n        )\n      }}\n      >\n        <p>{name}</p>\n      </div>\n    );\n};\n\nexport const BoardTitle =()=>{\n  const {boardItems}= useSelector(state => state.leaderboard);\n  const {boardType} =boardItems;\n\n  if(boardType === \"score\"){\n    return(\n      <p>Scoreboard</p>\n    )\n  }\n  \n  if(boardType === \"leader\"){\n    return(\n      <p>Leaderboard</p>\n    )\n  }\n  return null;\n}\n\nexport const BoardDescription =({boardType,user})=>{\n  if(boardType===\"score\"){\n    return(\n        <span className=\"scoreboard-subtitle scoreboard-desc\">\n          <span style={{color:\"black\"}}>{user.username}'s</span> points and ranking by category <br/>\n          {\n            /**updated &middot; 2mins ago */\n          }\n        </span>      \n    )\n  }\n\n  if(boardType===\"leader\"){\n    return(\n        <div className=\"scoreboard-subtitle\">\n          List of winners at first-half by category\n        </div>\n    )\n  }\n\n  return(\n    null\n  )\n};\n\nexport const CategoryNav = ({ screenType })=>{\n  const {currentCategory, setCurrentCategory} = useContext(BoardContext);\n  const {user}= useSelector(state => state.user);\n  const {boardItems}= useSelector(state => state.leaderboard);\n  const {boardType} =boardItems;\n\n  const getClass=(name) =>{\n    if(currentCategory===name){\n      return(\n        \"category-pill-active\"\n      )\n    }\n\n    return(\n      \"category-pill-inactive\"\n    )\n  }\n\n  const selectCategory=()=>{\n    if(boardType===\"leader\"){\n      return(\n        <div className=\"leadership-categories\">\n          <CategoryPill\n          name=\"all\" \n          screenType={screenType}\n          setCurrentCat={setCurrentCategory} \n          activeClass={getClass(\"all\")}\n          />\n\n          <CategoryPill\n          name=\"entertain\"\n          screenType={screenType} \n          setCurrentCat={setCurrentCategory}\n          activeClass={getClass(\"entertainment\")}\n          />\n\n          <CategoryPill\n          name=\"academia\"\n          screenType={screenType}\n          setCurrentCat={setCurrentCategory} \n          activeClass={getClass(\"academia\")}\n          />\n\n          <CategoryPill\n          name=\"handwork\"\n          screenType={screenType} \n          setCurrentCat={setCurrentCategory} \n          activeClass={getClass(\"handwork\")}\n          />\n\n          <CategoryPill \n          name=\"sports\"\n          screenType={screenType} \n          setCurrentCat={setCurrentCategory} \n          activeClass={getClass(\"sports\")}\n          />\n      </div>\n      )\n    }\n  }\n    \n  return(\n    <>\n      <BoardDescription\n        user={user}\n        boardType={boardType}\n      />\n      {selectCategory()}\n    </>\n  )\n}","import { BiArrowBack } from \"react-icons/bi\";\nimport { useNavigate } from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport RenderBoard from \"./renderBoard\";\nimport RenderCountDown from \"./renderCountDown\";\nimport {CategoryNav,BoardTitle} from \"./categoryNav\";\nimport BoardContextProvider from \"./contexts/leaderboardContext\";\nimport { AVATAR } from \"../../utils/imageParams\";\n\nconst LeaderBoardMobile = () => {\n  const navigate = useNavigate();\n  const {user} = useSelector(state => state.user);\n  return (\n    <BoardContextProvider>\n      <div className=\"leaderboard-small-wrapper\">\n        <div className=\"leaderboard-small-container\">\n          <div className=\"leaderboard-small-container-top\">\n            <div className=\"leaderboard-small-arrow-back\">\n              <button onClick={() => navigate(-1)}>\n                <BiArrowBack />\n              </button>\n            </div>\n            <div className=\"leaderboard-small-logo\">\n              <BoardTitle/>\n            </div>\n            <div className=\"leaderboard-small-user\">\n              <AVATAR\n                src={user.photo}\n                alt={`Avatar of ${user.username}`}\n              />\n            </div>\n          </div>\n          <div className=\"count-down-small\">\n              <RenderCountDown/>\n          </div>\n            <CategoryNav\n            screenType={\"full-screen\"}\n            />\n          <div className=\"leaderboard-small-lists\">\n            <div className=\"leaderboard-small-lists-contents\">\n                <RenderBoard\n                screenType={\"full-screen\"}\n                />\n            </div>\n          </div>\n        </div>\n      </div>\n   </BoardContextProvider>\n  );\n};\n\nexport default LeaderBoardMobile;","import { useState } from \"react\";\nimport {motion} from 'framer-motion';\n\nconst variants = {\n    over:{\n        opacity:1,\n        transition:{\n            delay:.2,\n            ease: \"easeOut\"\n        }\n    },\n    exit:{\n        opacity:0,\n    }\n    \n}\n\n\nconst HoverContent = (props) => {\n \n  const [isShow,setIsShow] = useState(false);\n\n  return (\n    <div\n      onMouseOver={(e) => setIsShow(true) }\n\n      onMouseLeave={(e) => setIsShow(false)}\n\n      onClick={()=>setIsShow(false)}\n     \n      style={{ borderRadius: `${props.borderRadius}%` }}\n      className=\"hover-container\"\n    >\n      <div className=\"hover-icon\">{props.children}</div>\n\n      <motion.section \n      animate={isShow ? \"over\" : \"exit\"}\n      initial=\"exit\"\n      variants={variants}\n\n      className={`hover-content hover-left`}>\n       <p>{props.content}</p>\n      </motion.section>\n    </div>\n  );\n};\n\nexport default HoverContent;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FiMoreHorizontal } from \"react-icons/fi\";\nimport {SiAirplayvideo} from \"react-icons/si\"\nimport { BiTrendingUp } from \"react-icons/bi\";\nimport {IoSettingsOutline,IoVideocamOutline,IoVideocam} from \"react-icons/io5\"\nimport { AiOutlineLogout } from \"react-icons/ai\";\nimport { IoFootballOutline,IoFootballSharp,IoSchoolOutline, IoSchoolSharp} from \"react-icons/io5\";\nimport { RiCoinsLine,RiHandHeartLine,RiHandHeartFill} from \"react-icons/ri\";\n\nimport HoverContent from \"./hover_content\";\nimport NavLink from \"../navigation/navLink\";\nimport Logout from \"../auth/Logout\";\nimport { AVATAR } from \"../../utils/imageParams\";\n\nconst Panel = () => {\n  let { user } = useSelector((state) => state.user);\n  const { component } = useSelector((state) => state.navBar);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showHideMore,setShowHideMore] = useState('hide-more');\n\n  const shared =()=>{\n    return(\n      <>\n        <HoverContent content=\"Scoreboard\" borderRadius={50}>\n        <div \n        onClick={()=>navigate('/leaderboard')}\n        className=\"nav-panel-item\"\n        id=\"panel-item-search\"\n        >\n        <BiTrendingUp/>\n        </div>\n      </HoverContent>\n\n      <HoverContent content=\"Buy Coins\" borderRadius={50}>\n        <NavLink\n          to=\"/coins\"\n          className=\"nav-panel-item\"\n          inActiveClassName=\"nav-panel-item-inactive\"\n          activeClassName=\"nav-panel-item-active\"\n        >\n          <RiCoinsLine />\n        </NavLink>\n      </HoverContent>\n\n      <HoverContent content=\"Sfy.Tv\" borderRadius={50}>\n        <NavLink\n          to=\"/sponsorfy-tv\"\n          className=\"nav-panel-item\"\n          inActiveClassName=\"nav-panel-item-inactive\"\n          activeClassName=\"nav-panel-item-active\"\n        >\n          <SiAirplayvideo />\n        </NavLink>\n      </HoverContent>\n     </>\n    )\n  };\n\n  const sharedSettings =(className)=>{\n    return(\n      <NavLink\n      to=\"/settings\"\n      className={`${className}`}\n      inActiveClassName=\"panel-item-inactive\"\n      activeClassName=\"panel-item-active\">\n\n      <span className=\"icon-wrapper\">\n        <IoSettingsOutline />\n      </span>\n      <p>Settings</p>\n    </NavLink>\n    )\n  };\n\n  const sharedLogout =(className)=>{\n    return(\n      <div onClick={()=>{\n        Logout(dispatch,navigate);\n      }}\n      className={`${className}`}>\n      <span className=\"icon-wrapper\">\n        <AiOutlineLogout />\n\n      </span>\n      <p>Logout</p>\n    </div>\n    )\n  }\n  return (\n    <div className=\"panel-container\">\n      <div className=\"panel-container-top\">\n        <div className=\"panel-logo\">Sponsorffy</div>\n        <div className=\"panel-container-avatar\">\n          <div className=\"panel-avatar-stack\">\n            <AVATAR\n              onClick={() => {\n                const profileUrl =user.username.split(\" \").join(\"\");\n                navigate(`/${profileUrl}`,{state:{id:user._id}});\n              }}\n              src={user.photo}\n              alt={`Avatar of ${user.username}`}\n            />\n            <p>{user.username}</p>\n            <hr />\n            <div className=\"panel-stack-status\">\n              <div className=\"panel-stats\">\n                <p>{user.totalPoints}</p>\n                <small>points</small>\n              </div>\n              <div className=\"panel-stats\">\n                <p>{user.bonusPoints}</p>\n                <small>bonus</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"panel-container-bottom\">\n        <div className=\"panel-bottom-contents\">\n\n          {/**Includes navbar (i.e categories) */}\n          <div className=\"panel-bottom-navbar-items\">\n\n            <HoverContent content=\"Entertain\" borderRadius={50}>\n              <NavLink\n                to=\"/home/entertainment\"\n                className=\"nav-panel-item\"\n                inActiveClassName=\"nav-panel-item-inactive\"\n                activeClassName=\"nav-panel-item-active\"\n              >\n              {component===\"entertainment\"? <IoVideocam color=\"#2142a3\"/>:<IoVideocamOutline/>}\n              </NavLink>\n            </HoverContent>\n\n            <HoverContent content=\"Academia\" borderRadius={50}>\n            <NavLink\n              to=\"/home/academia\"\n              className=\"nav-panel-item\"\n              inActiveClassName=\"nav-panel-item-inactive\"\n              activeClassName=\"nav-panel-item-active\"\n            >\n            {component===\"academia\"?<IoSchoolSharp color=\"#2142a3\"/>:<IoSchoolOutline/>}\n            </NavLink>\n          </HoverContent>\n\n            <HoverContent content=\"Handwork\" borderRadius={50}>\n              <NavLink\n                to=\"/home/handwork\"\n                className=\"nav-panel-item\"\n                inActiveClassName=\"nav-panel-item-inactive\"\n                activeClassName=\"nav-panel-item-active\"\n              >\n               {component===\"handwork\"?<RiHandHeartFill color=\"#2142a3\"/>:<RiHandHeartLine/>}\n              </NavLink>\n            </HoverContent>\n\n            <HoverContent content=\"Sports\" borderRadius={50}>\n              <NavLink\n                to=\"/home/sports\"\n                className=\"nav-panel-item\"\n                inActiveClassName=\"nav-panel-item-inactive\"\n                activeClassName=\"nav-panel-item-active\"\n              >\n              {component===\"sports\"? <IoFootballSharp color=\"#2142a3\"/>:<IoFootballOutline/>}\n              </NavLink>\n            </HoverContent>\n            { shared() }\n            <HoverContent content=\"more\" borderRadius={50}>\n              <div className=\"nav-panel-item\" \n              onClick={() =>{\n                setShowHideMore(showHideMore === '' ? 'hide-more' : '');\n              }}\n              >\n                <FiMoreHorizontal />\n              </div>\n            </HoverContent>\n\n            <div className={`more-dropdown ${showHideMore}`}>\n              {sharedSettings(\"panel-item-more\")}\n              {sharedLogout(\"panel-item-more\")}\n            </div>\n\n          </div>\n\n          {/**Excludes navbar (i.e categories) */}\n          <div className=\"panel-bottom-items\">\n            {shared()}\n            <HoverContent content=\"Settings\" borderRadius={50}>\n              {sharedSettings(\"panel-item\")}\n            </HoverContent>\n\n            <HoverContent content=\"Logout\" borderRadius={50}>\n              {sharedLogout(\"panel-item\")}\n            </HoverContent>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Panel;","import { BiTrendingUp } from \"react-icons/bi\";\nimport {CgMenuLeftAlt} from 'react-icons/cg';\nimport NavLink from \"./navLink\";\nimport { useDispatch } from \"react-redux\";\nimport { setModal } from '../../redux/navBar/NavActions';\n\nconst Navbar_Flex=()=>{\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"navbar-flex\">\n      <div className=\"navbar-flex-item drawer-nav-logo\">\n        <h3>Sponsorffy</h3>\n      </div>\n      <div className=\"navbar-flex-item navbar-flex-r-item\">\n      <NavLink\n      to=\"/leaderboard\"\n      className=\"search-profile-mob\">\n        <BiTrendingUp/>\n      </NavLink>\n      <div\n      onClick={() =>dispatch(setModal(\"drawer\", true))}\n      className=\"search-profile-mob\">\n        <CgMenuLeftAlt />\n      </div>\n      </div>\n    </div>\n  )\n}\nexport default Navbar_Flex","import RenderBoard from \"./renderBoard\";\nimport {CategoryNav,BoardTitle} from \"./categoryNav\";\n\nconst LeaderboardLarge =()=>{\n  return(\n    <div className=\"leadership-container\">\n    <div className=\"leadership-contents-top\">\n      <div className=\"leaderboard-header\">\n       <BoardTitle/>\n      </div>\n      <CategoryNav\n      screenType={\"half-screen\"}\n      />\n    </div>\n\n    <RenderBoard\n    screenType={\"half-screen\"}\n    />\n   </div>\n  )\n}\nexport default LeaderboardLarge;","import {useState, useEffect, useRef} from \"react\";\nimport BackDrop from \"../backdrop\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport _useAxios from \"../../../utils/_useAxios\";\nimport { UploadSpinner } from \"../../../utils/Loader\";\nimport { useNavigate } from \"react-router-dom\"\nimport {useSelector,useDispatch} from 'react-redux';\nimport ProfileAction from \"../../../redux/profile/action\";\nimport { uploadToServer } from \"../../../utils/handleMediaUpload\";\nimport { fetchPosts, showAlert } from \"../../../redux/utils/postActions\";\nimport { fetchUserSuccess } from \"../../../redux/user/UserAction\"\nimport {setUpload,setModal, setUploadResponse} from \"../../../redux/navBar/NavActions\";\n\nconst getMedia = (type,url,videoRef)=>{\n  if(type){\n    switch(type.split('/')[0]){\n      case \"image\":\n        return <img src={url} alt=\"user post\"/>;\n\n      default:\n        return  <video ref={videoRef} controls muted   playsInline  src={url}/>\n    }\n  }\n  return \"\"\n};\n\nconst selectOptions = (component) => {\n  const entOpt = ['Singing', 'Rap', 'Dance', 'Comedy', 'Acting', 'Modeling', 'Poetry', 'Any Other']\n  const handworkOpt = ['Cooking', 'Driving', 'Fishing','Farming','Fashion Design','Visual Arts','Photography','Hair','Any Other']\n  const sportsOpt = ['Athletics', 'Soccer', 'BasketBall', 'Tennis', 'Fitness', 'VolleyBall', 'Any Other'];\n  if(component === \"entertainment\") return entOpt;\n  if(component === \"handwork\") return handworkOpt;\n  if(component === \"sports\") return sportsOpt;\n  return []\n};\n\nconst DisplayUploadError =()=>{\n  const { uploadResponse } = useSelector(state => state.navBar);\n  return(\n    uploadResponse.error? \n    <div className=\"media-upload-error\">\n      WARNING: { uploadResponse.error }\n    </div>\n    :null\n  )\n};\n\nconst FORM = ({ closeModal, setIsSubmitted }) =>{\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [submitted, setSubmitted] = useState(false);\n  const [postBody, setPostBody] = useState(null);\n\n  const [formFieldErr, setFormFieldErr] = useState({subCategory:false,title:false, message:\"\"});\n  const { user } = useSelector(state => state.user);\n  const { uploadResponse, component} = useSelector(state => state.navBar);\n  const { posts } = useSelector((state) => component && component !==\"academia\" ? state[component]:{});\n  const {error, success} = uploadResponse;\n  const [title, setTitle] = useState(\"\");\n  const [isFocus, setIsFocus] = useState(\"\");\n\n  useEffect(()=>{\n    dispatch(\n      setUploadResponse({...uploadResponse, error:formFieldErr.message})\n    )\n  },[formFieldErr.message]);\n\n  // Only createPost when media_ids are ready\n  useEffect(() => {\n    if(postBody !== null){\n      let body = {};\n      if(success.thumb){\n        if(success.video && success.image){ // Video uploads\n          body = {\n            ...postBody,\n            fileType:\"video\",\n            media_id:{video:success.video.media_id, image:success.image.media_id},\n            ORDER:success.video.ORDER, //Determines video compression phase\n          };\n  \n          uploadPloast(body)\n        }\n      }\n      else{\n        if(success.image){ // Image uploads\n          body = {\n            ...postBody,\n            fileType:\"image\",\n            media_id:{image:success.image.media_id}\n          }\n  \n          uploadPloast(body)\n        }\n      }    \n    }\n  }, [uploadResponse.success, postBody]);\n\n  const uploadPloast = (postBody) =>{\n    _useAxios(\"POST\", postBody, \"posts\").then(res =>{  \n      \n      setPostBody(null) // reset upload body\n      setSubmitted(false) //Used by current comp.\n      setIsSubmitted(false) //For Parent component\n\n      // Merge created post with already cached posts\n      dispatch(fetchPosts([res.data.post, ...posts], component.toUpperCase()));\n\n      // Update user's isContestant in local cache \n      dispatch(fetchUserSuccess({...user, isContestant: true}));\n\n      const toastCallBack = () =>{\n        // Set largeView for test results viewing\n        new ProfileAction(dispatch).setIsModal(true, res.data.post);\n\n        const profileUrl = user.username.split(\" \").join(\"\");\n        navigate(\n          `/${profileUrl}`,\n        {\n          state:{\n            id:user._id,\n            profileTab:\"post\"\n          }\n        }\n        );\n      }\n\n      closeModal();\n\n      // Go for the final phase of video transcoding\n      if(res.data.ORDER === \"INIT\"){\n        dispatch(setUploadResponse({ error:\"\", success:{video:{ORDER:\"FINALE\", media_id:res.data.media_id, post_id:res.data.post.id}}}))\n      }else{\n        dispatch(setUploadResponse({ error:\"\", success:{video:null, image:null, thumb:\"\"}})) // Reset uploadResponse\n      }\n\n      dispatch(showAlert({main:\"Post uploaded.\", subMain:\"View\", alertName:\"upload\", onClick:toastCallBack}, component));\n    \n    }).catch(err =>{\n      setFormFieldErr(prev => ({...prev, message: err.response.data.message}))\n    });\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n\n    const{ subCategory } = e.target;\n\n    if(!title && subCategory.value ===\"Default\"){\n      return setFormFieldErr({title:true,subCategory:true, message:\"Category and title fields are required!\"})\n    }\n    else{\n      setFormFieldErr({title:false,subCategory:false, message:\"\"})\n    };\n\n    if(subCategory.value ===\"Default\") return setFormFieldErr({title:false,subCategory:true, message:\"Category is required!\"})\n\n    if(!title) return setFormFieldErr({title:true,subCategory:false, message:\"Title is required!\"});\n\n    setSubmitted(true) //Used by current comp.\n    setIsSubmitted(true) //For Parent component\n    setPostBody({\n      title,\n      category:component,\n      subCategory:subCategory.value\n    });\n  };\n\n  const handleFormErr =(e)=>{\n    const { name } = e.target;\n    setFormFieldErr(prev =>{\n      prev = { ...prev, [name]:false}\n      if(!prev.title && !prev.subCategory) prev.message=\"\"; \n      return prev\n    })\n  }\n\n  return(\n    <form onSubmit={handleSubmit} onChange={handleFormErr}>\n    <div className=\"uploadModal-formInputs\">\n      <select \n      name=\"subCategory\" \n      disabled={(submitted)? true:false}\n      className={formFieldErr.subCategory? \"empty-field\":null}\n      defaultValue={\"Default\"}\n      >\n        <option value=\"Default\" disabled>Select category</option>\n        {selectOptions(component).map((option, index) =><option key={index.toString()} value={option.toLocaleLowerCase()}>{option}</option>)}\n      </select>\n      <input \n      type=\"text\" \n      name=\"title\"\n      value={title} \n      placeholder=\"Add a title\" \n      onFocus={() => setIsFocus(true)}\n      onChange={({ target }) =>{\n        if(target.value.length > 30) return; \n        setTitle(target.value)\n      }}\n      disabled={submitted? true:false}\n      className={formFieldErr.title? \"empty-field\":null} \n      />\n      </div>\n      {isFocus? <div className={`post-title-char-count ${title.length >29? \"char-count-red\":null}`}> {title.length}/30 </div> :null}\n      <div className=\"uploadModal-formBtn\">\n        <button disabled={(error || submitted)? true:false}>\n        <p>Submit</p>\n        </button>\n      </div>\n    </form>\n  )\n};\n\n// Will process video files\nconst HandleVidUpload = ({ videoRef, src }) =>{\n  const dispatch = useDispatch();\n  const { uploadResponse } = useSelector(state => state.navBar);\n  const video = document.createElement(\"video\"); //Create vid elem for grabbing thumbnail\n\n  if(uploadResponse.success.thumb){\n    getPoster();\n  }\n\n  // Grabs uploaded video thumbnail and sends to server \n  function onVideoLoad({ target }){\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = target?.videoWidth\n    canvas.height = target?.videoHeight;\n    canvas.getContext(\"2d\").drawImage(target, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob((blob =>{\n      if(!videoRef.current || videoRef.current.blob) return  //Avoids double-run\n      videoRef.current.blob = blob;\n      uploadToServer(blob, \"video-thumb\", dispatch); // Send to server\n\n      video?.removeEventListener(\"loadeddata\",onVideoLoad);\n    }), \"image/jpeg\", .27);\n  }\n\n  function getPoster(){\n    video.preload = \"metadata\";\n    video.src = src;\n    video.muted = true;\n    video.playsInline = true;\n    video.play().then(() =>{}).catch(e =>{});\n    video.addEventListener(\"loadeddata\",onVideoLoad);\n  };\n\n  return null\n}\n\nconst UploadModal = ({ isUploadModal }) => {\n  const dispatch = useDispatch();\n  const upload = useSelector(state => state.navBar.upload);\n  const [submitted, setIsSubmitted ] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    if(upload){ \n      setType(upload.type)\n      setUrl(URL.createObjectURL(upload))\n    };\n  },[upload]);\n\n  const closeModal = () => {\n    URL.revokeObjectURL(url);\n    dispatch(setUpload(\"\"));\n    dispatch(setModal(\"upload\", false));\n    dispatch(setUploadResponse({error:\"\", success:{}}));\n  };\n\n  return (\n    <BackDrop isModal={isUploadModal} handleModal={closeModal} overflow={submitted?\"backdrop-overflow\":null}>\n      <div className=\"uploadModal-container\">\n        <div className=\"uploadModal-closeBtn\" onClick={closeModal}>\n          <button onClick={closeModal}>\n            <AiOutlineClose size={20}/>\n          </button>\n        </div>\n        <div className=\"uploadModal-contents\">\n          <DisplayUploadError/>\n          <div className=\"uploadModal-media\">\n          {upload ? getMedia(type, url, videoRef): \"\"}\n          </div>\n          <div className=\"uploadModal-forms\">\n          <FORM closeModal={closeModal} setIsSubmitted={setIsSubmitted}/>\n          </div>\n        </div>\n      </div>\n      <UploadSpinner canSpin={submitted}/> \n      {type ===\"video/mp4\"?<HandleVidUpload videoRef={videoRef} src={url}/>: null}\n    </BackDrop>\n  );\n};\nexport default UploadModal;","import { useSelector } from \"react-redux\";\nimport UploadModal from \"./upload_modal\"\n\nexport default function Index (){\n  const isUploadModal = useSelector(state => state.navBar.isUploadModal);\n\n  return(\n    isUploadModal ? <UploadModal isUploadModal={isUploadModal}/> : null\n  )\n}","import \"./../../styles/main.css\";\nimport Panel from \"./../shared/panel\";\nimport Navbar from \"../navigation/navbar\";\nimport NavbarFlex  from \"../navigation/navbar_flex\";\nimport { Outlet } from \"react-router-dom\";\nimport LeaderboardLarge from \"../leaderboard/leaderboard_large\";\nimport Drawer from '../Modal/drawer/index';\nimport ErrorModal from '../Modal/errorModal'\nimport ShareModal from \"../Modal/shareModal\";\nimport UploadModal from \"../Modal/uploadModal/index\";\nimport BoardContextProvider from \"./../leaderboard/contexts/leaderboardContext\";\nimport { FulfillABR } from \"../../utils/handleMediaUpload\";\n\nconst Home = () => {\n  return (\n    <div className=\"wrapper\">\n      <ErrorModal/> {/**Keeping this here to avoid overriding float Btn in Academia */}\n      <div className=\"home-container\">\n        <div className=\"home-container-left\">\n          <Panel />\n        </div>\n        <div className=\"home-container-right\">\n         <NavbarFlex/>\n          <Navbar UploadModal={UploadModal}/>\n          <div className=\"home-contents\">\n            <section className=\"home-contents-main\">\n            \n            <Outlet />\n\n            </section>\n            <section className=\"home-contents-panel\">\n              <BoardContextProvider>\n                <LeaderboardLarge/>\n              </BoardContextProvider>\n            </section>\n          </div>\n        </div>\n      </div>\n      <Drawer/>\n      <ShareModal/>\n      <UploadModal/>\n      <FulfillABR/>\n    </div> \n  );\n};\n\nexport default Home;","import { useNavigate } from \"react-router-dom\";\n\nconst NotFound = () =>{\n  const navigate = useNavigate();\n\n  return(\n    <div className=\"e-404\">\n      <p>Sorry..., but that page does not exist.</p>\n      <button onClick={() => navigate(-1)}>\n        Go back\n      </button>\n    </div>\n  )\n}\n\nexport default NotFound; ","\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LargeView  from \"../profile/LargeView\";\nimport NotFound from \"./../error/404\";\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport _useAxios from \"../../utils/_useAxios\";\nimport ProfileAction from \"../../redux/profile/action\";\n\nconst FeedLargeView = () =>{\n  const { postId } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { state={} } = useLocation();\n  const profileAction = new ProfileAction(dispatch);\n  const { shared } = useSelector(state => state[\"profile\"])\n  const [ status, setStatus ] = useState({});\n  \n  useEffect(() => {\n    // Get a single post \n    if(!Object.keys(shared.modalItem).length){\n      _useAxios(\"GET\", {}, `posts/${postId}`)\n      .then((resp) =>{\n        profileAction.setIsModal(true, resp.data.data) //Set item for large view\n      })\n      .catch((err) =>{\n        // console.log(\"getPostErr: \",err.response)\n        setStatus(err.response.status);\n      });\n    };\n\n  },[])\n\n  // Takes user back to home page on modal close\n  const closeView = () =>navigate(state.from);\n\n  const render = () =>{\n    if(status === 404 || status === 500){\n      return(\n        <NotFound/>\n      )\n    };\n\n    // Try using view directly here to see if it decreases the content load latency\n    return(\n      <LargeView\n      profileAction={profileAction}\n      tabType=\"post\"\n      closeView={closeView}\n      />\n    );\n  }\n\n  return render();\n};\n\nexport default FeedLargeView;;","import {useEffect, memo} from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport {useSelector,useDispatch} from 'react-redux';\nimport getMedia from \"./getMedia\";\nimport { BsArrowUp } from \"react-icons/bs\";\nimport { IoMdShareAlt } from \"react-icons/io\";\nimport Format from \"../../utils/Format\";\nimport { canVote } from \"../../utils/verify\";\nimport FeedAction from \"../../utils/FeedAction\";\nimport { AVATAR, FEEDIMG } from \"../../utils/imageParams\";\nimport ProfileAction from \"../../redux/profile/action\";\nimport { showAlert } from \"../../redux/utils/postActions\";\nimport Toast from \"./toast\";\n\nconst FeedItem = ({item, isFetching, parentName}) =>{\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const{user} = useSelector(state => state.user);\n  const feedState = useSelector(state => state);\n  const {postIdSaver} = feedState[parentName];\n  const format = new Format();\n  const feedAction = new FeedAction(postIdSaver,parentName,dispatch)\n\n  // Observes the entire page to enable infinite scroll\n  const handleObserver = (fileType)=>{\n    const feed = feedState[parentName].posts; //Gets posts for infinite loading below\n\n    let options = {\n      root:null,\n      rootMargin: '0px',\n      threshold: [0,0.25,0.5,0.75,1]\n    };\n\n    let observer = new IntersectionObserver((entries) =>{\n      entries.forEach((entry, i)=>{\n        if(entry.isIntersecting){\n          // Observes for play/pause of multimedia element\n          if(fileType === \"video\"){\n            // Play media on intersection\n            if(entry.intersectionRatio >=0.85){\n              entry.target?.player?.play().then(resp =>{}).catch(err =>{});\n            }\n\n            // Pause media on off-intersection\n            if(entry.intersectionRatio < 0.85){\n              entry.target?.player?.pause();\n              entry.target?.player?.volume(0);\n            };  \n          }\n\n          // Observes for infite loading\n          if(feed.length >=2){\n            if((entry.intersectionRatio >= .1) && (entry.target.id === feed[feed.length - 3]._id)) {\n              isFetching(true);\n            } else{ //else if(entry.target.id !== feed[feed.length - 2]._id) \n              isFetching(false);\n              \n            }   \n          }  \n        }\n      })\n    },options);\n\n    return observer;\n  };\n  \n  useEffect(() => {\n    // 1. Define the needed variable\n    const observeItem=document.getElementById(item._id);\n\n    // 2. Start the observing process\n    const observer = handleObserver(item.fileType);\n    \n    // 3. Subscribe to observing events\n    observer.observe(observeItem);\n\n    // 4. Unsubscribe from observing events\n    return()=>observer.unobserve(observeItem);\n  },[]);\n\nreturn (\n  <div className=\"feed-item-container\"\n  onClick={()=>{\n    new ProfileAction(dispatch).setIsModal(true, item);\n    navigate(`/uploads/${item._id}`, {state:{...item, from:pathname}})\n  }} \n  >\n    <div className=\"feed-item-contents\">\n    <div className=\"feed-item-top\">\n      <div className=\"feed-user\">\n      <AVATAR\n      src={item.creatorId.photo}\n      alt={`Avatar of ${item.creatorId.username}`}\n      />\n\n      </div>\n      <div className=\"feed-user-info\">\n        <section className=\"feed-user-name\">\n          {item.creatorId.username} \n          <span> &middot; {format.createdAt(item.createdAt)}</span>\n        </section>\n          \n        <div className=\"feed-subcat-title-container\">\n          {item.subCategory} &middot; {item.title}\n        </div>\n      </div>\n    </div>\n    <div className=\"feed-media\">\n      {getMedia(FEEDIMG, item)}\n    </div>\n    <div className=\"feed-actions\">\n      {\n        feedAction.hasUpVoted(item.upvotes,item._id,user._id)? \n        <button style={{backgroundColor:'#32df9d1a',color:'#45e2a4', cursor:'default', fontWeight:'bold'}}>\n          <BsArrowUp size={20} color={'#45e2a4'}/>\n          <span>upvoted</span>\n        </button>\n        : \n        <>\n        {window && window.__item_id__ === item._id && <Toast parentName={parentName} className={\"bonus-alert\"} alertType={\"bonus\"} timeOut={1200}/>}\n        <button \n          disabled={item.creatorId._id === user._id}  \n          onClick={(e)=>{\n            // Allow user cast vote if a contestant\n            if(canVote(user.isContestant, dispatch)){\n              dispatch(showAlert({main:\"bonus: \", subMain:\"+1\", alertName:\"bonus\", onClick:null}, parentName ))\n\n              if(typeof window !== \"undefined\") window.__item_id__ = item._id;\n\n              // Timer allows for animation\n              const timer = setTimeout(() =>{\n                feedAction.createUpvote(item);\n                clearTimeout(timer);\n              },1210);\n            };\n            e.stopPropagation();\n          }}>\n            <BsArrowUp size={20}/>\n            <span>upvote</span>\n          </button>\n        </>\n      }\n      <button onClick={(e) =>{\n        feedAction.sharePost(item);\n        e.stopPropagation();\n      }}>\n      <IoMdShareAlt size={20} />\n      <span>share</span>\n      </button>\n    </div>\n    </div>\n  </div>\n);\n};\nexport default memo(FeedItem);","import {useEffect, useRef, memo} from \"react\";\nimport {useDispatch} from 'react-redux';\nimport FeedItem from \"./FeedItem\";\nimport Toast from \"./toast\";\nimport {AiOutlineUpload } from \"react-icons/ai\";\nimport { VariableSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport {saveScroll} from \"../../redux/utils/postActions\";\n\nconst Feed = memo(({feed,isFetching,parentName,scrollPosition}) =>{\n  const dispatch = useDispatch();\n  // Avoids any duplicate feeditems\n  const inFeed =[];\n  feed = feed.filter((feedItem) =>{\n    if(!inFeed.includes(feedItem._id)){\n      inFeed.push(feedItem._id);\n      return feedItem;\n    }\n  })\n  \n  // Set users current scroll position\n  let scrollRef = useRef(0);\n  const onScroll =({scrollOffset})=>{\n    scrollRef.current = scrollOffset;\n  };\n\n  useEffect(() =>{\n    return()=>{\n      dispatch(saveScroll(scrollRef.current,parentName.toUpperCase()));\n    }\n  },[parentName])\n\n  \n  // Render each item as a row\n  function RenderFeedItem({index,style}){\n    const item = feed[index]\n    return (\n      <div style={style}>\n      <FeedItem \n        item={item}  \n        parentName={parentName}\n        isFetching={isFetching} \n      />\n      </div>\n    )\n  };\n\n  // Assign Height to each FeedItem:[Look into making this responsive]\n  const getFeedItemHeight = () => 470;\n\n  // Get the total number of items\n  const feedLength = feed.length;\n\n  return (\n    <div style={{width:\"100%\",height:\"100%\"}}>\n      <Toast parentName={parentName} alertType={\"upload\"} timeOut={5500}/>\n      <AutoSizer>\n        {({height,width}) =>(\n          <div className=\"feed-container\">\n          <div className=\"feed-contents\">\n            <List\n            width={width}\n            height={height}\n            overscanCount={10}\n            onScroll={onScroll}\n            itemCount={feedLength}\n            itemSize={getFeedItemHeight}\n            initialScrollOffset={scrollPosition}\n            // itemData={feed}\n            // {...cellMeasurerProps}  \n            // estimatedItemSize={440}\n            // ref={restoreScrollPosition} \n            // onItemsRendered={onItemsRendered} \n            >\n            {RenderFeedItem}\n            </List>\n          </div>\n          <label  className=\"feed-float-btn\" htmlFor=\"doc_uploads\">\n            <span><AiOutlineUpload size={28} color={\"#ffffff\"}/></span>\n          </label>\n          </div>\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n,\n  (prevProps, nextProps) => {\n    if(prevProps.parentName === nextProps.parentName && prevProps.feed.length !== nextProps.feed.length){\n      return false;\n    }\n    return true;\n  }\n);\n\nexport default Feed; ","import {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport renderLoader from '../../utils/Loader';\nimport {setCurrentComponent} from '../../redux/navBar/NavActions';\n\nconst Entertainment = ({ parentName, Feed, PostQuery }) =>{\n  const dispatch = useDispatch();\n  const {entertainment} = useSelector(state => state);\n  const [postsFinished, setPostsFinished] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const parentState = entertainment;\n  const feedCount=entertainment.posts.length\n  const postQuery = new PostQuery(parentName,parentState,setShowLoader,dispatch);\n\n  // Tells NavBar what component is in display\n  useEffect(()=>{\n    dispatch(setCurrentComponent(\"entertainment\"))\n    return()=>{\n      dispatch(setCurrentComponent(undefined));\n    }   \n  },[]);\n\n  //Call the getPost function\n  useEffect(()=>{\n    if(!feedCount || showLoader){\n      if(!postsFinished && !entertainment.postsFinished){\n        postQuery.getPosts(setPostsFinished)\n      }else{\n        setShowLoader(false)\n      }\n    }\n  },[showLoader, entertainment.nextCursor]);\n\n  //Call the fetching function\n  const isFetching=(boolType)=>{\n    if(boolType){\n      postQuery.setFetching()\n    }\n  }\n\n  return (\n    <div id=\"entertain\">\n      {!feedCount && renderLoader()}\n      <Feed \n      feed={entertainment.posts} \n      isFetching={isFetching} \n      parentName=\"entertainment\"\n      scrollPosition={entertainment.scrollPosition}/>\n    </div>\n  )\n}\nexport default Entertainment;","import {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport renderLoader from '../../utils/Loader';\nimport {setCurrentComponent} from '../../redux/navBar/NavActions';\n\nconst HandWork = ({ parentName, Feed, PostQuery }) =>{\n  const dispatch = useDispatch();\n  const {handwork} = useSelector(state => state);\n  const [postsFinished, setPostsFinished] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const parentState = handwork;\n  const feedCount=handwork.posts.length\n  const postQuery = new PostQuery(parentName,parentState,setShowLoader,dispatch);\n\n  // Tells NavBar what component is in display\n  useEffect(()=>{\n    dispatch(setCurrentComponent(\"handwork\"))\n    return()=>{\n      dispatch(setCurrentComponent(undefined));\n    }   \n  },[]);\n\n  //Call the getPost function\n  useEffect(()=>{\n    if(!feedCount || showLoader){\n      if(!postsFinished && !handwork.postsFinished){\n        postQuery.getPosts(setPostsFinished);\n      }else{\n        setShowLoader(false);\n      }\n    }\n  },[showLoader, handwork.nextCursor]);\n\n  //Call the fetching function\n  const isFetching=(boolType) =>{\n    if(boolType){\n      postQuery.setFetching();\n    }\n  }\n\n  return (\n    <div id=\"entertain\">\n    {!feedCount && renderLoader()}\n    <Feed \n      feed={handwork.posts} \n      isFetching={isFetching} \n      parentName=\"handwork\"\n      scrollPosition={handwork.scrollPosition}/>\n    </div>\n  )\n}\nexport default HandWork;","import {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport renderLoader from '../../utils/Loader';\nimport {setCurrentComponent} from '../../redux/navBar/NavActions';\n\nconst Sports = ({ parentName, Feed, PostQuery }) =>{\n  const dispatch = useDispatch();\n  const {sports} = useSelector(state => state);\n  const [postsFinished, setPostsFinished] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n\n  const parentState = sports;\n  const feedCount=sports.posts.length\n  const postQuery = new PostQuery(parentName,parentState,setShowLoader,dispatch);\n\n  // Tells NavBar what component is in display\n  useEffect(()=>{\n    dispatch(setCurrentComponent(\"sports\"))\n    return()=>{\n      dispatch(setCurrentComponent(undefined));\n    }   \n  },[]);\n\n  //Call the getPost function\n  useEffect(()=>{\n    if(!feedCount || showLoader){\n      if(!postsFinished && !sports.postsFinished){\n        postQuery.getPosts(setPostsFinished);\n      }else{\n        setShowLoader(false);\n      }\n    }\n  },[showLoader, sports.nextCursor]);\n\n  //Call the fetching function\n  const isFetching=(boolType) =>{\n    if(boolType){\n      postQuery.setFetching();\n    }\n  }\n\n  return (\n    <div id=\"entertain\">\n    {!feedCount && renderLoader()}\n    <Feed \n    feed={sports.posts} \n    isFetching={isFetching} \n    parentName=\"sports\"\n    scrollPosition={sports.scrollPosition}/>\n    </div>\n  )\n}\nexport default Sports;","import {useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { BsPencil,BsFileText } from 'react-icons/bs';\nimport {IoTrendingUpOutline} from 'react-icons/io5';\nimport Format from \"../../utils/Format\";\nimport TestModal from \"../Modal/testModal\";\nimport { canContest } from \"../../utils/verify\";\nimport { fetchUserSuccess } from \"../../redux/user/UserAction\";\nimport {setModal, setErrMesage, setCurrentComponent} from '../../redux/navBar/NavActions';\n\nconst Academia = ()=> {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const format  = new Format();\n  const{user} = useSelector(state => state.user);\n  const { isTestModal, error } = useSelector((state) => state.navBar);\n\n  // Tells NavBar what component is in display\n  useEffect(() => {\n    dispatch(setCurrentComponent('academia'));\n\n    let timerId;\n    // used this for programmatically calling modal\n    if(error.errAction){\n      timerId = setTimeout(()=>{\n        document\n        .querySelector(\"label[for='doc_uploads']\")\n        .click();\n\n        dispatch(setErrMesage({type:\"\", message:\"\", errAction:false}));\n      },5);\n    }\n\n    return () =>{\n      dispatch(setCurrentComponent(undefined));\n      clearTimeout(timerId);\n    }\n  },[]);\n\n  const closeModal = ()=> dispatch(setModal(\"test\", false));;\n\n  const _useModal = () => ({isTestModal, closeModal})\n\n  const modalOptions = {\n    header:\"Test Mode Confirmation\", //Text to display as the header of modal\n    subHeader:\"Please choose the mode/type of test to take below.\", //Text to display as sub-header of Modal\n    choice:[\"Practice\",\"Contest\"], //Users options to choose from\n    choiceParams:[\"practice\",\"contest\"], //Parameters to be passed to functions of the users choice option\n    callback: navToTest\n  };\n\n  function navToTest(testMode){\n    closeModal(); // close the modal\n    \n    // Check user's coin availability\n    if(testMode === \"contest\"){\n      if(!canContest(user.coins, dispatch)) return;\n    };\n\n    // clean user testSession incase of prev saved session\n    dispatch(\n      fetchUserSuccess({\n        ...user,\n        testSession:{\n          candidateId:\"kddd\" //used in TestRoute comp\n        }\n      })\n    )\n    // Set mode to localStorage \n    localStorage.setItem(\"testMode\", testMode);\n\n    navigate('/test', {state:{ testMode }, replace:true});\n  };\n\n  return (\n    <div id=\"academia\">\n    <div className=\"academia-item\">\n      <h3 className=\"academia-item-title\">Stats</h3>\n      <div className=\"academia-test-stats-container\">\n        <div className=\"academia-test-stats-item\">\n          <span>{(user.points && format.points(user.points.academia)) || 0 }</span>\n          <p>Avgerage Total</p>\n        </div>\n\n        <div className=\"academia-test-stats-item\">\n          <span>{(user.testSession && format.points(user.testSession.recentScore)) || 0 }</span>\n          <p>Recent Score</p>\n        </div>\n\n        <div className=\"academia-test-stats-item\">\n          <span>{(user.ranks && format.rank(user.ranks.academia)) || 0 }</span>\n          <p>Ranking</p>\n        </div>\n      </div>\n    </div>\n    <div className=\"academia-item\">\n      <h3 className=\"academia-item-title\">FACTS</h3>\n\n      <div className=\"academia-test-facts\">\n        <div className=\"academia-test-facts-item\">\n        <div className=\"test-facts-item-header\"> \n        <span className=\"icon\"><BsFileText/></span> \n        <span className=\"\">Coverage</span>\n        </div>\n        <ul>\n          <li>Writing</li>\n          <li>Reading</li>\n          <li>Speaking</li>\n          <li>Listening</li>\n        </ul>\n    </div>\n\n      <div className=\"academia-test-facts-item\">\n      <div className=\"test-facts-item-header\"> \n      <span className=\"icon\"><IoTrendingUpOutline/></span> \n      <span className=\"\">Difficulty</span>\n      </div>\n      <ul>\n        <li>Answerable</li>\n        <li>~2hrs Duration</li>\n        <li>15Q per section</li>\n        <li>Unlimited trials</li>\n      </ul>\n      </div>\n\n      <div className=\"academia-test-facts-item\">\n        <div className=\"test-facts-item-header\"> \n        <span className=\"icon\"><BsPencil/></span> \n        <span className=\"\" id=\"sit-mode\">Sit-Mode</span>\n        </div>\n\n        <ul>\n          <li>Short answers</li>\n          <li>Multiple choice</li>\n          <li>Voice recording</li>\n        </ul>\n      </div>\n      </div>\n    </div>\n    <label  className=\"feed-float-btn\" htmlFor=\"doc_uploads\">\n      <span><BsPencil size={28} color=\"#ffffff\"/></span>\n    </label>\n\n    {isTestModal?<TestModal {...{...modalOptions, _useModal}}/>:null}\n    </div>\n  )\n}\nexport default Academia;","import _useAxios from \"../../utils/_useAxios\";\nimport {fetchPosts,nextCursor,isPostsFinished,saveScroll} from \"./postActions\";\n\n/**\n * The PostQuery constructor func exposes methods \n * \n * for updating the posts of the feed categories\n * \n * i.e Entertainment, Sports and HandWork\n * \n */\n\nclass PostQuery{\n  constructor(parentName,parentState,setShowLoader,dispatch){\n    this.parentName = parentName;\n    this.parentState = parentState;\n    this.setShowLoader = setShowLoader;\n    this.dispatch = dispatch;\n  }\n\n  // Need the capital form of parent for Redux\n  capParentName(){\n    return this.parentName.toUpperCase();\n  }\n\n  // Get all posts\n  getPosts(setPostsFinished){\n    this.setShowLoader(true);\n\n    let params={\n      nextCursor:this.parentState.nextCursor || null,\n      category:this.parentName\n      // countryFrom:user.countryFrom,\n      // countryTo:user.countryTo,\n    };\n    _useAxios(\"GET\",params,\"posts\").then(response=>{\n      if(response.data.posts.length){\n        // indicates there is still posts available in the database\n        setPostsFinished(false)\n        this.dispatch(isPostsFinished(false,this.capParentName()));\n\n        //Add new posts to old posts already in state\n        let newPostsArr = [...this.parentState.posts, ...response.data.posts];\n        this.dispatch(fetchPosts(newPostsArr,this.capParentName()))      \n      }else{\n        // Stop any further posts fetching as there is no more in the database\n        this.dispatch(isPostsFinished(true,this.capParentName()));\n        setPostsFinished(true);\n        \n        // Stop displaying fetching indicating spinner\n        this.setShowLoader(false);\n      };\n\n    }).catch(err =>console.log(err));\n  }\n\n  // Update next cursor when fetching posts\n  setFetching(){\n    if(!this.parentState.postsFinished){\n      this.dispatch(saveScroll(0,this.capParentName()));\n  \n      // 2) Get Next cursor(_id) for next pagination\n      const cursor = this.parentState.posts[this.parentState.posts.length - 1]._id;\n      this.dispatch(nextCursor(cursor,this.capParentName()));\n      \n      // 3) set spinner to indicate fetching\n      this.setShowLoader(true);\n    }else{\n      this.setShowLoader(false);\n    }\n  }\n}\nexport default PostQuery;","import Feed from './feed';\nimport Entertainment from '../entertainment/entertainment';\nimport HandWork from \"../handwork/handwork\";\nimport Sports from \"../sports/sports\";\nimport Academia from \"../academia/academia\"\nimport PostQuery from \"../../redux/utils/postQuery\";\n\nconst ParentCategory = (props) =>{\n  switch(props.parentName){\n    case \"entertainment\":\n      return <Entertainment {...props}/>;\n\n    case \"handwork\":\n      return <HandWork {...props}/>\n\n    case \"sports\":\n      return <Sports {...props}/>\n\n    default:\n      return <Academia/>\n  }\n};\n\nconst FeedIndex = ({ parentName }) =>{\n  return (\n    <ParentCategory\n    parentName={parentName} \n    PostQuery={PostQuery} \n    Feed={Feed}\n    />\n  )\n}\nexport default FeedIndex;","import AuthContext from \"./AuthContext\";\n\nconst Protector = ({ children, isTakingTest, pathname, useEffect, navigate}) =>{\n\n  useEffect(() => {\n    if(!isTakingTest) return navigate(\"/home\", { replace: true});\n\n  },[pathname])\n\n  // Keep user here if has testSession\n  const render=() =>{\n    if(isTakingTest) return children\n\n    return null\n  };\n\n return render()\n};\n\nconst TestAuth = ({ children }) => <AuthContext Protector={Protector}>{children}</AuthContext>\nexport default TestAuth","import {Routes,Route} from 'react-router-dom';\nimport ReRoute from \"./components/routes/ReRoute\";\nimport Private from \"./components/routes/Private\";\nimport Public from \"./components/routes/Public\"; \nimport Login from  \"./components/auth/Login\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport Signup from \"./components/auth/Signup\";\nimport SponsorfyTv from \"./components/media/sponsorfy_ty\";\nimport Pricing from \"./components/pricing/pricing\";\nimport Account from \"./components/settings/account\";\nimport PasswordChange from \"./components/settings/password_change\";\nimport Settings from \"./components/settings/settings\";\nimport Profile from \"./components/profile/profile\";\nimport Test from \"./components/test/Test\";\nimport MarkTest from \"./components/test/markTest\";\nimport LeaderBoardMobile from \"./components/leaderboard/leaderboard_small\";\nimport Home from \"./components/home/home\";\nimport FeedLargeView from \"./components/feed/feedLargeView\";\nimport FeedIndex from \"./components/feed/index\";\nimport TestAuth from \"./components/routes/TestRoute\"\n\n// import PrivacyPolicy from './components/company/privacy_policy';\n// import FAQs from './components/company/FAQs';\n// import Terms from './components/company/terms';\n// import AboutUs from './components/AboutUs';\n// import TermsOfService from './components/TermsOfService';\n// import HowItWorks from './components/how/HowItWorks';\n// import ContactUs from './components/ContactUs';\n\nconst App = () =>(\n  <Routes>\n    <Route path=\"/test\" element={ <TestAuth> <Test/> </TestAuth>}/>\n    <Route path=\"/test/marktest\" element={<Private> <MarkTest/> </Private>}/>\n\n    <Route path=\"/home\" element={<Private> <Home/> </Private>}>\n      <Route path=\"/home/\" element={<ReRoute to=\"/home/entertainment\"/>}/>\n      <Route path=\"/home/academia\" element={<FeedIndex parentName=\"academia\"/>}/>\n      <Route path=\"/home/entertainment\" element={<FeedIndex parentName=\"entertainment\"/>}/>\n      <Route path=\"/home/sports\" element={<FeedIndex parentName=\"sports\"/>}/>\n      <Route path=\"/home/handwork\" element={<FeedIndex parentName=\"handwork\"/>}/>\n    </Route>\n\n    <Route path=\"/settings\" element={<Private> <Settings/> </Private>}>\n      <Route path=\"/settings/\" element={<Account/>}/>\n      <Route path=\"/settings/change\" element={<PasswordChange/>}/>\n    </Route>\n\n    <Route path=\"/uploads/:postId\" element={<Private> <FeedLargeView/> </Private>}/>\n    <Route path=\"/:username\" element={<Private> <Profile/> </Private>}/>\n\n    <Route path=\"/leaderboard\" element={<Private> <LeaderBoardMobile/> </Private>}/>\n    <Route path=\"/sponsorfy-tv\" element={<Private> <SponsorfyTv/> </Private>}/>\n    <Route path=\"/coins\" element={<Private> <Pricing/> </Private>}/>\n\n    <Route path=\"/signup\" element={<Public> <Signup/> </Public>}/>\n    <Route path=\"/fp\" element={<Public> <ForgotPassword/> </Public>}/>\n    <Route path=\"/\" element={<Public> <Login/> </Public>}/>\n  </Routes>\n);\n\nexport default App;","import {FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_FAILURE, FETCH_USER_LOGOUT} from './UserActionType';\n\n\nconst initialState = {\n  loading: false,\n  user: {\n    testSession:{\n      candidateId:\"kddd\" //used in TestRoute comp\n    }\n  },\n  error:\"\"\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n\n    case FETCH_USER_SUCCESS:\n      return { \n        ...state, \n        loading: false,\n        user: action.payload\n      }\n\n    case FETCH_USER_FAILURE:\n      return {\n        ...state, \n        loading: false,\n        user: {},\n        error: action.payload\n      }\n\n  case FETCH_USER_LOGOUT:\n    return {\n      ...state,\n      user: {},\n    }\n\n    default:return state;\n  }\n}\n\nexport default userReducer;","import{ \n  FETCH_USER_POST,\n  FETCH_USER_TEST,\n  SET_USER_POST_CURSOR, \n  SET_USER_TEST_CURSOR, \n  IS_FETCHING_POST,\n  IS_FETCHING_TEST,\n  SAVE_POST_IDS, \n  SET_IS_MODAL,\n} from \"./ActionType\"\n\nconst initState = {\n  shared: {isModal:false,modalItem:{}},\n\n  test:{nextCursor: null, tests: [], isfecthing: true},\n\n  post:{nextCursor: null, posts: [], postIdSaver:[], isfecthing: true},\n};\n\nconst profileReducer = (state =initState, action)=>{\n  switch (action.type) {\n\n    case FETCH_USER_POST:\n      return{\n        ...state, post:{...state.post, posts:action.payload}\n      }\n  \n    case FETCH_USER_TEST:\n      return{\n        ...state, test:{...state.test, tests:action.payload}\n      }\n    \n    case IS_FETCHING_POST:\n      return{\n      ...state, post:{...state.post, isFetching:action.payload}\n      }\n\n    case IS_FETCHING_TEST:\n      return{\n      ...state, test:{...state.test, isFetching:action.payload}\n      }\n\n    case SET_USER_POST_CURSOR:\n      return{\n        ...state, post:{...state.post, nextCursor:action.payload}\n      }\n    \n    case SET_USER_TEST_CURSOR:\n      return{\n        ...state, test:{...state.test, nextCursor:action.payload}\n      }\n    \n    case `${SAVE_POST_IDS}_PROFILE`:\n      return{\n        ...state, post:{...state.post,postIdSaver:action.payload }\n      }\n\n    case SET_IS_MODAL:\n      return{\n        ...state, \n        shared:{\n          ...state.shared,\n          isModal:action.payload.isModal, \n          modalItem:action.payload.modalItem\n        }\n      }\n    default:return state;\n  }\n}\n\nexport default profileReducer;","import {IS_LOGGED_IN, LOG_IN, LOG_OUT, SIGN_UP, FORGOT_PASSWORD, RESET_PASSWORD, UPDATE_PASSWORD} from './AuthActionType'\n\nconst initAuthState = {\n  isUserLoggedIn: false,\n  user:{}\n};\n\n const authReducer = (state = initAuthState, action)=>{\n\n  switch(action.type) {\n    case IS_LOGGED_IN:\n      return {\n        ...state,\n        isUserLoggedIn:action.payload\n      };\n\n    case LOG_IN:\n      return {\n        ...state,\n        user:action.payload\n      };\n\n    case LOG_OUT:\n      return {\n        ...state,\n        isUserLoggedIn:action.payload\n      }\n\n    default:return state;\n  }\n};\n\nexport default authReducer","import {FETCH_POSTS,NEXT_CURSOR, POSTS_FINISHED,SAVE_POST_IDS, SHOW_ALERT,SAVE_SCROLL_POSITION} from '../utils/postActionTypes';\n\nconst initialEntState = {\n    loading: false,\n    nextCursor:\"\",\n    postsFinished:false,\n    posts: [],\n    postIdSaver:[], //this is used to push the id of every post the current user upvotes - This will enable the simulation of upvote-to-upvoted instead of relying on DB.\n    scrollPosition:0,\n    sharePost:{isModal:false,postDetails:{}}, //To be used by all post screens to show shareModal.\n    alertMessage:{\n      main:\"\",\n      subMain:\"\",\n      alertName:\"\", //either upload or bonus alert, etc.\n      onclick:null //Will be a callback  function if passed\n    }\n}\n\nconst entReducer = (state = initialEntState, action) =>{\n  switch (action.type){\n\n    case `${FETCH_POSTS}_ENTERTAINMENT`:\n      return {\n        ...state,\n        posts:action.payload,\n        loading:false\n      }\n\n    case `${NEXT_CURSOR}_ENTERTAINMENT`:\n      return {\n        ...state,\n        nextCursor: action.payload\n      }\n\n    case `${POSTS_FINISHED}_ENTERTAINMENT`:\n      return {\n        ...state,\n        postsFinished:action.payload\n      }\n\n    case `${SAVE_POST_IDS}_ENTERTAINMENT`:\n      return {\n        ...state,\n        postIdSaver:action.payload\n      }\n\n    case `${SHOW_ALERT}_ENTERTAINMENT`:\n      return {\n        ...state,\n        alertMessage:action.payload\n      }\n\n    case `${SAVE_SCROLL_POSITION}_ENTERTAINMENT`:\n      return {\n        ...state,\n        scrollPosition:action.payload\n      }\n\n    case \"SHARE_POST\":return {...state, sharePost:action.payload}\n    \n    default:return state\n  }\n\n}\nexport default entReducer;","import {FETCH_POSTS,NEXT_CURSOR, POSTS_FINISHED,SAVE_POST_IDS, SHOW_ALERT,SAVE_SCROLL_POSITION} from '../utils/postActionTypes';\n\nconst initState = {\n    loading: false,\n    nextCursor:\"\",\n    postsFinished:false,\n    posts: [],\n    postIdSaver:[], //this is used to push the id of every post the current user upvotes - This will enable the simulation of upvote-to-upvoted instead of relying on DB.\n    scrollPosition:0,\n    alertMessage:{\n      main:\"\",\n      subMain:\"\",\n      onclick:null //Will be a callback  function if passed\n    }\n}\n\nconst handworkReducer = (state =initState, action) =>{\n\n    switch (action.type){\n\n        case `${FETCH_POSTS}_HANDWORK`:\n            return {\n                ...state,\n                posts:action.payload,\n                loading:false\n            }\n\n        case `${NEXT_CURSOR}_HANDWORK`:\n            return {\n                ...state,\n                nextCursor: action.payload\n            }\n\n        case `${POSTS_FINISHED}_HANDWORK`:\n            return {\n                ...state,\n                postsFinished:action.payload\n            }\n\n        case `${SAVE_POST_IDS}_HANDWORK`:\n            return {\n                ...state,\n                postIdSaver:action.payload\n            }\n\n        case `${SHOW_ALERT}_HANDWORK`:\n          return {\n            ...state,\n            alertMessage:action.payload\n          }\n\n        case `${SAVE_SCROLL_POSITION}_HANDWORK`:\n            return {\n                ...state,\n                scrollPosition:action.payload\n            }\n\n        default:return state\n    }\n\n}\n\nexport default handworkReducer;","import {FETCH_POSTS,NEXT_CURSOR,POSTS_FINISHED,SAVE_POST_IDS, SHOW_ALERT,SAVE_SCROLL_POSITION} from '../utils/postActionTypes';\n\nconst initState = {\n    loading: false,\n    nextCursor:\"\",\n    postsFinished:false,\n    posts: [],\n    postIdSaver:[], //this is used to push the id of every post the current user upvotes - This will enable the simulation of upvote-to-upvoted instead of relying on DB.\n    scrollPosition:0,\n    alertMessage:{\n      main:\"\",\n      subMain:\"\",\n      onclick:null //Will be a callback  function if passed\n    }\n}\n\n\nconst sportsReducer = (state =initState, action) =>{\n\n    switch (action.type){\n\n        case `${FETCH_POSTS}_SPORTS`:\n            return {\n                ...state,\n                posts:action.payload,\n                loading:false\n            }\n\n        case `${NEXT_CURSOR}_SPORTS`:\n            return {\n                ...state,\n                nextCursor: action.payload\n            }\n\n        case `${POSTS_FINISHED}_SPORTS`:\n            return {\n                ...state,\n                postsFinished:action.payload\n            }\n\n        case `${SAVE_POST_IDS}_SPORTS`:\n            return {\n                ...state,\n                postIdSaver:action.payload\n            }\n\n        case `${SHOW_ALERT}_SPORTS`:\n          return {\n            ...state,\n            alertMessage:action.payload\n          }\n\n        case `${SAVE_SCROLL_POSITION}_SPORTS`:\n            return {\n                ...state,\n                scrollPosition:action.payload\n            }\n\n        default:return state\n    }\n\n}\n\nexport default sportsReducer;","import {SET_ACTIVATE_PAGE,SET_CURRENT_TYPE,SET_ANSWERS,SET_STATE_TEMPLATE} from './ActionTypes';\n\nconst initState = {\n  activePage:'one',\n  currentType:'reading',\n  stateTemplate:[], //used by testLeft comp to track saved answers\n\n  //user's saved answers\n  answerObj:{\n    isNewAnswer:false, //Only update db if user added a new answer and not on comp mount\n\n    answers:{\n      reading_ans:{\n        task_1:[],\n        task_2:[]\n      },\n  \n      listening_ans:{\n        task_1:[],\n        task_2:[]\n      },\n  \n      writing_ans:{\n        task_1:[],\n        task_2:[]\n      },\n  \n      speaking_ans:{\n        task_1:[],\n        task_2:[]\n      }\n    }\n  }\n};\n\nconst testReducer = (state = initState, action) =>{\n  switch (action.type){\n    case SET_ACTIVATE_PAGE:\n      return {\n        ...state,\n        activePage: action.payload\n      }\n\n    case SET_CURRENT_TYPE:\n      return {\n        ...state,\n        currentType: action.payload\n      }\n\n    case SET_ANSWERS:\n      return {\n        ...state,\n        answerObj: action.payload\n      }\n\n    case SET_STATE_TEMPLATE:\n      return {\n        ...state,\n        stateTemplate: action.payload\n      }\n\n    case \"RESE_TEST_STATE\":\n      return {\n        activePage:'one',\n        currentType:'reading',\n        stateTemplate:[],\n        answerObj:{}\n      }\n      \n    default:return state\n  }\n};\nexport default testReducer;","import {SET_UPLOAD,SET_TEST_MODAL,SET_UPLOAD_MODAL, SET_DRAWER_MODAL, SET_CURRENT_COMPONENT,SET_ERR_MESSAGE, SET_UPLOAD_RESPONSE} from './NavActionTypes';\n\nconst initState ={\n  upload:'', //File from user device\n  uploadResponse:{error:\"\", success:{video:null, image:null, thumb:false}}, //Response from file upload (server and client)\n  component:'',\n  error:{type:\"\", message:\"\", errAction:false},\n  isTestModal:false,\n  isUploadModal:false,\n  isDrawerModal:false\n};\n\nconst navReducer = (state = initState, action) =>{\n  switch (action.type) {\n    case SET_UPLOAD:\n      return {\n        ...state,\n        upload: action.upload\n      }\n\n    case SET_UPLOAD_RESPONSE: //Payload is an object\n      const keys = Object.keys(action.payload), key = keys[0];\n      const value = action.payload[key];\n      let { uploadResponse } = state;\n\n      if(keys.length > 1){\n       uploadResponse = {...uploadResponse, ...action.payload} //If both err and success provided\n\n      }\n      else{\n        if(key === \"success\"){\n          uploadResponse.success = {\n            ...uploadResponse.success, \n            ...value\n          }\n        }\n        else{\n          uploadResponse.error= value\n        }\n      };\n      \n      return {...state, uploadResponse};\n\n    case SET_TEST_MODAL:\n      return {\n        ...state,\n        isTestModal:action.payload\n      }\n\n    case SET_UPLOAD_MODAL:\n      return {\n        ...state,\n        isUploadModal:action.payload\n      }\n        \n    case SET_DRAWER_MODAL:\n      return {\n        ...state,\n        isDrawerModal:action.payload\n      }\n        \n    case SET_CURRENT_COMPONENT:\n      return {\n        ...state,\n        component: action.component\n      }\n\n    case SET_ERR_MESSAGE:\n      return {\n        ...state,\n        error: action.payload\n      }\n        \n    default:\n      return state;\n  }\n};\nexport default navReducer","import {SET_LEADERS,SET_PAGES,SET_LEADER_COUNT,SET_BOARD_ItEMS} from './LBActionTypes';\n\nconst initState = {\n\n    // Defines list of leaders categorically\n    leaders:{\n        all:[],\n        academia:[],\n        entertainment:[],\n        handwork:[],\n        sports:[],\n    },\n\n    // used for paginating results categorically\n    pages:{\n        all:1,\n        academia:1,\n        entertainment:1,\n        handwork:1,\n        sports:1,\n    },\n\n    //Used for counting total leaders in a category\n    leaderCount:{\n        all:{total:0,retrieved:0},\n        academia:{total:0,retrieved:0},\n        entertainment:{total:0,retrieved:0},\n        handwork:{total:0,retrieved:0},\n        sports:{total:0,retrieved:0}\n    },\n\n    //Toggles between score and leader boards\n    boardItems:{\n        boardType:\"\",\n        countDownTo:\"\",\n        scoreboardData:{}\n    }\n}\n\nconst leaderboardReducer = (state = initState, action) => {\n    switch(action.type) {\n\n        case SET_BOARD_ItEMS:\n            return {...state,boardItems:{...state.boardItems,...action.payload}}\n\n        case SET_LEADERS:\n            return { ...state,leaders:{...state.leaders,...action.payload} }\n\n        case SET_PAGES:\n            return { ...state, pages:{...state.pages,...action.payload} }\n        \n        case SET_LEADER_COUNT:\n            return { ...state, leaderCount:{...state.leaderCount,...action.payload}}\n  \n        default:\n            return state\n    }\n};\n\nexport default leaderboardReducer;","import {createStore, combineReducers} from 'redux';\nimport userReducer from './user/reducer'\nimport profileReducer from './profile/reducer';\nimport authReducer from './auth/AuthReducer';\nimport entReducer from './entertainment/reducer';\nimport handworkReducer from './handwork/reducer';\nimport sportsReducer from './sports/reducer';\nimport testReducer from './test/reducer';\nimport navReducer from './navBar/reducer';\nimport leaderboardReducer from \"./leaderBoard/reducer\"\n\nconst rootReducer = combineReducers({\n  auth:authReducer,\n  user:userReducer,\n  profile:profileReducer,\n  entertainment:entReducer,\n  handwork:handworkReducer,\n  sports:sportsReducer,\n  test:testReducer,\n  navBar:navReducer,\n  leaderboard:leaderboardReducer\n});\n\nexport default createStore(rootReducer);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useEffect, StrictMode} from 'react';\nimport { hydrate,render } from 'react-dom';\nimport App from './App';\nimport renderLoader from \"./utils/Loader\";\nimport {fetchUserSuccess} from \"./redux/user/UserAction\";\nimport { Provider } from 'react-redux';\nimport _useAxios from \"./utils/_useAxios\";\nimport store  from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\n//checks if user is logged in for user page refreshes/first visit\nfunction AppRoot(){\n  const auth_key = typeof window !== \"undefined\" && localStorage.getItem(\"auth_key\");\n\n  useEffect(() =>{\n    renderLoader();\n\n    if(auth_key){\n      _useAxios(\"GET\",{},\"users/me\").then(res=>{\n        \n        store.dispatch(fetchUserSuccess(res.data.user));\n\n        store.dispatch({ type:\"IS_LOGGED_IN\", payload:true });\n  \n      })\n      .catch(err=>{\n        if(err.response){\n          const{status, statusText} = err.response;\n          // const{message} = err.response.data;\n          if(status===401 && statusText ===\"Unauthorized\"){\n            localStorage.removeItem(\"auth_key\")\n          }\n  \n          store.dispatch({ type:\"IS_LOGGED_IN\", payload:false});\n        } else{\n          console.log(err)\n          // alert(\"Check your Internet connection\")\n        }\n      })\n    }\n  },[]);\n\n  return(\n    <StrictMode>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App/>\n        </BrowserRouter>\n      </Provider>\n    </StrictMode>   \n  )\n};\n\nrender(<AppRoot/>, document.getElementById(\"Judith-Mbonu\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n  // \"@testing-library/jest-dom\": \"^5.11.5\",\n  // \"@testing-library/react\": \"^11.1.1\",\n  // \"@testing-library/user-event\": \"^12.2.0\",\n  // --include=dev "],"sourceRoot":""}